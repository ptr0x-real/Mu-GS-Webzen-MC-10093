; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\SkillDelay.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CSkillDelay@@QAE@XZ				; CSkillDelay::CSkillDelay
PUBLIC	??1CSkillDelay@@UAE@XZ				; CSkillDelay::~CSkillDelay
PUBLIC	?Init@CSkillDelay@@QAEXXZ			; CSkillDelay::Init
PUBLIC	?Check@CSkillDelay@@QAEHE@Z			; CSkillDelay::Check
PUBLIC	??_GCSkillDelay@@UAEPAXI@Z			; CSkillDelay::`scalar deleting destructor'
PUBLIC	??_7CSkillDelay@@6B@				; CSkillDelay::`vftable'
PUBLIC	??_R4CSkillDelay@@6B@				; CSkillDelay::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSkillDelay@@@8				; CSkillDelay `RTTI Type Descriptor'
PUBLIC	??_R3CSkillDelay@@8				; CSkillDelay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSkillDelay@@8				; CSkillDelay::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSkillDelay@@8			; CSkillDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_memset:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	??_ECSkillDelay@@UAEPAXI@Z:PROC			; CSkillDelay::`vector deleting destructor'
EXTRN	?GetDelayTime@CMagicDamage@@QAEHH@Z:PROC	; CMagicDamage::GetDelayTime
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?MagicDamageC@@3VCMagicDamage@@A:BYTE		; MagicDamageC
;	COMDAT ??_R1A@?0A@EA@CSkillDelay@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSkillDelay@@8 DD FLAT:??_R0?AVCSkillDelay@@@8 ; CSkillDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSkillDelay@@8
rdata$r	ENDS
;	COMDAT ??_R2CSkillDelay@@8
rdata$r	SEGMENT
??_R2CSkillDelay@@8 DD FLAT:??_R1A@?0A@EA@CSkillDelay@@8 ; CSkillDelay::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSkillDelay@@8
rdata$r	SEGMENT
??_R3CSkillDelay@@8 DD 00H				; CSkillDelay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSkillDelay@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSkillDelay@@@8
data$r	SEGMENT
??_R0?AVCSkillDelay@@@8 DD FLAT:??_7type_info@@6B@	; CSkillDelay `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkillDelay@@', 00H
data$r	ENDS
;	COMDAT ??_R4CSkillDelay@@6B@
rdata$r	SEGMENT
??_R4CSkillDelay@@6B@ DD 00H				; CSkillDelay::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSkillDelay@@@8
	DD	FLAT:??_R3CSkillDelay@@8
rdata$r	ENDS
;	COMDAT ??_7CSkillDelay@@6B@
CONST	SEGMENT
??_7CSkillDelay@@6B@ DD FLAT:??_R4CSkillDelay@@6B@	; CSkillDelay::`vftable'
	DD	FLAT:??_ECSkillDelay@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCSkillDelay@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCSkillDelay@@UAEPAXI@Z PROC				; CSkillDelay::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 64 09 00 00	 push	 2404			; 00000964H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCSkillDelay@@UAEPAXI@Z ENDP				; CSkillDelay::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\SkillDelay.cpp
;	COMDAT ?Check@CSkillDelay@@QAEHE@Z
_TEXT	SEGMENT
_dwtime$ = -12						; size = 4
_skilldelaytime$ = -8					; size = 4
_this$ = -4						; size = 4
_skill$ = 8						; size = 1
?Check@CSkillDelay@@QAEHE@Z PROC			; CSkillDelay::Check, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 	return TRUE;

  0000c	b8 01 00 00 00	 mov	 eax, 1
  00011	eb 54		 jmp	 SHORT $LN1@Check

; 31   : 	
; 32   : #ifdef DARKLORD_WORK
; 33   : 	int skilldelaytime = MagicDamageC.GetDelayTime(skill);

  00013	0f b6 45 08	 movzx	 eax, BYTE PTR _skill$[ebp]
  00017	50		 push	 eax
  00018	b9 00 00 00 00	 mov	 ecx, OFFSET ?MagicDamageC@@3VCMagicDamage@@A ; MagicDamageC
  0001d	e8 00 00 00 00	 call	 ?GetDelayTime@CMagicDamage@@QAEHH@Z ; CMagicDamage::GetDelayTime
  00022	89 45 f8	 mov	 DWORD PTR _skilldelaytime$[ebp], eax

; 34   : 	if( !skilldelaytime )

  00025	83 7d f8 00	 cmp	 DWORD PTR _skilldelaytime$[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@Check

; 35   : 		return TRUE;	// 스킬 딜레이시간이 없는 경우는 무시한다

  0002b	b8 01 00 00 00	 mov	 eax, 1
  00030	eb 35		 jmp	 SHORT $LN1@Check
$LN2@Check:

; 36   : 
; 37   : 	DWORD dwtime = GetTickCount();

  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00038	89 45 f4	 mov	 DWORD PTR _dwtime$[ebp], eax

; 38   : 
; 39   : 	if( LastSkillUseTime[skill]+skilldelaytime < dwtime )

  0003b	0f b6 45 08	 movzx	 eax, BYTE PTR _skill$[ebp]
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8b 54 81 04	 mov	 edx, DWORD PTR [ecx+eax*4+4]
  00046	03 55 f8	 add	 edx, DWORD PTR _skilldelaytime$[ebp]
  00049	3b 55 f4	 cmp	 edx, DWORD PTR _dwtime$[ebp]
  0004c	73 17		 jae	 SHORT $LN3@Check

; 40   : 	{
; 41   : 		LastSkillUseTime[skill] = dwtime;

  0004e	0f b6 45 08	 movzx	 eax, BYTE PTR _skill$[ebp]
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 55 f4	 mov	 edx, DWORD PTR _dwtime$[ebp]
  00058	89 54 81 04	 mov	 DWORD PTR [ecx+eax*4+4], edx

; 42   : 		return TRUE;

  0005c	b8 01 00 00 00	 mov	 eax, 1
  00061	eb 04		 jmp	 SHORT $LN1@Check

; 43   : 	}

  00063	eb 02		 jmp	 SHORT $LN1@Check
$LN3@Check:

; 44   : 	else
; 45   : 		return FALSE;

  00065	33 c0		 xor	 eax, eax
$LN1@Check:

; 46   : #endif
; 47   : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
?Check@CSkillDelay@@QAEHE@Z ENDP			; CSkillDelay::Check
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\SkillDelay.cpp
;	COMDAT ?Init@CSkillDelay@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CSkillDelay@@QAEXXZ PROC				; CSkillDelay::Init, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 	memset(LastSkillUseTime, 0, sizeof(LastSkillUseTime));

  0000c	68 60 09 00 00	 push	 2400			; 00000960H
  00011	6a 00		 push	 0
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c0 04	 add	 eax, 4
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 _memset
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 26   : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?Init@CSkillDelay@@QAEXXZ ENDP				; CSkillDelay::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\SkillDelay.cpp
;	COMDAT ??1CSkillDelay@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CSkillDelay@@UAE@XZ PROC				; CSkillDelay::~CSkillDelay, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSkillDelay@@6B@

; 20   : 
; 21   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CSkillDelay@@UAE@XZ ENDP				; CSkillDelay::~CSkillDelay
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\SkillDelay.cpp
;	COMDAT ??0CSkillDelay@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSkillDelay@@QAE@XZ PROC				; CSkillDelay::CSkillDelay, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSkillDelay@@6B@

; 15   : 	Init();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Init@CSkillDelay@@QAEXXZ ; CSkillDelay::Init

; 16   : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CSkillDelay@@QAE@XZ ENDP				; CSkillDelay::CSkillDelay
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\SkillDelay.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\SkillDelay.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
