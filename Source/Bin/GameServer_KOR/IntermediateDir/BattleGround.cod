; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CBattleGround@@QAE@XZ			; CBattleGround::CBattleGround
PUBLIC	??1CBattleGround@@UAE@XZ			; CBattleGround::~CBattleGround
PUBLIC	?SetGroundRect@CBattleGround@@QAEXHHHHH@Z	; CBattleGround::SetGroundRect
PUBLIC	?SetBattleType@CBattleGround@@QAEXH@Z		; CBattleGround::SetBattleType
PUBLIC	?Enable@CBattleGround@@QAEXH@Z			; CBattleGround::Enable
PUBLIC	?GetUsed@CBattleGround@@QAEHXZ			; CBattleGround::GetUsed
PUBLIC	?SetTeamMaster@CBattleGround@@QAEXHPAD@Z	; CBattleGround::SetTeamMaster
PUBLIC	?SetTeamName@CBattleGround@@QAEXHPAD@Z		; CBattleGround::SetTeamName
PUBLIC	?GetTeamName@CBattleGround@@QAEPADH@Z		; CBattleGround::GetTeamName
PUBLIC	?SetTimer@CBattleGround@@QAEXH@Z		; CBattleGround::SetTimer
PUBLIC	?GetTimer@CBattleGround@@QAEHXZ			; CBattleGround::GetTimer
PUBLIC	?GetScore@CBattleGround@@QAEHH@Z		; CBattleGround::GetScore
PUBLIC	?SetScore@CBattleGround@@QAEXHH@Z		; CBattleGround::SetScore
PUBLIC	??_GCBattleGround@@UAEPAXI@Z			; CBattleGround::`scalar deleting destructor'
PUBLIC	??_7CBattleGround@@6B@				; CBattleGround::`vftable'
PUBLIC	??_R4CBattleGround@@6B@				; CBattleGround::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBattleGround@@@8			; CBattleGround `RTTI Type Descriptor'
PUBLIC	??_R3CBattleGround@@8				; CBattleGround::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBattleGround@@8				; CBattleGround::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBattleGround@@8			; CBattleGround::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_strcpy:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	??_ECBattleGround@@UAEPAXI@Z:PROC		; CBattleGround::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CBattleGround@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBattleGround@@8 DD FLAT:??_R0?AVCBattleGround@@@8 ; CBattleGround::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBattleGround@@8
rdata$r	ENDS
;	COMDAT ??_R2CBattleGround@@8
rdata$r	SEGMENT
??_R2CBattleGround@@8 DD FLAT:??_R1A@?0A@EA@CBattleGround@@8 ; CBattleGround::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBattleGround@@8
rdata$r	SEGMENT
??_R3CBattleGround@@8 DD 00H				; CBattleGround::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBattleGround@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBattleGround@@@8
data$r	SEGMENT
??_R0?AVCBattleGround@@@8 DD FLAT:??_7type_info@@6B@	; CBattleGround `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBattleGround@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBattleGround@@6B@
rdata$r	SEGMENT
??_R4CBattleGround@@6B@ DD 00H				; CBattleGround::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBattleGround@@@8
	DD	FLAT:??_R3CBattleGround@@8
rdata$r	ENDS
;	COMDAT ??_7CBattleGround@@6B@
CONST	SEGMENT
??_7CBattleGround@@6B@ DD FLAT:??_R4CBattleGround@@6B@	; CBattleGround::`vftable'
	DD	FLAT:??_ECBattleGround@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCBattleGround@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBattleGround@@UAEPAXI@Z PROC			; CBattleGround::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CBattleGround@@UAE@XZ ; CBattleGround::~CBattleGround
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 60		 push	 96			; 00000060H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCBattleGround@@UAEPAXI@Z ENDP			; CBattleGround::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?SetScore@CBattleGround@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
_score$ = 12						; size = 4
?SetScore@CBattleGround@@QAEXHH@Z PROC			; CBattleGround::SetScore, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	if( team == 0 ) m_Score1 = score;

  0000c	83 7d 08 00	 cmp	 DWORD PTR _team$[ebp], 0
  00010	75 0b		 jne	 SHORT $LN2@SetScore
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _score$[ebp]
  00018	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  0001b	eb 09		 jmp	 SHORT $LN1@SetScore
$LN2@SetScore:

; 83   : 	else m_Score2 = score;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _score$[ebp]
  00023	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN1@SetScore:

; 84   : }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 08 00	 ret	 8
?SetScore@CBattleGround@@QAEXHH@Z ENDP			; CBattleGround::SetScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?GetScore@CBattleGround@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 4
?GetScore@CBattleGround@@QAEHH@Z PROC			; CBattleGround::GetScore, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 76   : 	if( team == 0 ) return m_Score1;

  0000c	83 7d 08 00	 cmp	 DWORD PTR _team$[ebp], 0
  00010	75 08		 jne	 SHORT $LN2@GetScore
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00018	eb 06		 jmp	 SHORT $LN1@GetScore
$LN2@GetScore:

; 77   : 	return m_Score2;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
$LN1@GetScore:

; 78   : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetScore@CBattleGround@@QAEHH@Z ENDP			; CBattleGround::GetScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?GetTimer@CBattleGround@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTimer@CBattleGround@@QAEHXZ PROC			; CBattleGround::GetTimer, COMDAT
; _this$ = ecx

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 94   : #ifdef WORLD_TOURNAMENT_EVENT_SETTING
; 95   : 	//if( GetBattleSoccerGoalMove(0) )
; 96   : 	{
; 97   : 		return (615) - ((GetTickCount()-m_dwCurTimer)/1000);
; 98   : 	}
; 99   : //	else
; 100  : //	{
; 101  : //		return 15 - ((GetTickCount()-m_dwCurTimer)/1000);
; 102  : //	}
; 103  : #else
; 104  : 	return (GetTickCount()-m_dwCurTimer)/1000;

  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	2b 41 5c	 sub	 eax, DWORD PTR [ecx+92]
  00018	33 d2		 xor	 edx, edx
  0001a	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  0001f	f7 f1		 div	 ecx

; 105  : #endif
; 106  : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetTimer@CBattleGround@@QAEHXZ ENDP			; CBattleGround::GetTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?SetTimer@CBattleGround@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_g_time$ = 8						; size = 4
?SetTimer@CBattleGround@@QAEXH@Z PROC			; CBattleGround::SetTimer, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 88   : 	m_nTimer = g_time;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _g_time$[ebp]
  00012	89 48 58	 mov	 DWORD PTR [eax+88], ecx

; 89   : 	m_dwCurTimer = GetTickCount();

  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	89 41 5c	 mov	 DWORD PTR [ecx+92], eax

; 90   : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?SetTimer@CBattleGround@@QAEXH@Z ENDP			; CBattleGround::SetTimer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?GetTeamName@CBattleGround@@QAEPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?GetTeamName@CBattleGround@@QAEPADH@Z PROC		; CBattleGround::GetTeamName, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	if( n == 0 ) return m_szTeamName1;

  0000c	83 7d 08 00	 cmp	 DWORD PTR _n$[ebp], 0
  00010	75 08		 jne	 SHORT $LN2@GetTeamNam
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 c0 04	 add	 eax, 4
  00018	eb 06		 jmp	 SHORT $LN1@GetTeamNam
$LN2@GetTeamNam:

; 71   : 	return m_szTeamName2;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c0 0d	 add	 eax, 13			; 0000000dH
$LN1@GetTeamNam:

; 72   : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?GetTeamName@CBattleGround@@QAEPADH@Z ENDP		; CBattleGround::GetTeamName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?SetTeamName@CBattleGround@@QAEXHPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
_szName$ = 12						; size = 4
?SetTeamName@CBattleGround@@QAEXHPAD@Z PROC		; CBattleGround::SetTeamName, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 	if( n == 0 ) strcpy( m_szTeamName1, szName);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _n$[ebp], 0
  00010	75 15		 jne	 SHORT $LN2@SetTeamNam
  00012	8b 45 0c	 mov	 eax, DWORD PTR _szName$[ebp]
  00015	50		 push	 eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 04	 add	 ecx, 4
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 _strcpy
  00022	83 c4 08	 add	 esp, 8
  00025	eb 13		 jmp	 SHORT $LN1@SetTeamNam
$LN2@SetTeamNam:

; 65   : 	else strcpy( m_szTeamName2, szName);

  00027	8b 45 0c	 mov	 eax, DWORD PTR _szName$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 _strcpy
  00037	83 c4 08	 add	 esp, 8
$LN1@SetTeamNam:

; 66   : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?SetTeamName@CBattleGround@@QAEXHPAD@Z ENDP		; CBattleGround::SetTeamName
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?SetTeamMaster@CBattleGround@@QAEXHPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
_szId$ = 12						; size = 4
?SetTeamMaster@CBattleGround@@QAEXHPAD@Z PROC		; CBattleGround::SetTeamMaster, COMDAT
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 58   : 	if( n == 0 ) strcpy( m_szID1, szId);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _n$[ebp], 0
  00010	75 15		 jne	 SHORT $LN2@SetTeamMas
  00012	8b 45 0c	 mov	 eax, DWORD PTR _szId$[ebp]
  00015	50		 push	 eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 20	 add	 ecx, 32			; 00000020H
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 _strcpy
  00022	83 c4 08	 add	 esp, 8
  00025	eb 13		 jmp	 SHORT $LN1@SetTeamMas
$LN2@SetTeamMas:

; 59   : 	else strcpy( m_szID2, szId);

  00027	8b 45 0c	 mov	 eax, DWORD PTR _szId$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 c1 2b	 add	 ecx, 43			; 0000002bH
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 _strcpy
  00037	83 c4 08	 add	 esp, 8
$LN1@SetTeamMas:

; 60   : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
?SetTeamMaster@CBattleGround@@QAEXHPAD@Z ENDP		; CBattleGround::SetTeamMaster
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?GetUsed@CBattleGround@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUsed@CBattleGround@@QAEHXZ PROC			; CBattleGround::GetUsed, COMDAT
; _this$ = ecx

; 42   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 43   : 	return m_Used;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 40 50	 mov	 eax, DWORD PTR [eax+80]

; 44   : }

  00012	5f		 pop	 edi
  00013	5e		 pop	 esi
  00014	5b		 pop	 ebx
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?GetUsed@CBattleGround@@QAEHXZ ENDP			; CBattleGround::GetUsed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?Enable@CBattleGround@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_enable$ = 8						; size = 4
?Enable@CBattleGround@@QAEXH@Z PROC			; CBattleGround::Enable, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 48   : 	m_Used = enable;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _enable$[ebp]
  00012	89 48 50	 mov	 DWORD PTR [eax+80], ecx

; 49   : 	if( m_Used == TRUE )

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 50 01	 cmp	 DWORD PTR [eax+80], 1
  0001c	75 14		 jne	 SHORT $LN1@Enable

; 50   : 	{
; 51   : 		m_Score1	 = 0;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 52   : 		m_Score2	 = 0;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
$LN1@Enable:

; 53   : 	}
; 54   : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?Enable@CBattleGround@@QAEXH@Z ENDP			; CBattleGround::Enable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?SetBattleType@CBattleGround@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?SetBattleType@CBattleGround@@QAEXH@Z PROC		; CBattleGround::SetBattleType, COMDAT
; _this$ = ecx

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 38   : 	m_Type = type;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  00012	89 48 4c	 mov	 DWORD PTR [eax+76], ecx

; 39   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?SetBattleType@CBattleGround@@QAEXH@Z ENDP		; CBattleGround::SetBattleType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?SetGroundRect@CBattleGround@@QAEXHHHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_map$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_xl$ = 20						; size = 4
_yl$ = 24						; size = 4
?SetGroundRect@CBattleGround@@QAEXHHHHH@Z PROC		; CBattleGround::SetGroundRect, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 	m_MapNumber = map;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR _map$[ebp]
  00012	89 48 54	 mov	 DWORD PTR [eax+84], ecx

; 29   : 	m_rect.left  = x;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp]
  0001b	89 48 38	 mov	 DWORD PTR [eax+56], ecx

; 30   : 	m_rect.top   = y;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  00024	89 48 3c	 mov	 DWORD PTR [eax+60], ecx

; 31   : 	m_rect.right = xl;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d 14	 mov	 ecx, DWORD PTR _xl$[ebp]
  0002d	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 32   : 	m_rect.bottom= yl;

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 18	 mov	 ecx, DWORD PTR _yl$[ebp]
  00036	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 33   : 	m_Set        = 1;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c7 40 48 01 00
	00 00		 mov	 DWORD PTR [eax+72], 1

; 34   : }

  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 14 00	 ret	 20			; 00000014H
?SetGroundRect@CBattleGround@@QAEXHHHHH@Z ENDP		; CBattleGround::SetGroundRect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ??1CBattleGround@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBattleGround@@UAE@XZ PROC				; CBattleGround::~CBattleGround, COMDAT
; _this$ = ecx

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBattleGround@@6B@

; 24   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CBattleGround@@UAE@XZ ENDP				; CBattleGround::~CBattleGround
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ??0CBattleGround@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBattleGround@@QAE@XZ PROC				; CBattleGround::CBattleGround, COMDAT
; _this$ = ecx

; 17   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBattleGround@@6B@

; 18   : 	m_Used = 0;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 50 00 00
	00 00		 mov	 DWORD PTR [eax+80], 0

; 19   : 	m_Set  = 0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 20   : }

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??0CBattleGround@@QAE@XZ ENDP				; CBattleGround::CBattleGround
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\BattleGround.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
