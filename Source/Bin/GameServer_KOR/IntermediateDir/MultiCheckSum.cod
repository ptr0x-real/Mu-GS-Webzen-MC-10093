; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?LoadFile@CMultiCheckSum@@AAEHPADH@Z		; CMultiCheckSum::LoadFile
PUBLIC	??0CMultiCheckSum@@QAE@XZ			; CMultiCheckSum::CMultiCheckSum
PUBLIC	??1CMultiCheckSum@@UAE@XZ			; CMultiCheckSum::~CMultiCheckSum
PUBLIC	?Init@CMultiCheckSum@@QAEXXZ			; CMultiCheckSum::Init
PUBLIC	?SetFilePath@CMultiCheckSum@@QAEXPAD@Z		; CMultiCheckSum::SetFilePath
PUBLIC	?LoadFile@CMultiCheckSum@@QAEHXZ		; CMultiCheckSum::LoadFile
PUBLIC	?CompareCheckSum@CMultiCheckSum@@QAEHHKK@Z	; CMultiCheckSum::CompareCheckSum
PUBLIC	??_GCMultiCheckSum@@UAEPAXI@Z			; CMultiCheckSum::`scalar deleting destructor'
PUBLIC	??_7CMultiCheckSum@@6B@				; CMultiCheckSum::`vftable'
PUBLIC	?g_MultiChecksum@@3VCMultiCheckSum@@A		; g_MultiChecksum
PUBLIC	??_C@_0BA@JGOBHOLO@?$CFs?2CheckSum?4dat@	; `string'
PUBLIC	??_C@_0BC@EHAAJIPE@?$CFs?2CheckSum?$CFd?4dat@	; `string'
PUBLIC	??_C@_0BI@JOADKNJG@Load?5Checksum?5file?5?3?5?$CFs@ ; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0CE@DHLAACA@CheckSum?$CFd?9Exe?5Compare?5Success?5@ ; `string'
PUBLIC	??_C@_0CN@LBDBJDCL@CheckSum?$CFd?9Exe?5Compare?5Fail?5?$CFd?5@ ; `string'
PUBLIC	??_R4CMultiCheckSum@@6B@			; CMultiCheckSum::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMultiCheckSum@@@8			; CMultiCheckSum `RTTI Type Descriptor'
PUBLIC	??_R3CMultiCheckSum@@8				; CMultiCheckSum::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMultiCheckSum@@8				; CMultiCheckSum::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMultiCheckSum@@8			; CMultiCheckSum::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	??_ECMultiCheckSum@@UAEPAXI@Z:PROC		; CMultiCheckSum::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAVOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?g_MultiChecksum@@3VCMultiCheckSum@@A DB 0a12cH DUP (?)	; g_MultiChecksum
_BSS	ENDS
CRT$XCU	SEGMENT
?g_MultiChecksum$initializer$@@3P6AXXZA DD FLAT:??__Eg_MultiChecksum@@YAXXZ ; g_MultiChecksum$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CMultiCheckSum@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMultiCheckSum@@8 DD FLAT:??_R0?AVCMultiCheckSum@@@8 ; CMultiCheckSum::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMultiCheckSum@@8
rdata$r	ENDS
;	COMDAT ??_R2CMultiCheckSum@@8
rdata$r	SEGMENT
??_R2CMultiCheckSum@@8 DD FLAT:??_R1A@?0A@EA@CMultiCheckSum@@8 ; CMultiCheckSum::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMultiCheckSum@@8
rdata$r	SEGMENT
??_R3CMultiCheckSum@@8 DD 00H				; CMultiCheckSum::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMultiCheckSum@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMultiCheckSum@@@8
data$r	SEGMENT
??_R0?AVCMultiCheckSum@@@8 DD FLAT:??_7type_info@@6B@	; CMultiCheckSum `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMultiCheckSum@@', 00H
data$r	ENDS
;	COMDAT ??_R4CMultiCheckSum@@6B@
rdata$r	SEGMENT
??_R4CMultiCheckSum@@6B@ DD 00H				; CMultiCheckSum::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMultiCheckSum@@@8
	DD	FLAT:??_R3CMultiCheckSum@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CN@LBDBJDCL@CheckSum?$CFd?9Exe?5Compare?5Fail?5?$CFd?5@
CONST	SEGMENT
??_C@_0CN@LBDBJDCL@CheckSum?$CFd?9Exe?5Compare?5Fail?5?$CFd?5@ DB 'CheckS'
	DB	'um%d-Exe Compare Fail %d %d %d %d [%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DHLAACA@CheckSum?$CFd?9Exe?5Compare?5Success?5@
CONST	SEGMENT
??_C@_0CE@DHLAACA@CheckSum?$CFd?9Exe?5Compare?5Success?5@ DB 'CheckSum%d-'
	DB	'Exe Compare Success [%s]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JOADKNJG@Load?5Checksum?5file?5?3?5?$CFs@
CONST	SEGMENT
??_C@_0BI@JOADKNJG@Load?5Checksum?5file?5?3?5?$CFs@ DB 'Load Checksum fil'
	DB	'e : %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EHAAJIPE@?$CFs?2CheckSum?$CFd?4dat@
CONST	SEGMENT
??_C@_0BC@EHAAJIPE@?$CFs?2CheckSum?$CFd?4dat@ DB '%s\CheckSum%d.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JGOBHOLO@?$CFs?2CheckSum?4dat@
CONST	SEGMENT
??_C@_0BA@JGOBHOLO@?$CFs?2CheckSum?4dat@ DB '%s\CheckSum.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CMultiCheckSum@@6B@
CONST	SEGMENT
??_7CMultiCheckSum@@6B@ DD FLAT:??_R4CMultiCheckSum@@6B@ ; CMultiCheckSum::`vftable'
	DD	FLAT:??_ECMultiCheckSum@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Fg_MultiChecksum@@YAXXZ
text$yd	SEGMENT
??__Fg_MultiChecksum@@YAXXZ PROC			; `dynamic atexit destructor for 'g_MultiChecksum'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MultiChecksum@@3VCMultiCheckSum@@A ; g_MultiChecksum
  0000e	e8 00 00 00 00	 call	 ??1CMultiCheckSum@@UAE@XZ ; CMultiCheckSum::~CMultiCheckSum
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Fg_MultiChecksum@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_MultiChecksum''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ??__Eg_MultiChecksum@@YAXXZ
text$di	SEGMENT
??__Eg_MultiChecksum@@YAXXZ PROC			; `dynamic initializer for 'g_MultiChecksum'', COMDAT

; 21   : CMultiCheckSum	g_MultiChecksum;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MultiChecksum@@3VCMultiCheckSum@@A ; g_MultiChecksum
  0000e	e8 00 00 00 00	 call	 ??0CMultiCheckSum@@QAE@XZ ; CMultiCheckSum::CMultiCheckSum
  00013	68 00 00 00 00	 push	 OFFSET ??__Fg_MultiChecksum@@YAXXZ ; `dynamic atexit destructor for 'g_MultiChecksum''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__Eg_MultiChecksum@@YAXXZ ENDP			; `dynamic initializer for 'g_MultiChecksum''
text$di	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCMultiCheckSum@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMultiCheckSum@@UAEPAXI@Z PROC			; CMultiCheckSum::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CMultiCheckSum@@UAE@XZ ; CMultiCheckSum::~CMultiCheckSum
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 2c a1 00 00	 push	 41260			; 0000a12cH
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCMultiCheckSum@@UAEPAXI@Z ENDP			; CMultiCheckSum::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ?CompareCheckSum@CMultiCheckSum@@QAEHHKK@Z
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_TableNum$ = 12						; size = 4
_Key$ = 16						; size = 4
?CompareCheckSum@CMultiCheckSum@@QAEHHKK@Z PROC		; CMultiCheckSum::CompareCheckSum, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   : 	for( int i = 0; i <	MAX_CHECKSUM_FILE_COUNT; i++ )

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN4@CompareChe
$LN2@CompareChe:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@CompareChe:
  0001e	83 7d f8 0a	 cmp	 DWORD PTR _i$1[ebp], 10	; 0000000aH
  00022	0f 8d 9b 00 00
	00		 jge	 $LN3@CompareChe

; 90   : 	{
; 91   : 		if( m_dwLoaded[i] )

  00028	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 7c 81 04 00	 cmp	 DWORD PTR [ecx+eax*4+4], 0
  00033	0f 84 85 00 00
	00		 je	 $LN5@CompareChe

; 92   : 		{
; 93   : 			if( m_dwgCheckSum[i][TableNum] == Key )

  00039	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  0003c	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	8d 54 01 2c	 lea	 edx, DWORD PTR [ecx+eax+44]
  00046	8b 45 0c	 mov	 eax, DWORD PTR _TableNum$[ebp]
  00049	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  0004c	3b 4d 10	 cmp	 ecx, DWORD PTR _Key$[ebp]
  0004f	75 2d		 jne	 SHORT $LN6@CompareChe

; 94   : 			{
; 95   : 				LogAddTD("CheckSum%d-Exe Compare Success [%s]", i, gObj[aIndex].AccountID);

  00051	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  0005e	8d 54 01 68	 lea	 edx, DWORD PTR [ecx+eax+104]
  00062	52		 push	 edx
  00063	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DHLAACA@CheckSum?$CFd?9Exe?5Compare?5Success?5@
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH

; 96   : 				return TRUE;

  00075	b8 01 00 00 00	 mov	 eax, 1
  0007a	eb 49		 jmp	 SHORT $LN1@CompareChe

; 97   : 			}

  0007c	eb 40		 jmp	 SHORT $LN5@CompareChe
$LN6@CompareChe:

; 98   : 			else
; 99   : 			{
; 100  : 				LogAddTD("CheckSum%d-Exe Compare Fail %d %d %d %d [%s]", 

  0007e	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  00085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  0008b	8d 54 01 68	 lea	 edx, DWORD PTR [ecx+eax+104]
  0008f	52		 push	 edx
  00090	8b 45 0c	 mov	 eax, DWORD PTR _TableNum$[ebp]
  00093	50		 push	 eax
  00094	8b 4d 10	 mov	 ecx, DWORD PTR _Key$[ebp]
  00097	51		 push	 ecx
  00098	8b 55 f8	 mov	 edx, DWORD PTR _i$1[ebp]
  0009b	c1 e2 0c	 shl	 edx, 12			; 0000000cH
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8d 4c 10 2c	 lea	 ecx, DWORD PTR [eax+edx+44]
  000a5	8b 55 0c	 mov	 edx, DWORD PTR _TableNum$[ebp]
  000a8	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  000ab	50		 push	 eax
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  000af	51		 push	 ecx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@LBDBJDCL@CheckSum?$CFd?9Exe?5Compare?5Fail?5?$CFd?5@
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000bb	83 c4 18	 add	 esp, 24			; 00000018H
$LN5@CompareChe:

; 101  : 					     i,
; 102  : 						 m_dwgCheckSum[i][TableNum], 
; 103  : 						 Key, 
; 104  : 						 TableNum, 
; 105  : 					     gObj[aIndex].AccountID);
; 106  : 			}
; 107  : 		}		
; 108  : 	}

  000be	e9 52 ff ff ff	 jmp	 $LN2@CompareChe
$LN3@CompareChe:

; 109  : 	return FALSE;

  000c3	33 c0		 xor	 eax, eax
$LN1@CompareChe:

; 110  : }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 0c 00	 ret	 12			; 0000000cH
?CompareCheckSum@CMultiCheckSum@@QAEHHKK@Z ENDP		; CMultiCheckSum::CompareCheckSum
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ?LoadFile@CMultiCheckSum@@QAEHXZ
_TEXT	SEGMENT
_i$1 = -268						; size = 4
_filenames$ = -264					; size = 255
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?LoadFile@CMultiCheckSum@@QAEHXZ PROC			; CMultiCheckSum::LoadFile, COMDAT
; _this$ = ecx

; 50   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 4c 01 00
	00		 sub	 esp, 332		; 0000014cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 51   : 	char filenames[255];	
; 52   : 
; 53   : 	for( int i = 0; i <	MAX_CHECKSUM_FILE_COUNT; i++ )

  00019	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1[ebp], 0
  00023	eb 0f		 jmp	 SHORT $LN4@LoadFile
$LN2@LoadFile:
  00025	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  0002b	83 c0 01	 add	 eax, 1
  0002e	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _i$1[ebp], eax
$LN4@LoadFile:
  00034	83 bd f4 fe ff
	ff 0a		 cmp	 DWORD PTR _i$1[ebp], 10	; 0000000aH
  0003b	0f 8d 94 00 00
	00		 jge	 $LN3@LoadFile

; 54   : 	{
; 55   : 		if( i == 0 )

  00041	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _i$1[ebp], 0
  00048	75 20		 jne	 SHORT $LN5@LoadFile

; 56   : 		{
; 57   : 			wsprintf(filenames, "%s\\CheckSum.dat", m_sFilePath);

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	05 2c a0 00 00	 add	 eax, 41004		; 0000a02cH
  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JGOBHOLO@?$CFs?2CheckSum?4dat@
  00058	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _filenames$[ebp]
  0005e	51		 push	 ecx
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH

; 58   : 		}

  00068	eb 26		 jmp	 SHORT $LN6@LoadFile
$LN5@LoadFile:

; 59   : 		else
; 60   : 		{
; 61   : 			wsprintf(filenames, "%s\\CheckSum%d.dat", m_sFilePath, i);

  0006a	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  00070	50		 push	 eax
  00071	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	81 c1 2c a0 00
	00		 add	 ecx, 41004		; 0000a02cH
  0007a	51		 push	 ecx
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EHAAJIPE@?$CFs?2CheckSum?$CFd?4dat@
  00080	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _filenames$[ebp]
  00086	52		 push	 edx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  0008d	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@LoadFile:

; 62   : 		}		
; 63   : 		
; 64   : 		if( LoadFile(filenames, i) )

  00090	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  00096	50		 push	 eax
  00097	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _filenames$[ebp]
  0009d	51		 push	 ecx
  0009e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	e8 00 00 00 00	 call	 ?LoadFile@CMultiCheckSum@@AAEHPADH@Z ; CMultiCheckSum::LoadFile
  000a6	85 c0		 test	 eax, eax
  000a8	74 26		 je	 SHORT $LN7@LoadFile

; 65   : 		{
; 66   : 			m_dwLoaded[i] = TRUE;

  000aa	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  000b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	c7 44 81 04 01
	00 00 00	 mov	 DWORD PTR [ecx+eax*4+4], 1

; 67   : 			LogAddTD("Load Checksum file : %s", filenames);

  000bb	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _filenames$[ebp]
  000c1	50		 push	 eax
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JOADKNJG@Load?5Checksum?5file?5?3?5?$CFs@
  000c7	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000cd	83 c4 08	 add	 esp, 8
$LN7@LoadFile:

; 68   : 		}		
; 69   : 	}	

  000d0	e9 50 ff ff ff	 jmp	 $LN2@LoadFile
$LN3@LoadFile:

; 70   : 	return TRUE;

  000d5	b8 01 00 00 00	 mov	 eax, 1

; 71   : }

  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e0	33 cd		 xor	 ecx, ebp
  000e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
?LoadFile@CMultiCheckSum@@QAEHXZ ENDP			; CMultiCheckSum::LoadFile
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ?SetFilePath@CMultiCheckSum@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filepath$ = 8						; size = 4
?SetFilePath@CMultiCheckSum@@QAEXPAD@Z PROC		; CMultiCheckSum::SetFilePath, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	strcpy(m_sFilePath, filepath);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _filepath$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 2c a0 00
	00		 add	 ecx, 41004		; 0000a02cH
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 _strcpy
  0001f	83 c4 08	 add	 esp, 8

; 46   : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?SetFilePath@CMultiCheckSum@@QAEXPAD@Z ENDP		; CMultiCheckSum::SetFilePath
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ?Init@CMultiCheckSum@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?Init@CMultiCheckSum@@QAEXXZ PROC			; CMultiCheckSum::Init, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 35   : 	for( int i = 0; i <	MAX_CHECKSUM_FILE_COUNT; i++ )

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00013	eb 09		 jmp	 SHORT $LN4@Init
$LN2@Init:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Init:
  0001e	83 7d f8 0a	 cmp	 DWORD PTR _i$1[ebp], 10	; 0000000aH
  00022	7d 10		 jge	 SHORT $LN3@Init

; 36   : 	{
; 37   : 		m_dwLoaded[i] = FALSE;

  00024	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	c7 44 81 04 00
	00 00 00	 mov	 DWORD PTR [ecx+eax*4+4], 0

; 38   : 	}	

  00032	eb e1		 jmp	 SHORT $LN2@Init
$LN3@Init:

; 39   : 
; 40   : 	m_sFilePath[0] = NULL;

  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	6b c8 00	 imul	 ecx, eax, 0
  0003c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	c6 84 0a 2c a0
	00 00 00	 mov	 BYTE PTR [edx+ecx+41004], 0

; 41   : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?Init@CMultiCheckSum@@QAEXXZ ENDP			; CMultiCheckSum::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ??1CMultiCheckSum@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CMultiCheckSum@@UAE@XZ PROC				; CMultiCheckSum::~CMultiCheckSum, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMultiCheckSum@@6B@

; 30   : 
; 31   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CMultiCheckSum@@UAE@XZ ENDP				; CMultiCheckSum::~CMultiCheckSum
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ??0CMultiCheckSum@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMultiCheckSum@@QAE@XZ PROC				; CMultiCheckSum::CMultiCheckSum, COMDAT
; _this$ = ecx

; 24   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMultiCheckSum@@6B@

; 25   : 	Init();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Init@CMultiCheckSum@@QAEXXZ ; CMultiCheckSum::Init

; 26   : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CMultiCheckSum@@QAE@XZ ENDP				; CMultiCheckSum::CMultiCheckSum
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ?LoadFile@CMultiCheckSum@@AAEHPADH@Z
_TEXT	SEGMENT
_fp$ = -8						; size = 4
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
_index$ = 12						; size = 4
?LoadFile@CMultiCheckSum@@AAEHPADH@Z PROC		; CMultiCheckSum::LoadFile, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 75   : 	FILE * fp;
; 76   : 
; 77   : 	fp = fopen(filename, "rb");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  00011	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _fopen
  0001a	83 c4 08	 add	 esp, 8
  0001d	89 45 f8	 mov	 DWORD PTR _fp$[ebp], eax

; 78   : 	if( fp == NULL )

  00020	83 7d f8 00	 cmp	 DWORD PTR _fp$[ebp], 0
  00024	75 04		 jne	 SHORT $LN2@LoadFile

; 79   : 	{		
; 80   : 		return FALSE;

  00026	33 c0		 xor	 eax, eax
  00028	eb 32		 jmp	 SHORT $LN1@LoadFile
$LN2@LoadFile:

; 81   : 	}
; 82   : 	fread( m_dwgCheckSum[index], 1024 * sizeof ( DWORD), 1, fp);

  0002a	8b 45 f8	 mov	 eax, DWORD PTR _fp$[ebp]
  0002d	50		 push	 eax
  0002e	6a 01		 push	 1
  00030	68 00 10 00 00	 push	 4096			; 00001000H
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _index$[ebp]
  00038	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  0003b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	8d 44 0a 2c	 lea	 eax, DWORD PTR [edx+ecx+44]
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _fread
  00048	83 c4 10	 add	 esp, 16			; 00000010H

; 83   : 	fclose(fp);

  0004b	8b 45 f8	 mov	 eax, DWORD PTR _fp$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _fclose
  00054	83 c4 04	 add	 esp, 4

; 84   : 	return TRUE;

  00057	b8 01 00 00 00	 mov	 eax, 1
$LN1@LoadFile:

; 85   : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?LoadFile@CMultiCheckSum@@AAEHPADH@Z ENDP		; CMultiCheckSum::LoadFile
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\MultiCheckSum.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
