; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CWhisperCash@@QAE@XZ				; CWhisperCash::CWhisperCash
PUBLIC	??1CWhisperCash@@UAE@XZ				; CWhisperCash::~CWhisperCash
PUBLIC	?AddCash@CWhisperCash@@QAEHPAD@Z		; CWhisperCash::AddCash
PUBLIC	?DelCash@CWhisperCash@@QAEXPAD@Z		; CWhisperCash::DelCash
PUBLIC	?SearchCash@CWhisperCash@@QAEHPAD@Z		; CWhisperCash::SearchCash
PUBLIC	?TimeCheckCashDelete@CWhisperCash@@QAEXXZ	; CWhisperCash::TimeCheckCashDelete
PUBLIC	??_GCWhisperCash@@UAEPAXI@Z			; CWhisperCash::`scalar deleting destructor'
PUBLIC	??_7CWhisperCash@@6B@				; CWhisperCash::`vftable'
PUBLIC	??_R4CWhisperCash@@6B@				; CWhisperCash::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWhisperCash@@@8			; CWhisperCash `RTTI Type Descriptor'
PUBLIC	??_R3CWhisperCash@@8				; CWhisperCash::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWhisperCash@@8				; CWhisperCash::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWhisperCash@@8			; CWhisperCash::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_memcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?gObjGetIndex@@YAHPAD@Z:PROC			; gObjGetIndex
EXTRN	?gObjUserIdConnectCheck@@YAHPADH@Z:PROC		; gObjUserIdConnectCheck
EXTRN	??_ECWhisperCash@@UAEPAXI@Z:PROC		; CWhisperCash::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CWhisperCash@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWhisperCash@@8 DD FLAT:??_R0?AVCWhisperCash@@@8 ; CWhisperCash::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWhisperCash@@8
rdata$r	ENDS
;	COMDAT ??_R2CWhisperCash@@8
rdata$r	SEGMENT
??_R2CWhisperCash@@8 DD FLAT:??_R1A@?0A@EA@CWhisperCash@@8 ; CWhisperCash::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CWhisperCash@@8
rdata$r	SEGMENT
??_R3CWhisperCash@@8 DD 00H				; CWhisperCash::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CWhisperCash@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWhisperCash@@@8
data$r	SEGMENT
??_R0?AVCWhisperCash@@@8 DD FLAT:??_7type_info@@6B@	; CWhisperCash `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWhisperCash@@', 00H
data$r	ENDS
;	COMDAT ??_R4CWhisperCash@@6B@
rdata$r	SEGMENT
??_R4CWhisperCash@@6B@ DD 00H				; CWhisperCash::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWhisperCash@@@8
	DD	FLAT:??_R3CWhisperCash@@8
rdata$r	ENDS
;	COMDAT ??_7CWhisperCash@@6B@
CONST	SEGMENT
??_7CWhisperCash@@6B@ DD FLAT:??_R4CWhisperCash@@6B@	; CWhisperCash::`vftable'
	DD	FLAT:??_ECWhisperCash@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCWhisperCash@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCWhisperCash@@UAEPAXI@Z PROC			; CWhisperCash::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CWhisperCash@@UAE@XZ	; CWhisperCash::~CWhisperCash
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 38		 push	 56			; 00000038H
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCWhisperCash@@UAEPAXI@Z ENDP			; CWhisperCash::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ?TimeCheckCashDelete@CWhisperCash@@QAEXXZ
_TEXT	SEGMENT
_CurTime$ = -12						; size = 4
_n$ = -8						; size = 4
_this$ = -4						; size = 4
?TimeCheckCashDelete@CWhisperCash@@QAEXXZ PROC		; CWhisperCash::TimeCheckCashDelete, COMDAT
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 114  : 	int n=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0

; 115  : 	int CurTime = GetTickCount();

  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00019	89 45 f4	 mov	 DWORD PTR _CurTime$[ebp], eax

; 116  : 
; 117  : 	for( n=0; n<MAXWHISPERCASH; n++)

  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
  00023	eb 09		 jmp	 SHORT $LN4@TimeCheckC
$LN2@TimeCheckC:
  00025	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  00028	83 c0 01	 add	 eax, 1
  0002b	89 45 f8	 mov	 DWORD PTR _n$[ebp], eax
$LN4@TimeCheckC:
  0002e	83 7d f8 02	 cmp	 DWORD PTR _n$[ebp], 2
  00032	7d 35		 jge	 SHORT $LN1@TimeCheckC

; 118  : 	{
; 119  : 		if( WChash[n].Live == TRUE )

  00034	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	83 7c 01 04 01	 cmp	 DWORD PTR [ecx+eax+4], 1
  00040	75 25		 jne	 SHORT $LN5@TimeCheckC

; 120  : 		{
; 121  : 			if( (CurTime-WChash[n].m_Time) > (1000*60) )	// 1분이 지나면 삭제한다.

  00042	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	8b 55 f4	 mov	 edx, DWORD PTR _CurTime$[ebp]
  0004c	2b 54 01 18	 sub	 edx, DWORD PTR [ecx+eax+24]
  00050	81 fa 60 ea 00
	00		 cmp	 edx, 60000		; 0000ea60H
  00056	76 0f		 jbe	 SHORT $LN5@TimeCheckC

; 122  : 			{
; 123  : 				WChash[n].Live = FALSE;

  00058	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	c7 44 01 04 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+4], 0
$LN5@TimeCheckC:

; 124  : 			}
; 125  : 		}
; 126  : 	}

  00067	eb bc		 jmp	 SHORT $LN2@TimeCheckC
$LN1@TimeCheckC:

; 127  : }

  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
?TimeCheckCashDelete@CWhisperCash@@QAEXXZ ENDP		; CWhisperCash::TimeCheckCashDelete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ?SearchCash@CWhisperCash@@QAEHPAD@Z
_TEXT	SEGMENT
_n$ = -8						; size = 4
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SearchCash@CWhisperCash@@QAEHPAD@Z PROC		; CWhisperCash::SearchCash, COMDAT
; _this$ = ecx

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 92   : 	int n=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0

; 93   : 
; 94   : 	for( n=0; n<MAXWHISPERCASH; n++)

  00013	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@SearchCash
$LN2@SearchCash:
  0001c	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f8	 mov	 DWORD PTR _n$[ebp], eax
$LN4@SearchCash:
  00025	83 7d f8 02	 cmp	 DWORD PTR _n$[ebp], 2
  00029	7d 78		 jge	 SHORT $LN3@SearchCash

; 95   : 	{
; 96   : 		if( WChash[n].Live == TRUE )

  0002b	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 7c 01 04 01	 cmp	 DWORD PTR [ecx+eax+4], 1
  00037	75 65		 jne	 SHORT $LN5@SearchCash

; 97   : 		{
; 98   : 			if( WChash[n].szId[0] == id[0] )	// 첫바이트가 같다면..

  00039	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	6b c8 00	 imul	 ecx, eax, 0
  0004c	0f be 54 0a 04	 movsx	 edx, BYTE PTR [edx+ecx+4]
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	6b c8 00	 imul	 ecx, eax, 0
  00059	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0005c	0f be 0c 08	 movsx	 ecx, BYTE PTR [eax+ecx]
  00060	3b d1		 cmp	 edx, ecx
  00062	75 3a		 jne	 SHORT $LN5@SearchCash

; 99   : 			{
; 100  : 				if( strcmp(WChash[n].szId, id) == 0 )	// 찾았다면..

  00064	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00067	50		 push	 eax
  00068	6b 4d f8 18	 imul	 ecx, DWORD PTR _n$[ebp], 24
  0006c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8d 44 0a 08	 lea	 eax, DWORD PTR [edx+ecx+8]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 _strcmp
  00079	83 c4 08	 add	 esp, 8
  0007c	85 c0		 test	 eax, eax
  0007e	75 1e		 jne	 SHORT $LN5@SearchCash

; 101  : 				{
; 102  : 					WChash[n].m_Time = GetTickCount();

  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00086	6b 4d f8 18	 imul	 ecx, DWORD PTR _n$[ebp], 24
  0008a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0008d	89 44 0a 18	 mov	 DWORD PTR [edx+ecx+24], eax

; 103  : 					return WChash[n].m_Index;

  00091	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	8b 44 01 14	 mov	 eax, DWORD PTR [ecx+eax+20]
  0009c	eb 08		 jmp	 SHORT $LN1@SearchCash
$LN5@SearchCash:

; 104  : 				}
; 105  : 			}
; 106  : 		}
; 107  : 	}

  0009e	e9 79 ff ff ff	 jmp	 $LN2@SearchCash
$LN3@SearchCash:

; 108  : 	return -1;

  000a3	83 c8 ff	 or	 eax, -1
$LN1@SearchCash:

; 109  : }

  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	5b		 pop	 ebx
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c2 04 00	 ret	 4
?SearchCash@CWhisperCash@@QAEHPAD@Z ENDP		; CWhisperCash::SearchCash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ?DelCash@CWhisperCash@@QAEXPAD@Z
_TEXT	SEGMENT
_n$ = -8						; size = 4
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?DelCash@CWhisperCash@@QAEXPAD@Z PROC			; CWhisperCash::DelCash, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 71   : 	int n=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0

; 72   : 
; 73   : 	for( n=0; n<MAXWHISPERCASH; n++)

  00013	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
  0001a	eb 09		 jmp	 SHORT $LN4@DelCash
$LN2@DelCash:
  0001c	8b 45 f8	 mov	 eax, DWORD PTR _n$[ebp]
  0001f	83 c0 01	 add	 eax, 1
  00022	89 45 f8	 mov	 DWORD PTR _n$[ebp], eax
$LN4@DelCash:
  00025	83 7d f8 02	 cmp	 DWORD PTR _n$[ebp], 2
  00029	7d 68		 jge	 SHORT $LN1@DelCash

; 74   : 	{
; 75   : 		if( WChash[n].Live == TRUE )

  0002b	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 7c 01 04 01	 cmp	 DWORD PTR [ecx+eax+4], 1
  00037	75 58		 jne	 SHORT $LN5@DelCash

; 76   : 		{
; 77   : 			if( WChash[n].szId[0] == id[0] )	// 첫바이트가 같다면..

  00039	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	8d 54 01 04	 lea	 edx, DWORD PTR [ecx+eax+4]
  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	6b c8 00	 imul	 ecx, eax, 0
  0004c	0f be 54 0a 04	 movsx	 edx, BYTE PTR [edx+ecx+4]
  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	6b c8 00	 imul	 ecx, eax, 0
  00059	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0005c	0f be 0c 08	 movsx	 ecx, BYTE PTR [eax+ecx]
  00060	3b d1		 cmp	 edx, ecx
  00062	75 2d		 jne	 SHORT $LN5@DelCash

; 78   : 			{
; 79   : 				if( strcmp(WChash[n].szId, id) == 0 )	// 찾았다면..

  00064	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00067	50		 push	 eax
  00068	6b 4d f8 18	 imul	 ecx, DWORD PTR _n$[ebp], 24
  0006c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8d 44 0a 08	 lea	 eax, DWORD PTR [edx+ecx+8]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 _strcmp
  00079	83 c4 08	 add	 esp, 8
  0007c	85 c0		 test	 eax, eax
  0007e	75 11		 jne	 SHORT $LN5@DelCash

; 80   : 				{
; 81   : 					WChash[n].Live = FALSE;

  00080	6b 45 f8 18	 imul	 eax, DWORD PTR _n$[ebp], 24
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	c7 44 01 04 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+4], 0

; 82   : 					return;

  0008f	eb 02		 jmp	 SHORT $LN1@DelCash
$LN5@DelCash:

; 83   : 				}
; 84   : 			}
; 85   : 		}
; 86   : 	}

  00091	eb 89		 jmp	 SHORT $LN2@DelCash
$LN1@DelCash:

; 87   : }

  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c2 04 00	 ret	 4
?DelCash@CWhisperCash@@QAEXPAD@Z ENDP			; CWhisperCash::DelCash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ?AddCash@CWhisperCash@@QAEHPAD@Z
_TEXT	SEGMENT
tv78 = -84						; size = 4
_result$ = -16						; size = 4
_maxcount$ = -12					; size = 4
_count$ = -8						; size = 4
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?AddCash@CWhisperCash@@QAEHPAD@Z PROC			; CWhisperCash::AddCash, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 	int count=0;

  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 26   : 	int maxcount=MAXWHISPERCASH;

  00013	c7 45 f4 02 00
	00 00		 mov	 DWORD PTR _maxcount$[ebp], 2

; 27   : 	int result;
; 28   : 	
; 29   : 	// 캐시에 존재하는 사용자일땐 일단 캐시에서 찾아서 알려주고..
; 30   : 	result = SearchCash(id);

  0001a	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?SearchCash@CWhisperCash@@QAEHPAD@Z ; CWhisperCash::SearchCash
  00026	89 45 f0	 mov	 DWORD PTR _result$[ebp], eax

; 31   : 	if( result != -1 ) 

  00029	83 7d f0 ff	 cmp	 DWORD PTR _result$[ebp], -1
  0002d	74 24		 je	 SHORT $LN4@AddCash

; 32   : 	{
; 33   : 		// 캐시의 사용자의 접속 여부를 체크한다.
; 34   : 		if( gObjUserIdConnectCheck(id, result) == FALSE )

  0002f	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _id$[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?gObjUserIdConnectCheck@@YAHPADH@Z ; gObjUserIdConnectCheck
  0003c	83 c4 08	 add	 esp, 8
  0003f	85 c0		 test	 eax, eax
  00041	75 08		 jne	 SHORT $LN5@AddCash

; 35   : 		{
; 36   : 			// 접속 상대가 존재하지 않는다.
; 37   : 			return -1;

  00043	83 c8 ff	 or	 eax, -1
  00046	e9 e2 00 00 00	 jmp	 $LN1@AddCash
$LN5@AddCash:

; 38   : 		}
; 39   : 		return result;

  0004b	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]
  0004e	e9 da 00 00 00	 jmp	 $LN1@AddCash
$LN4@AddCash:

; 40   : 	}
; 41   : 
; 42   : 	// 전체 사용자 중에서 찾는다.
; 43   : 	result = gObjGetIndex(id);

  00053	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?gObjGetIndex@@YAHPAD@Z	; gObjGetIndex
  0005c	83 c4 04	 add	 esp, 4
  0005f	89 45 f0	 mov	 DWORD PTR _result$[ebp], eax

; 44   : 	if( result == -1 ) return -1;	// 사용자가 존재하지 않는다면

  00062	83 7d f0 ff	 cmp	 DWORD PTR _result$[ebp], -1
  00066	75 08		 jne	 SHORT $LN6@AddCash
  00068	83 c8 ff	 or	 eax, -1
  0006b	e9 bd 00 00 00	 jmp	 $LN1@AddCash
$LN6@AddCash:

; 45   : 	
; 46   : 	// 사용자가 존재하면 일단 캐시에 넣는다.
; 47   : 	count = WChashCount;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00076	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
$LN2@AddCash:

; 48   : 	while(maxcount--)

  00079	8b 45 f4	 mov	 eax, DWORD PTR _maxcount$[ebp]
  0007c	89 45 ac	 mov	 DWORD PTR tv78[ebp], eax
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR _maxcount$[ebp]
  00082	83 e9 01	 sub	 ecx, 1
  00085	89 4d f4	 mov	 DWORD PTR _maxcount$[ebp], ecx
  00088	83 7d ac 00	 cmp	 DWORD PTR tv78[ebp], 0
  0008c	0f 84 98 00 00
	00		 je	 $LN3@AddCash

; 49   : 	{
; 50   : 		count ++;

  00092	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00095	83 c0 01	 add	 eax, 1
  00098	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax

; 51   : 		if( count > MAXWHISPERCASH-1 ) count = 0;

  0009b	83 7d f8 01	 cmp	 DWORD PTR _count$[ebp], 1
  0009f	7e 07		 jle	 SHORT $LN7@AddCash
  000a1	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
$LN7@AddCash:

; 52   : 
; 53   : 		if( WChash[count].Live == 0 )

  000a8	6b 45 f8 18	 imul	 eax, DWORD PTR _count$[ebp], 24
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	83 7c 01 04 00	 cmp	 DWORD PTR [ecx+eax+4], 0
  000b4	75 6f		 jne	 SHORT $LN8@AddCash

; 54   : 		{
; 55   : 			memcpy(WChash[count].szId, id, MAX_IDSTRING);

  000b6	6a 0a		 push	 10			; 0000000aH
  000b8	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  000bb	50		 push	 eax
  000bc	6b 4d f8 18	 imul	 ecx, DWORD PTR _count$[ebp], 24
  000c0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c3	8d 44 0a 08	 lea	 eax, DWORD PTR [edx+ecx+8]
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 _memcpy
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 56   : 			WChash[count].Live		= TRUE;

  000d0	6b 45 f8 18	 imul	 eax, DWORD PTR _count$[ebp], 24
  000d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	c7 44 01 04 01
	00 00 00	 mov	 DWORD PTR [ecx+eax+4], 1

; 57   : 			WChash[count].m_Index   = result;

  000df	6b 45 f8 18	 imul	 eax, DWORD PTR _count$[ebp], 24
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	8b 55 f0	 mov	 edx, DWORD PTR _result$[ebp]
  000e9	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 58   : 			WChash[count].m_Time = GetTickCount();

  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  000f3	6b 4d f8 18	 imul	 ecx, DWORD PTR _count$[ebp], 24
  000f7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000fa	89 44 0a 18	 mov	 DWORD PTR [edx+ecx+24], eax

; 59   : 			WChashCount++;

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00101	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  00104	83 c1 01	 add	 ecx, 1
  00107	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0010a	89 4a 34	 mov	 DWORD PTR [edx+52], ecx

; 60   : 			if( WChashCount > MAXWHISPERCASH-1 ) WChashCount = 0;

  0010d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00110	83 78 34 01	 cmp	 DWORD PTR [eax+52], 1
  00114	7e 0a		 jle	 SHORT $LN9@AddCash
  00116	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00119	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], 0
$LN9@AddCash:

; 61   : 			return result;

  00120	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]
  00123	eb 08		 jmp	 SHORT $LN1@AddCash
$LN8@AddCash:

; 62   : 		}		
; 63   : 	}

  00125	e9 4f ff ff ff	 jmp	 $LN2@AddCash
$LN3@AddCash:

; 64   : 
; 65   : 	return result;

  0012a	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]
$LN1@AddCash:

; 66   : }

  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	5b		 pop	 ebx
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c2 04 00	 ret	 4
?AddCash@CWhisperCash@@QAEHPAD@Z ENDP			; CWhisperCash::AddCash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ??1CWhisperCash@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWhisperCash@@UAE@XZ PROC				; CWhisperCash::~CWhisperCash, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CWhisperCash@@6B@

; 20   : 
; 21   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CWhisperCash@@UAE@XZ ENDP				; CWhisperCash::~CWhisperCash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ??0CWhisperCash@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWhisperCash@@QAE@XZ PROC				; CWhisperCash::CWhisperCash, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CWhisperCash@@6B@

; 15   : 
; 16   : }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??0CWhisperCash@@QAE@XZ ENDP				; CWhisperCash::CWhisperCash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\WhisperCash.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
