; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	??0CPostSystem@@QAE@XZ				; CPostSystem::CPostSystem
PUBLIC	?Load@CPostSystem@@QAEXPBD@Z			; CPostSystem::Load
PUBLIC	?SendPostMessage@CPostSystem@@QAEXHPAD@Z	; CPostSystem::SendPostMessage
PUBLIC	?CheckSetting@CPostSystem@@IAE_NXZ		; CPostSystem::CheckSetting
PUBLIC	?GetState@CPostSystem@@IAEHXZ			; CPostSystem::GetState
PUBLIC	?SendErrorMsg@CPostSystem@@IAEXH@Z		; CPostSystem::SendErrorMsg
PUBLIC	?CheckUser@CPostSystem@@IAE_NH@Z		; CPostSystem::CheckUser
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?g_PostSystem@@3VCPostSystem@@A			; g_PostSystem
PUBLIC	??_C@_0BC@IGDGGPJN@PostSystemEnabled@		; `string'
PUBLIC	??_C@_0P@EMJDPFDH@GameServerInfo@		; `string'
PUBLIC	??_C@_09PMALNNPF@PostLevel@			; `string'
PUBLIC	??_C@_09NPPPIPJF@PostMoney@			; `string'
PUBLIC	??_C@_09DPMNHPEL@?$FLPOST?$FN?3?$CFs@		; `string'
PUBLIC	??_C@_0BF@PDPDHFHM@Post?5System?5Disabled@	; `string'
PUBLIC	??_C@_0CC@CKFFFILA@Post?5System?5Checking?5Initializi@ ; `string'
PUBLIC	??_C@_0BE@DPMGFHED@Post?5Money?5Checking@	; `string'
PUBLIC	??_C@_05MBDEGLCK@ERROR@				; `string'
PUBLIC	??_C@_02GIPFHKNO@OK@				; `string'
PUBLIC	??_C@_0BE@GFKPELAO@Post?5Level?5Checking@	; `string'
PUBLIC	??_C@_0BE@PKJHBHPB@Post?5is?5disabled?4?4?4@	; `string'
PUBLIC	??_C@_0DB@CPGFOGHM@You?5need?5level?5?$CFd?5or?5major?5for?5@ ; `string'
PUBLIC	??_C@_0CJ@MACJLPJG@You?5need?5?$CFd?5of?5zen?5for?5use?5post@ ; `string'
EXTRN	_memcpy:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	?gObjIsConnectedGP@@YAHH@Z:PROC			; gObjIsConnectedGP
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?DataSendAll@@YAXPAEH@Z:PROC			; DataSendAll
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAVOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	?g_GlobalConfig@@3VCGlobalConfig@@A:BYTE	; g_GlobalConfig
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?g_PostSystem@@3VCPostSystem@@A DB 0cH DUP (?)		; g_PostSystem
_BSS	ENDS
CRT$XCU	SEGMENT
?g_PostSystem$initializer$@@3P6AXXZA DD FLAT:??__Eg_PostSystem@@YAXXZ ; g_PostSystem$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_0CJ@MACJLPJG@You?5need?5?$CFd?5of?5zen?5for?5use?5post@
CONST	SEGMENT
??_C@_0CJ@MACJLPJG@You?5need?5?$CFd?5of?5zen?5for?5use?5post@ DB 'You nee'
	DB	'd %d of zen for use post command.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CPGFOGHM@You?5need?5level?5?$CFd?5or?5major?5for?5@
CONST	SEGMENT
??_C@_0DB@CPGFOGHM@You?5need?5level?5?$CFd?5or?5major?5for?5@ DB 'You nee'
	DB	'd level %d or major for use post command.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PKJHBHPB@Post?5is?5disabled?4?4?4@
CONST	SEGMENT
??_C@_0BE@PKJHBHPB@Post?5is?5disabled?4?4?4@ DB 'Post is disabled...', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GFKPELAO@Post?5Level?5Checking@
CONST	SEGMENT
??_C@_0BE@GFKPELAO@Post?5Level?5Checking@ DB 'Post Level Checking', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GIPFHKNO@OK@
CONST	SEGMENT
??_C@_02GIPFHKNO@OK@ DB 'OK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MBDEGLCK@ERROR@
CONST	SEGMENT
??_C@_05MBDEGLCK@ERROR@ DB 'ERROR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DPMGFHED@Post?5Money?5Checking@
CONST	SEGMENT
??_C@_0BE@DPMGFHED@Post?5Money?5Checking@ DB 'Post Money Checking', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CKFFFILA@Post?5System?5Checking?5Initializi@
CONST	SEGMENT
??_C@_0CC@CKFFFILA@Post?5System?5Checking?5Initializi@ DB 'Post System Ch'
	DB	'ecking Initializing', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PDPDHFHM@Post?5System?5Disabled@
CONST	SEGMENT
??_C@_0BF@PDPDHFHM@Post?5System?5Disabled@ DB 'Post System Disabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPMNHPEL@?$FLPOST?$FN?3?$CFs@
CONST	SEGMENT
??_C@_09DPMNHPEL@?$FLPOST?$FN?3?$CFs@ DB '[POST]:%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPPPIPJF@PostMoney@
CONST	SEGMENT
??_C@_09NPPPIPJF@PostMoney@ DB 'PostMoney', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PMALNNPF@PostLevel@
CONST	SEGMENT
??_C@_09PMALNNPF@PostLevel@ DB 'PostLevel', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EMJDPFDH@GameServerInfo@
CONST	SEGMENT
??_C@_0P@EMJDPFDH@GameServerInfo@ DB 'GameServerInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IGDGGPJN@PostSystemEnabled@
CONST	SEGMENT
??_C@_0BC@IGDGGPJN@PostSystemEnabled@ DB 'PostSystemEnabled', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ??__Eg_PostSystem@@YAXXZ
text$di	SEGMENT
??__Eg_PostSystem@@YAXXZ PROC				; `dynamic initializer for 'g_PostSystem'', COMDAT

; 11   : CPostSystem g_PostSystem;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_PostSystem@@3VCPostSystem@@A ; g_PostSystem
  0000e	e8 00 00 00 00	 call	 ??0CPostSystem@@QAE@XZ	; CPostSystem::CPostSystem
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__Eg_PostSystem@@YAXXZ ENDP				; `dynamic initializer for 'g_PostSystem''
text$di	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?CheckUser@CPostSystem@@IAE_NH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?CheckUser@CPostSystem@@IAE_NH@Z PROC			; CPostSystem::CheckUser, COMDAT
; _this$ = ecx

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 117  : 	if(!gObjIsConnectedGP(aIndex))

  0000c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00015	83 c4 04	 add	 esp, 4
  00018	85 c0		 test	 eax, eax
  0001a	75 04		 jne	 SHORT $LN2@CheckUser

; 118  : 		return false;

  0001c	32 c0		 xor	 al, al
  0001e	eb 75		 jmp	 SHORT $LN1@CheckUser
$LN2@CheckUser:

; 119  : 
; 120  : 	if(gObj[aIndex].Level < m_iPostLevel)

  00020	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  0002d	0f bf 94 01 a0
	00 00 00	 movsx	 edx, WORD PTR [ecx+eax+160]
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003b	7d 1e		 jge	 SHORT $LN3@CheckUser

; 121  : 	{
; 122  : 		MsgOutput(aIndex,"You need level %d or major for use post command.",m_iPostLevel);

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00043	51		 push	 ecx
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CPGFOGHM@You?5need?5level?5?$CFd?5or?5major?5for?5@
  00049	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH

; 123  : 		return false;

  00055	32 c0		 xor	 al, al
  00057	eb 3c		 jmp	 SHORT $LN1@CheckUser

; 124  : 	}

  00059	eb 38		 jmp	 SHORT $LN4@CheckUser
$LN3@CheckUser:

; 125  : 	else if(gObj[aIndex].Money < m_iPostMoney)

  0005b	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00068	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	8b 84 01 b0 00
	00 00		 mov	 eax, DWORD PTR [ecx+eax+176]
  00072	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00075	7d 1c		 jge	 SHORT $LN4@CheckUser

; 126  : 	{
; 127  : 		MsgOutput(aIndex,"You need %d of zen for use post command.",m_iPostMoney);

  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007d	51		 push	 ecx
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@MACJLPJG@You?5need?5?$CFd?5of?5zen?5for?5use?5post@
  00083	8b 55 08	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 128  : 		return false;

  0008f	32 c0		 xor	 al, al
  00091	eb 02		 jmp	 SHORT $LN1@CheckUser
$LN4@CheckUser:

; 129  : 	}
; 130  : 
; 131  : 	return true;

  00093	b0 01		 mov	 al, 1
$LN1@CheckUser:

; 132  : }

  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
?CheckUser@CPostSystem@@IAE_NH@Z ENDP			; CPostSystem::CheckUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?SendErrorMsg@CPostSystem@@IAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aIndex$ = 8						; size = 4
?SendErrorMsg@CPostSystem@@IAEXH@Z PROC			; CPostSystem::SendErrorMsg, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 	MsgOutput(aIndex,"Post is disabled...");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PKJHBHPB@Post?5is?5disabled?4?4?4@
  00011	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  0001a	83 c4 08	 add	 esp, 8

; 113  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?SendErrorMsg@CPostSystem@@IAEXH@Z ENDP			; CPostSystem::SendErrorMsg
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?GetState@CPostSystem@@IAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CPostSystem@@IAEHXZ PROC			; CPostSystem::GetState, COMDAT
; _this$ = ecx

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 92   : 	if(!m_bPostEnabled)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00012	75 04		 jne	 SHORT $LN2@GetState

; 93   : 	{
; 94   : 		return POST_DISABLED;

  00014	33 c0		 xor	 eax, eax
  00016	eb 3f		 jmp	 SHORT $LN1@GetState
$LN2@GetState:

; 95   : 	}
; 96   : 
; 97   : 	if(m_iPostMoney < 0 || m_iPostMoney > MAX_ZEN)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	7c 0c		 jl	 SHORT $LN4@GetState
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	81 78 04 00 94
	35 77		 cmp	 DWORD PTR [eax+4], 2000000000 ; 77359400H
  0002b	7e 07		 jle	 SHORT $LN3@GetState
$LN4@GetState:

; 98   : 	{
; 99   : 		return POST_MONEYERROR;

  0002d	b8 02 00 00 00	 mov	 eax, 2
  00032	eb 23		 jmp	 SHORT $LN1@GetState
$LN3@GetState:

; 100  : 	}
; 101  : 
; 102  : 	if(m_iPostLevel < 0 || m_iPostLevel > g_GlobalConfig.m_iMaxLevel) //MAX_CHAR_LEVEL

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0003b	7c 0e		 jl	 SHORT $LN6@GetState
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00043	3b 0d c8 00 00
	00		 cmp	 ecx, DWORD PTR ?g_GlobalConfig@@3VCGlobalConfig@@A+200
  00049	7e 07		 jle	 SHORT $LN5@GetState
$LN6@GetState:

; 103  : 	{
; 104  : 		return POST_LEVELERROR;

  0004b	b8 01 00 00 00	 mov	 eax, 1
  00050	eb 05		 jmp	 SHORT $LN1@GetState
$LN5@GetState:

; 105  : 	}
; 106  : 
; 107  : 	return POST_ENABLED;

  00052	b8 03 00 00 00	 mov	 eax, 3
$LN1@GetState:

; 108  : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?GetState@CPostSystem@@IAEHXZ ENDP			; CPostSystem::GetState
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?CheckSetting@CPostSystem@@IAE_NXZ
_TEXT	SEGMENT
_bRet$ = -5						; size = 1
_this$ = -4						; size = 4
?CheckSetting@CPostSystem@@IAE_NXZ PROC			; CPostSystem::CheckSetting, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 57   : 	bool bRet = SETTINGOK;

  0000c	c6 45 fb 01	 mov	 BYTE PTR _bRet$[ebp], 1

; 58   : 
; 59   : 	if(!this->m_bPostEnabled)

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 38 00	 cmp	 DWORD PTR [eax], 0
  00016	75 15		 jne	 SHORT $LN2@CheckSetti

; 60   : 	{
; 61   : 		LogAddTD("Post System Disabled");

  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PDPDHFHM@Post?5System?5Disabled@
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00023	83 c4 04	 add	 esp, 4

; 62   : 		return SETTINGERROR;

  00026	32 c0		 xor	 al, al
  00028	e9 9d 00 00 00	 jmp	 $LN1@CheckSetti
$LN2@CheckSetti:

; 63   : 	}
; 64   : 
; 65   : 	LogAddTD("Post System Checking Initializing");

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@CKFFFILA@Post?5System?5Checking?5Initializi@
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00038	83 c4 04	 add	 esp, 4

; 66   : 
; 67   : 	LogAddTD("Post Money Checking");

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DPMGFHED@Post?5Money?5Checking@
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00046	83 c4 04	 add	 esp, 4

; 68   : 
; 69   : 	if(this->m_iPostMoney < 0 || this->m_iPostMoney > MAX_ZEN)

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00050	7c 0c		 jl	 SHORT $LN5@CheckSetti
  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	81 78 04 00 94
	35 77		 cmp	 DWORD PTR [eax+4], 2000000000 ; 77359400H
  0005c	7e 14		 jle	 SHORT $LN3@CheckSetti
$LN5@CheckSetti:

; 70   : 	{
; 71   : 		bRet = SETTINGERROR;

  0005e	c6 45 fb 00	 mov	 BYTE PTR _bRet$[ebp], 0

; 72   : 		LogAddTD(CHECKERROR);

  00062	68 00 00 00 00	 push	 OFFSET ??_C@_05MBDEGLCK@ERROR@
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006d	83 c4 04	 add	 esp, 4

; 73   : 	}

  00070	eb 0e		 jmp	 SHORT $LN4@CheckSetti
$LN3@CheckSetti:

; 74   : 	else
; 75   : 		LogAddTD(CHECKOK);

  00072	68 00 00 00 00	 push	 OFFSET ??_C@_02GIPFHKNO@OK@
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0007d	83 c4 04	 add	 esp, 4
$LN4@CheckSetti:

; 76   : 
; 77   : 	LogAddTD("Post Level Checking");

  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GFKPELAO@Post?5Level?5Checking@
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0008b	83 c4 04	 add	 esp, 4

; 78   : 
; 79   : 	if(this->m_iPostLevel < 0 || this->m_iPostLevel > g_GlobalConfig.m_iMaxLevel) //MAX_CHAR_LEVEL

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00095	7c 0e		 jl	 SHORT $LN8@CheckSetti
  00097	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009d	3b 0d c8 00 00
	00		 cmp	 ecx, DWORD PTR ?g_GlobalConfig@@3VCGlobalConfig@@A+200
  000a3	7e 14		 jle	 SHORT $LN6@CheckSetti
$LN8@CheckSetti:

; 80   : 	{
; 81   : 		bRet = SETTINGERROR;

  000a5	c6 45 fb 00	 mov	 BYTE PTR _bRet$[ebp], 0

; 82   : 		LogAddTD(CHECKERROR);

  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_05MBDEGLCK@ERROR@
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000b4	83 c4 04	 add	 esp, 4

; 83   : 	}

  000b7	eb 0e		 jmp	 SHORT $LN7@CheckSetti
$LN6@CheckSetti:

; 84   : 	else
; 85   : 		LogAddTD(CHECKOK);

  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_02GIPFHKNO@OK@
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000c4	83 c4 04	 add	 esp, 4
$LN7@CheckSetti:

; 86   : 
; 87   : 	return bRet;

  000c7	8a 45 fb	 mov	 al, BYTE PTR _bRet$[ebp]
$LN1@CheckSetti:

; 88   : }

  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
?CheckSetting@CPostSystem@@IAE_NXZ ENDP			; CPostSystem::CheckSetting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?SendPostMessage@CPostSystem@@QAEXHPAD@Z
_TEXT	SEGMENT
_pNotice$ = -88						; size = 73
_PostState$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_message$ = 12						; size = 4
?SendPostMessage@CPostSystem@@QAEXHPAD@Z PROC		; CPostSystem::SendPostMessage, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 	int PostState = GetState();

  00019	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?GetState@CPostSystem@@IAEHXZ ; CPostSystem::GetState
  00021	89 45 f4	 mov	 DWORD PTR _PostState$[ebp], eax

; 30   : 
; 31   : 	if(PostState != POST_ENABLED)

  00024	83 7d f4 03	 cmp	 DWORD PTR _PostState$[ebp], 3
  00028	74 11		 je	 SHORT $LN2@SendPostMe

; 32   : 	{
; 33   : 		SendErrorMsg(aIndex);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?SendErrorMsg@CPostSystem@@IAEXH@Z ; CPostSystem::SendErrorMsg

; 34   : 		return;

  00036	e9 bd 00 00 00	 jmp	 $LN1@SendPostMe
$LN2@SendPostMe:

; 35   : 	}
; 36   : 
; 37   : 	if(!CheckUser(aIndex))

  0003b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?CheckUser@CPostSystem@@IAE_NH@Z ; CPostSystem::CheckUser
  00047	0f b6 c8	 movzx	 ecx, al
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 05		 jne	 SHORT $LN3@SendPostMe

; 38   : 		return;

  0004e	e9 a5 00 00 00	 jmp	 $LN1@SendPostMe
$LN3@SendPostMe:

; 39   : 
; 40   : 	PMSG_CHATDATA_WHISPER pNotice;
; 41   : 
; 42   : 	memcpy(pNotice.id,gObj[aIndex].Name,10);

  00053	6a 0a		 push	 10			; 0000000aH
  00055	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00062	8d 54 01 73	 lea	 edx, DWORD PTR [ecx+eax+115]
  00066	52		 push	 edx
  00067	8d 45 ab	 lea	 eax, DWORD PTR _pNotice$[ebp+3]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 _memcpy
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH

; 43   : 	// ----
; 44   : 	sprintf(pNotice.chatmsg,"[POST]:%s",message);

  00073	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  00076	50		 push	 eax
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_09DPMNHPEL@?$FLPOST?$FN?3?$CFs@
  0007c	8d 4d b5	 lea	 ecx, DWORD PTR _pNotice$[ebp+13]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 _sprintf
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH

; 45   : 	// ----
; 46   : 	PHeadSetB((LPBYTE)&pNotice, 0x02, sizeof(pNotice));

  00088	6a 49		 push	 73			; 00000049H
  0008a	6a 02		 push	 2
  0008c	8d 45 a8	 lea	 eax, DWORD PTR _pNotice$[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 47   : 
; 48   : 	DataSendAll((LPBYTE)&pNotice,pNotice.h.size);

  00098	0f b6 45 a9	 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  0009c	50		 push	 eax
  0009d	8d 4d a8	 lea	 ecx, DWORD PTR _pNotice$[ebp]
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ?DataSendAll@@YAXPAEH@Z	; DataSendAll
  000a6	83 c4 08	 add	 esp, 8

; 49   : 
; 50   : 	gObj[aIndex].Money -= m_iPostMoney;

  000a9	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  000b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  000b6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b9	8b 84 01 b0 00
	00 00		 mov	 eax, DWORD PTR [ecx+eax+176]
  000c0	2b 42 04	 sub	 eax, DWORD PTR [edx+4]
  000c3	69 4d 08 a0 1b
	00 00		 imul	 ecx, DWORD PTR _aIndex$[ebp], 7072
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  000d0	89 84 0a b0 00
	00 00		 mov	 DWORD PTR [edx+ecx+176], eax

; 51   : 
; 52   : 	GCMoneySend(aIndex,gObj[aIndex].Money);

  000d7	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  000e4	8b 94 01 b0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+176]
  000eb	52		 push	 edx
  000ec	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend
  000f5	83 c4 08	 add	 esp, 8
$LN1@SendPostMe:

; 53   : }

  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx
  000fb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fe	33 cd		 xor	 ecx, ebp
  00100	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
?SendPostMessage@CPostSystem@@QAEXHPAD@Z ENDP		; CPostSystem::SendPostMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?Load@CPostSystem@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?Load@CPostSystem@@QAEXPBD@Z PROC			; CPostSystem::Load, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 	this->m_bPostEnabled = GetPrivateProfileInt("GameServerInfo","PostSystemEnabled", TRUE, filename);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0000f	50		 push	 eax
  00010	6a 01		 push	 1
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IGDGGPJN@PostSystemEnabled@
  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EMJDPFDH@GameServerInfo@
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	89 01		 mov	 DWORD PTR [ecx], eax

; 20   : 	this->m_iPostLevel = GetPrivateProfileInt("GameServerInfo", "PostLevel", 6, filename);

  00027	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0002a	50		 push	 eax
  0002b	6a 06		 push	 6
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_09PMALNNPF@PostLevel@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EMJDPFDH@GameServerInfo@
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 21   : 	this->m_iPostMoney = GetPrivateProfileInt("GameServerInfo", "PostMoney", 50000, filename);

  00043	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00046	50		 push	 eax
  00047	68 50 c3 00 00	 push	 50000			; 0000c350H
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_09NPPPIPJF@PostMoney@
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EMJDPFDH@GameServerInfo@
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 22   : 
; 23   : 	if(this->CheckSetting() == false)

  00062	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?CheckSetting@CPostSystem@@IAE_NXZ ; CPostSystem::CheckSetting
  0006a	0f b6 c0	 movzx	 eax, al
  0006d	85 c0		 test	 eax, eax
  0006f	75 09		 jne	 SHORT $LN1@Load

; 24   : 		this->m_bPostEnabled = false;

  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Load:

; 25   : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
?Load@CPostSystem@@QAEXPBD@Z ENDP			; CPostSystem::Load
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ??0CPostSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPostSystem@@QAE@XZ PROC				; CPostSystem::CPostSystem, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 13   : CPostSystem::CPostSystem() : m_bPostEnabled(false),m_iPostMoney(-1),m_iPostLevel(-1)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 08 ff ff
	ff ff		 mov	 DWORD PTR [eax+8], -1

; 15   : }

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??0CPostSystem@@QAE@XZ ENDP				; CPostSystem::CPostSystem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00031	83 c4 1c	 add	 esp, 28			; 0000001cH
  00034	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00037	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003b	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003d	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00044	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00046	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00049	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004c	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Post.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
