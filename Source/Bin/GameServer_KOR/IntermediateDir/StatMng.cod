; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CStatMng@@QAE@XZ				; CStatMng::CStatMng
PUBLIC	??1CStatMng@@UAE@XZ				; CStatMng::~CStatMng
PUBLIC	?Init@CStatMng@@QAEXXZ				; CStatMng::Init
PUBLIC	?GetMaxStat@CStatMng@@QAEHHH@Z			; CStatMng::GetMaxStat
PUBLIC	??_GCStatMng@@UAEPAXI@Z				; CStatMng::`scalar deleting destructor'
PUBLIC	??_7CStatMng@@6B@				; CStatMng::`vftable'
PUBLIC	?gStatMng@@3VCStatMng@@A			; gStatMng
PUBLIC	??_R4CStatMng@@6B@				; CStatMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCStatMng@@@8				; CStatMng `RTTI Type Descriptor'
PUBLIC	??_R3CStatMng@@8				; CStatMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CStatMng@@8				; CStatMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CStatMng@@8			; CStatMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	??_ECStatMng@@UAEPAXI@Z:PROC			; CStatMng::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?g_GlobalConfig@@3VCGlobalConfig@@A:BYTE	; g_GlobalConfig
_BSS	SEGMENT
?gStatMng@@3VCStatMng@@A DB 01774H DUP (?)		; gStatMng
_BSS	ENDS
CRT$XCU	SEGMENT
?gStatMng$initializer$@@3P6AXXZA DD FLAT:??__EgStatMng@@YAXXZ ; gStatMng$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CStatMng@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CStatMng@@8 DD FLAT:??_R0?AVCStatMng@@@8	; CStatMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CStatMng@@8
rdata$r	ENDS
;	COMDAT ??_R2CStatMng@@8
rdata$r	SEGMENT
??_R2CStatMng@@8 DD FLAT:??_R1A@?0A@EA@CStatMng@@8	; CStatMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CStatMng@@8
rdata$r	SEGMENT
??_R3CStatMng@@8 DD 00H					; CStatMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CStatMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCStatMng@@@8
data$r	SEGMENT
??_R0?AVCStatMng@@@8 DD FLAT:??_7type_info@@6B@		; CStatMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStatMng@@', 00H
data$r	ENDS
;	COMDAT ??_R4CStatMng@@6B@
rdata$r	SEGMENT
??_R4CStatMng@@6B@ DD 00H				; CStatMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCStatMng@@@8
	DD	FLAT:??_R3CStatMng@@8
rdata$r	ENDS
;	COMDAT ??_7CStatMng@@6B@
CONST	SEGMENT
??_7CStatMng@@6B@ DD FLAT:??_R4CStatMng@@6B@		; CStatMng::`vftable'
	DD	FLAT:??_ECStatMng@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FgStatMng@@YAXXZ
text$yd	SEGMENT
??__FgStatMng@@YAXXZ PROC				; `dynamic atexit destructor for 'gStatMng'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?gStatMng@@3VCStatMng@@A ; gStatMng
  0000e	e8 00 00 00 00	 call	 ??1CStatMng@@UAE@XZ	; CStatMng::~CStatMng
  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??__FgStatMng@@YAXXZ ENDP				; `dynamic atexit destructor for 'gStatMng''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
;	COMDAT ??__EgStatMng@@YAXXZ
text$di	SEGMENT
??__EgStatMng@@YAXXZ PROC				; `dynamic initializer for 'gStatMng'', COMDAT

; 12   : CStatMng gStatMng;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b9 00 00 00 00	 mov	 ecx, OFFSET ?gStatMng@@3VCStatMng@@A ; gStatMng
  0000e	e8 00 00 00 00	 call	 ??0CStatMng@@QAE@XZ	; CStatMng::CStatMng
  00013	68 00 00 00 00	 push	 OFFSET ??__FgStatMng@@YAXXZ ; `dynamic atexit destructor for 'gStatMng''
  00018	e8 00 00 00 00	 call	 _atexit
  0001d	83 c4 04	 add	 esp, 4
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??__EgStatMng@@YAXXZ ENDP				; `dynamic initializer for 'gStatMng''
text$di	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCStatMng@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCStatMng@@UAEPAXI@Z PROC				; CStatMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CStatMng@@UAE@XZ	; CStatMng::~CStatMng
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 11		 je	 SHORT $LN2@scalar
  0001c	68 74 17 00 00	 push	 6004			; 00001774H
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GCStatMng@@UAEPAXI@Z ENDP				; CStatMng::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
;	COMDAT ?GetMaxStat@CStatMng@@QAEHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_level$ = 8						; size = 4
_Class$ = 12						; size = 4
?GetMaxStat@CStatMng@@QAEHHH@Z PROC			; CStatMng::GetMaxStat, COMDAT
; _this$ = ecx

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 127  : 	if( level < 1 || level > g_GlobalConfig.m_iMaxLevel )

  0000c	83 7d 08 01	 cmp	 DWORD PTR _level$[ebp], 1
  00010	7c 0b		 jl	 SHORT $LN3@GetMaxStat
  00012	8b 45 08	 mov	 eax, DWORD PTR _level$[ebp]
  00015	3b 05 c8 00 00
	00		 cmp	 eax, DWORD PTR ?g_GlobalConfig@@3VCGlobalConfig@@A+200
  0001b	7e 04		 jle	 SHORT $LN2@GetMaxStat
$LN3@GetMaxStat:

; 128  : 		return 0;

  0001d	33 c0		 xor	 eax, eax
  0001f	eb 37		 jmp	 SHORT $LN1@GetMaxStat
$LN2@GetMaxStat:

; 129  : 
; 130  : #ifdef DARKLORD_WORK
; 131  : #ifdef MODIFY_DARKLORD_CREATION_MAXSTAT_USING_FRUIT_20050712
; 132  : 	if( Class == CLASS_MAGUMSA)

  00021	83 7d 0c 03	 cmp	 DWORD PTR _Class$[ebp], 3
  00025	75 11		 jne	 SHORT $LN4@GetMaxStat

; 133  : #else
; 134  : 	if( Class == CLASS_MAGUMSA || Class == CLASS_DARKLORD )
; 135  : #endif // ## MODIFY_DARKLORD_CREATION_MAXSTAT_USING_FRUIT_20050712
; 136  : #else
; 137  : 	if( Class == CLASS_MAGUMSA )
; 138  : #endif // ## DARKLORD_WORK
; 139  : 	{
; 140  : 		return gObjMagumAddStatTable[level-1];

  00027	8b 45 08	 mov	 eax, DWORD PTR _level$[ebp]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 84 81 d0 07
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+2000]
  00034	eb 22		 jmp	 SHORT $LN1@GetMaxStat

; 141  : 	}

  00036	eb 20		 jmp	 SHORT $LN1@GetMaxStat
$LN4@GetMaxStat:

; 142  : #ifdef MODIFY_DARKLORD_CREATION_MAXSTAT_USING_FRUIT_20050712
; 143  : 	else if( Class == CLASS_DARKLORD )

  00038	83 7d 0c 04	 cmp	 DWORD PTR _Class$[ebp], 4
  0003c	75 11		 jne	 SHORT $LN6@GetMaxStat

; 144  : 	{
; 145  : 		return gObjDarkLordAddStatTable[level-1];

  0003e	8b 45 08	 mov	 eax, DWORD PTR _level$[ebp]
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	8b 84 81 a0 0f
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+4000]
  0004b	eb 0b		 jmp	 SHORT $LN1@GetMaxStat

; 146  : 	}

  0004d	eb 09		 jmp	 SHORT $LN1@GetMaxStat
$LN6@GetMaxStat:

; 147  : #endif // ## MODIFY_DARKLORD_CREATION_MAXSTAT_USING_FRUIT_20050712
; 148  : 
; 149  : 	else
; 150  : 	{
; 151  : 		return gObjNormalAddStatTable[level-1];

  0004f	8b 45 08	 mov	 eax, DWORD PTR _level$[ebp]
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
$LN1@GetMaxStat:

; 152  : 	}
; 153  : }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?GetMaxStat@CStatMng@@QAEHHH@Z ENDP			; CStatMng::GetMaxStat
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
;	COMDAT ?Init@CStatMng@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_iDarkLordFirstState$ = -16				; size = 4
_MagumfirstState$ = -12					; size = 4
_firstState$ = -8					; size = 4
_this$ = -4						; size = 4
?Init@CStatMng@@QAEXXZ PROC				; CStatMng::Init, COMDAT
; _this$ = ecx

; 25   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 26   : 	int firstState			= 2;

  0000c	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _firstState$[ebp], 2

; 27   : 	int MagumfirstState		= 2;

  00013	c7 45 f4 02 00
	00 00		 mov	 DWORD PTR _MagumfirstState$[ebp], 2

; 28   : #ifdef MODIFY_DARKLORD_CREATION_MAXSTAT_USING_FRUIT_20050712
; 29   : 	int iDarkLordFirstState = 2;

  0001a	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR _iDarkLordFirstState$[ebp], 2

; 30   : #endif
; 31   : 
; 32   : 	// 일반 공식: ((10~400)*2)/400+2  (레벨 9까지는 스탯 생성 불가능)
; 33   : 	// 마검 공식: ((10~400)*2)/700+2  (레벨 9까지는 스탯 생성 불가능)	
; 34   : 	// 다크로드 공식: ((10~400)*2)/500+2  (레벨 9까지는 스탯 생성 불가능)
; 35   : 	// #ifdef MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 36   : 	// 마이너스 스텟 열매 공식 변경
; 37   : 	// 감소 일반 공식: ((레벨)*3)/400+2 / 2 (레벨 9까지는 스탯 생성 불가능)
; 38   : 	// 감소 마검 공식: ((레벨)*3)/700+2 / 2 (레벨 9까지는 스탯 생성 불가능)	
; 39   : 	// 감소 다크로드 공식: ((레벨)*3)/500+2 / 2 (레벨 9까지는 스탯 생성 불가능)
; 40   : 	// #endif // MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 41   : 	
; 42   : #if TESTSERVER == 1
; 43   : //	char szTemp[255];
; 44   : //	wsprintf( szTemp, "\n\n★ 열매 생성 포인트 ★\n\n");
; 45   : // 	OutputDebugString(szTemp);
; 46   : #endif
; 47   : 
; 48   : 	for( int i = 0; i < MAX_LEVEL+100; i++ )

  00021	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00028	eb 09		 jmp	 SHORT $LN4@Init
$LN2@Init:
  0002a	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  0002d	83 c0 01	 add	 eax, 1
  00030	89 45 ec	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Init:
  00033	81 7d ec f4 01
	00 00		 cmp	 DWORD PTR _i$1[ebp], 500 ; 000001f4H
  0003a	0f 8d 8f 00 00
	00		 jge	 $LN1@Init

; 49   : 	{	
; 50   : 		if( (i+1)%10 == 0 )

  00040	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00043	83 c0 01	 add	 eax, 1
  00046	99		 cdq
  00047	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0004c	f7 f9		 idiv	 ecx
  0004e	85 d2		 test	 edx, edx
  00050	75 4b		 jne	 SHORT $LN5@Init

; 51   : 		{
; 52   : #ifdef MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 53   : 			firstState			+= ( ((i+11)*3)/400+2 );
; 54   : 			MagumfirstState		+= ( ((i+11)*3)/700+2 );
; 55   : 			iDarkLordFirstState += ( ((i+11)*3)/500+2 );
; 56   : #else
; 57   : 			firstState			+= ((i+11)*2)/400+2;

  00052	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00055	8d 44 00 16	 lea	 eax, DWORD PTR [eax+eax+22]
  00059	99		 cdq
  0005a	b9 90 01 00 00	 mov	 ecx, 400		; 00000190H
  0005f	f7 f9		 idiv	 ecx
  00061	8b 55 f8	 mov	 edx, DWORD PTR _firstState$[ebp]
  00064	8d 44 02 02	 lea	 eax, DWORD PTR [edx+eax+2]
  00068	89 45 f8	 mov	 DWORD PTR _firstState$[ebp], eax

; 58   : 			MagumfirstState		+= ((i+11)*2)/700+2;

  0006b	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  0006e	8d 44 00 16	 lea	 eax, DWORD PTR [eax+eax+22]
  00072	99		 cdq
  00073	b9 bc 02 00 00	 mov	 ecx, 700		; 000002bcH
  00078	f7 f9		 idiv	 ecx
  0007a	8b 55 f4	 mov	 edx, DWORD PTR _MagumfirstState$[ebp]
  0007d	8d 44 02 02	 lea	 eax, DWORD PTR [edx+eax+2]
  00081	89 45 f4	 mov	 DWORD PTR _MagumfirstState$[ebp], eax

; 59   : 	#ifdef MODIFY_DARKLORD_CREATION_MAXSTAT_USING_FRUIT_20050712
; 60   : 			iDarkLordFirstState += ((i+11)*2)/500+2;

  00084	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00087	8d 44 00 16	 lea	 eax, DWORD PTR [eax+eax+22]
  0008b	99		 cdq
  0008c	b9 f4 01 00 00	 mov	 ecx, 500		; 000001f4H
  00091	f7 f9		 idiv	 ecx
  00093	8b 55 f0	 mov	 edx, DWORD PTR _iDarkLordFirstState$[ebp]
  00096	8d 44 02 02	 lea	 eax, DWORD PTR [edx+eax+2]
  0009a	89 45 f0	 mov	 DWORD PTR _iDarkLordFirstState$[ebp], eax
$LN5@Init:

; 61   : 	#endif
; 62   : #endif // MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 63   : 
; 64   : #if TESTSERVER == 1
; 65   : //			wsprintf( szTemp, "[Lv%03d] %d\t%d\t%d\n", i+1, firstState, MagumfirstState, iDarkLordFirstState );
; 66   : // 			OutputDebugString(szTemp);
; 67   : #endif
; 68   : 		}
; 69   : 
; 70   : 		gObjNormalAddStatTable[i]	= firstState;

  0009d	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR _firstState$[ebp]
  000a6	89 54 81 04	 mov	 DWORD PTR [ecx+eax*4+4], edx

; 71   : 		gObjMagumAddStatTable[i]	= MagumfirstState;	

  000aa	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	8b 55 f4	 mov	 edx, DWORD PTR _MagumfirstState$[ebp]
  000b3	89 94 81 d4 07
	00 00		 mov	 DWORD PTR [ecx+eax*4+2004], edx

; 72   : #ifdef MODIFY_DARKLORD_CREATION_MAXSTAT_USING_FRUIT_20050712
; 73   : 		gObjDarkLordAddStatTable[i] = iDarkLordFirstState;

  000ba	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	8b 55 f0	 mov	 edx, DWORD PTR _iDarkLordFirstState$[ebp]
  000c3	89 94 81 a4 0f
	00 00		 mov	 DWORD PTR [ecx+eax*4+4004], edx

; 74   : #endif
; 75   : 	}

  000ca	e9 5b ff ff ff	 jmp	 $LN2@Init
$LN1@Init:

; 76   : 
; 77   : #if TESTSERVER == 1
; 78   : //	wsprintf( szTemp, "\n\n");
; 79   : // 	OutputDebugString(szTemp);
; 80   : #endif
; 81   : 
; 82   : 
; 83   : #ifdef ADD_MINUS_STAT_SYSTEM_USING_FRUIT_20050712
; 84   : 	// 감소 일반 공식: ((10~400)*2)/400+2 / 2 (레벨 9까지는 스탯 생성 불가능)
; 85   : 	// 감소 마검 공식: ((10~400)*2)/700+2 / 2 (레벨 9까지는 스탯 생성 불가능)	
; 86   : 	// 감소 다크로드 공식: ((10~400)*2)/500+2 / 2 (레벨 9까지는 스탯 생성 불가능)
; 87   : 	// #ifdef MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 88   : 	// 마이너스 스텟 열매 공식 변경
; 89   : 	// 감소 일반 공식: ((레벨)*3)/400+2 / 2 (레벨 9까지는 스탯 생성 불가능)
; 90   : 	// 감소 마검 공식: ((레벨)*3)/700+2 / 2 (레벨 9까지는 스탯 생성 불가능)	
; 91   : 	// 감소 다크로드 공식: ((레벨)*3)/500+2 / 2 (레벨 9까지는 스탯 생성 불가능)
; 92   : 	// #endif // MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 93   : 
; 94   : 
; 95   : 	// * 누적됨.
; 96   : 
; 97   : 	firstState			= 2;
; 98   : 	MagumfirstState		= 2;
; 99   : 	iDarkLordFirstState = 2;
; 100  : 
; 101  : 	for( int i = 0; i < MAX_LEVEL+100; i++ )
; 102  : 	{
; 103  : 		if( (i+1)%10 == 0 )
; 104  : 		{
; 105  : #ifdef MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 106  : 			firstState			+= ( ((i+11)*3)/400+2 );
; 107  : 			MagumfirstState		+= ( ((i+11)*3)/700+2 );
; 108  : 			iDarkLordFirstState += ( ((i+11)*3)/500+2 );
; 109  : #else
; 110  : 			firstState			+= ( ((i+11)*2)/400+2 );
; 111  : 			MagumfirstState		+= ( ((i+11)*2)/700+2 );
; 112  : 			iDarkLordFirstState += ( ((i+11)*2)/500+2 );
; 113  : #endif // MODIFY_MINUS_FRUIT_POINT_CALC_20080627
; 114  : 		}
; 115  : 
; 116  : 		gObjNormalMinusStatTable[i]		= firstState;
; 117  : 		gObjMagumMinusStatTable[i]		= MagumfirstState;	
; 118  : 		gObjDarkLordMinusStatTable[i]	= iDarkLordFirstState;
; 119  : 	}
; 120  : #endif
; 121  : 
; 122  : 
; 123  : }

  000cf	5f		 pop	 edi
  000d0	5e		 pop	 esi
  000d1	5b		 pop	 ebx
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
?Init@CStatMng@@QAEXXZ ENDP				; CStatMng::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
;	COMDAT ??1CStatMng@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CStatMng@@UAE@XZ PROC				; CStatMng::~CStatMng, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CStatMng@@6B@

; 21   : 
; 22   : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??1CStatMng@@UAE@XZ ENDP				; CStatMng::~CStatMng
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
;	COMDAT ??0CStatMng@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CStatMng@@QAE@XZ PROC				; CStatMng::CStatMng, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CStatMng@@6B@

; 16   : 	Init();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?Init@CStatMng@@QAEXXZ	; CStatMng::Init

; 17   : }

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CStatMng@@QAE@XZ ENDP				; CStatMng::CStatMng
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\StatMng.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
