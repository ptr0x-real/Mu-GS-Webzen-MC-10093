; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Licencia.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?pLicense@@3ULICENSE@@A				; pLicense
_BSS	SEGMENT
?pLicense@@3ULICENSE@@A DQ 01H DUP (?)			; pLicense
_BSS	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?ReadyLicense@@YAXXZ				; ReadyLicense
PUBLIC	?MACProtection@@YA_NXZ				; MACProtection
PUBLIC	?CheckingMAC@@YA_NPBD@Z				; CheckingMAC
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@	; `string'
PUBLIC	??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@	; `string'
PUBLIC	??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@	; `string'
PUBLIC	??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@	; `string'
PUBLIC	??_C@_0BO@GHBLPFMO@?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X@ ; `string'
PUBLIC	??_C@_0EK@EKFCNHNN@MC?5LICENCIA?5INVALIDA?5?0?5enviar?5e@ ; `string'
PUBLIC	??_C@_0BO@MDKDBACE@LICENSE?5MIRAGE?5CONTINENT?5V9?40@ ; `string'
EXTRN	_strcmp:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	__imp__UuidCreateSequential@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_0BO@MDKDBACE@LICENSE?5MIRAGE?5CONTINENT?5V9?40@
CONST	SEGMENT
??_C@_0BO@MDKDBACE@LICENSE?5MIRAGE?5CONTINENT?5V9?40@ DB 'LICENSE MIRAGE '
	DB	'CONTINENT V9.0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@EKFCNHNN@MC?5LICENCIA?5INVALIDA?5?0?5enviar?5e@
CONST	SEGMENT
??_C@_0EK@EKFCNHNN@MC?5LICENCIA?5INVALIDA?5?0?5enviar?5e@ DB 'MC LICENCIA'
	DB	' INVALIDA , enviar esta serie: (%02X-%02X-%02X-%02X-%02X-%02X'
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GHBLPFMO@?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X@
CONST	SEGMENT
??_C@_0BO@GHBLPFMO@?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X@ DB '%'
	DB	'02X-%02X-%02X-%02X-%02X-%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@
CONST	SEGMENT
??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@ DB '00-50-56-06-48-01', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@
CONST	SEGMENT
??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@ DB '00-50-56-0A-50-D4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@
CONST	SEGMENT
??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@ DB 'FE-7E-5F-74-31-B1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@
CONST	SEGMENT
??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@ DB '70-71-BC-7B-DE-A0', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Licencia.cpp
;	COMDAT ?CheckingMAC@@YA_NPBD@Z
_TEXT	SEGMENT
_x$1 = -244						; size = 4
_ClientsMacs$ = -240					; size = 234
__$ArrayPad$ = -4					; size = 4
_MacID$ = 8						; size = 4
?CheckingMAC@@YA_NPBD@Z PROC				; CheckingMAC, COMDAT

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 01 00
	00		 sub	 esp, 308		; 00000134H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 14   : 	char ClientsMacs[13][18] =

  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@
  0001b	89 85 10 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp], eax
  00021	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@+4
  00027	89 8d 14 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+4], ecx
  0002d	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@+8
  00033	89 95 18 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+8], edx
  00039	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@+12
  0003e	89 85 1c ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+12], eax
  00044	66 8b 0d 10 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BC@OGMKLLEN@70?971?9BC?97B?9DE?9A0@+16
  0004b	66 89 8d 20 ff
	ff ff		 mov	 WORD PTR _ClientsMacs$[ebp+16], cx
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@
  00057	89 85 22 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+18], eax
  0005d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@+4
  00063	89 8d 26 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+22], ecx
  00069	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@+8
  0006f	89 95 2a ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+26], edx
  00075	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@+12
  0007a	89 85 2e ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+30], eax
  00080	66 8b 0d 10 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BC@OJLLCPAF@FE?97E?95F?974?931?9B1@+16
  00087	66 89 8d 32 ff
	ff ff		 mov	 WORD PTR _ClientsMacs$[ebp+34], cx
  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@
  00093	89 85 34 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+36], eax
  00099	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@+4
  0009f	89 8d 38 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+40], ecx
  000a5	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@+8
  000ab	89 95 3c ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+44], edx
  000b1	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@+12
  000b6	89 85 40 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+48], eax
  000bc	66 8b 0d 10 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BC@JEMPKLBK@00?950?956?90A?950?9D4@+16
  000c3	66 89 8d 44 ff
	ff ff		 mov	 WORD PTR _ClientsMacs$[ebp+52], cx
  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@
  000cf	89 85 46 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+54], eax
  000d5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@+4
  000db	89 8d 4a ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+58], ecx
  000e1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@+8
  000e7	89 95 4e ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+62], edx
  000ed	a1 0c 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@+12
  000f2	89 85 52 ff ff
	ff		 mov	 DWORD PTR _ClientsMacs$[ebp+66], eax
  000f8	66 8b 0d 10 00
	00 00		 mov	 cx, WORD PTR ??_C@_0BC@OHPJJPDO@00?950?956?906?948?901@+16
  000ff	66 89 8d 56 ff
	ff ff		 mov	 WORD PTR _ClientsMacs$[ebp+70], cx
  00106	68 a2 00 00 00	 push	 162			; 000000a2H
  0010b	6a 00		 push	 0
  0010d	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR _ClientsMacs$[ebp+72]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 _memset
  00119	83 c4 0c	 add	 esp, 12			; 0000000cH

; 15   : 	{
; 16   : 		"70-71-BC-7B-DE-A0",
; 17   : 		"FE-7E-5F-74-31-B1",
; 18   : 		"00-50-56-0A-50-D4",
; 19   : 		"00-50-56-06-48-01",
; 20   : 	};
; 21   : 
; 22   : 	for(int x=0; x<13; x++)

  0011c	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _x$1[ebp], 0
  00126	eb 0f		 jmp	 SHORT $LN4@CheckingMA
$LN2@CheckingMA:
  00128	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _x$1[ebp]
  0012e	83 c0 01	 add	 eax, 1
  00131	89 85 0c ff ff
	ff		 mov	 DWORD PTR _x$1[ebp], eax
$LN4@CheckingMA:
  00137	83 bd 0c ff ff
	ff 0d		 cmp	 DWORD PTR _x$1[ebp], 13	; 0000000dH
  0013e	7d 25		 jge	 SHORT $LN3@CheckingMA

; 23   : 	{
; 24   : 		if(!strcmp(MacID,ClientsMacs[x]))

  00140	6b 85 0c ff ff
	ff 12		 imul	 eax, DWORD PTR _x$1[ebp], 18
  00147	8d 8c 05 10 ff
	ff ff		 lea	 ecx, DWORD PTR _ClientsMacs$[ebp+eax]
  0014e	51		 push	 ecx
  0014f	8b 55 08	 mov	 edx, DWORD PTR _MacID$[ebp]
  00152	52		 push	 edx
  00153	e8 00 00 00 00	 call	 _strcmp
  00158	83 c4 08	 add	 esp, 8
  0015b	85 c0		 test	 eax, eax
  0015d	75 04		 jne	 SHORT $LN5@CheckingMA

; 25   : 		{
; 26   : 			return true;

  0015f	b0 01		 mov	 al, 1
  00161	eb 04		 jmp	 SHORT $LN1@CheckingMA
$LN5@CheckingMA:

; 27   : 		}
; 28   : 	}

  00163	eb c3		 jmp	 SHORT $LN2@CheckingMA
$LN3@CheckingMA:

; 29   : 	return false;

  00165	32 c0		 xor	 al, al
$LN1@CheckingMA:

; 30   : }

  00167	5f		 pop	 edi
  00168	5e		 pop	 esi
  00169	5b		 pop	 ebx
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016d	33 cd		 xor	 ecx, ebp
  0016f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c3		 ret	 0
?CheckingMAC@@YA_NPBD@Z ENDP				; CheckingMAC
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Licencia.cpp
;	COMDAT ?MACProtection@@YA_NXZ
_TEXT	SEGMENT
_Nose$1 = -308						; size = 255
_MACADDR$ = -52						; size = 18
_i$2 = -32						; size = 4
_uuid$ = -28						; size = 16
_MACData$ = -12						; size = 6
__$ArrayPad$ = -4					; size = 4
?MACProtection@@YA_NXZ PROC				; MACProtection, COMDAT

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 74 01 00
	00		 sub	 esp, 372		; 00000174H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 34   : 	unsigned char MACData[6];
; 35   : 
; 36   : 	UUID uuid;
; 37   : 	UuidCreateSequential( &uuid );

  00016	8d 45 e4	 lea	 eax, DWORD PTR _uuid$[ebp]
  00019	50		 push	 eax
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UuidCreateSequential@4

; 38   : 
; 39   : 	for (int i=2; i<8; i++)

  00020	c7 45 e0 02 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 2
  00027	eb 09		 jmp	 SHORT $LN4@MACProtect
$LN2@MACProtect:
  00029	8b 45 e0	 mov	 eax, DWORD PTR _i$2[ebp]
  0002c	83 c0 01	 add	 eax, 1
  0002f	89 45 e0	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@MACProtect:
  00032	83 7d e0 08	 cmp	 DWORD PTR _i$2[ebp], 8
  00036	7d 10		 jge	 SHORT $LN3@MACProtect

; 40   : 	{
; 41   : 		MACData[i - 2] = uuid.Data4[i];

  00038	8b 45 e0	 mov	 eax, DWORD PTR _i$2[ebp]
  0003b	8b 4d e0	 mov	 ecx, DWORD PTR _i$2[ebp]
  0003e	8a 54 0d ec	 mov	 dl, BYTE PTR _uuid$[ebp+ecx+8]
  00042	88 54 05 f2	 mov	 BYTE PTR _MACData$[ebp+eax-2], dl

; 42   : 	}

  00046	eb e1		 jmp	 SHORT $LN2@MACProtect
$LN3@MACProtect:

; 43   : 
; 44   : 	char MACADDR[18];
; 45   : 	sprintf(MACADDR, "%02X-%02X-%02X-%02X-%02X-%02X", MACData[0], MACData[1], MACData[2], MACData[3], MACData[4], MACData[5]);

  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	6b c8 05	 imul	 ecx, eax, 5
  00050	0f b6 54 0d f4	 movzx	 edx, BYTE PTR _MACData$[ebp+ecx]
  00055	52		 push	 edx
  00056	b8 01 00 00 00	 mov	 eax, 1
  0005b	c1 e0 02	 shl	 eax, 2
  0005e	0f b6 4c 05 f4	 movzx	 ecx, BYTE PTR _MACData$[ebp+eax]
  00063	51		 push	 ecx
  00064	ba 01 00 00 00	 mov	 edx, 1
  00069	6b c2 03	 imul	 eax, edx, 3
  0006c	0f b6 4c 05 f4	 movzx	 ecx, BYTE PTR _MACData$[ebp+eax]
  00071	51		 push	 ecx
  00072	ba 01 00 00 00	 mov	 edx, 1
  00077	d1 e2		 shl	 edx, 1
  00079	0f b6 44 15 f4	 movzx	 eax, BYTE PTR _MACData$[ebp+edx]
  0007e	50		 push	 eax
  0007f	b9 01 00 00 00	 mov	 ecx, 1
  00084	c1 e1 00	 shl	 ecx, 0
  00087	0f b6 54 0d f4	 movzx	 edx, BYTE PTR _MACData$[ebp+ecx]
  0008c	52		 push	 edx
  0008d	b8 01 00 00 00	 mov	 eax, 1
  00092	6b c8 00	 imul	 ecx, eax, 0
  00095	0f b6 54 0d f4	 movzx	 edx, BYTE PTR _MACData$[ebp+ecx]
  0009a	52		 push	 edx
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GHBLPFMO@?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X?9?$CF02X@
  000a0	8d 45 cc	 lea	 eax, DWORD PTR _MACADDR$[ebp]
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 _sprintf
  000a9	83 c4 20	 add	 esp, 32			; 00000020H

; 46   : 
; 47   : 	if(CheckingMAC(MACADDR))

  000ac	8d 45 cc	 lea	 eax, DWORD PTR _MACADDR$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?CheckingMAC@@YA_NPBD@Z	; CheckingMAC
  000b5	83 c4 04	 add	 esp, 4
  000b8	0f b6 c8	 movzx	 ecx, al
  000bb	85 c9		 test	 ecx, ecx
  000bd	74 0c		 je	 SHORT $LN5@MACProtect

; 48   : 	{
; 49   : 		return true;

  000bf	b0 01		 mov	 al, 1
  000c1	e9 8c 00 00 00	 jmp	 $LN7@MACProtect

; 50   : 	}

  000c6	e9 85 00 00 00	 jmp	 $LN6@MACProtect
$LN5@MACProtect:

; 51   : 
; 52   : 	else
; 53   : 	{
; 54   : 		char Nose[255];
; 55   : 		sprintf(Nose, "MC LICENCIA INVALIDA , enviar esta serie: (%02X-%02X-%02X-%02X-%02X-%02X)", MACData[0], MACData[1], MACData[2], MACData[3], MACData[4], MACData[5]);

  000cb	b8 01 00 00 00	 mov	 eax, 1
  000d0	6b c8 05	 imul	 ecx, eax, 5
  000d3	0f b6 54 0d f4	 movzx	 edx, BYTE PTR _MACData$[ebp+ecx]
  000d8	52		 push	 edx
  000d9	b8 01 00 00 00	 mov	 eax, 1
  000de	c1 e0 02	 shl	 eax, 2
  000e1	0f b6 4c 05 f4	 movzx	 ecx, BYTE PTR _MACData$[ebp+eax]
  000e6	51		 push	 ecx
  000e7	ba 01 00 00 00	 mov	 edx, 1
  000ec	6b c2 03	 imul	 eax, edx, 3
  000ef	0f b6 4c 05 f4	 movzx	 ecx, BYTE PTR _MACData$[ebp+eax]
  000f4	51		 push	 ecx
  000f5	ba 01 00 00 00	 mov	 edx, 1
  000fa	d1 e2		 shl	 edx, 1
  000fc	0f b6 44 15 f4	 movzx	 eax, BYTE PTR _MACData$[ebp+edx]
  00101	50		 push	 eax
  00102	b9 01 00 00 00	 mov	 ecx, 1
  00107	c1 e1 00	 shl	 ecx, 0
  0010a	0f b6 54 0d f4	 movzx	 edx, BYTE PTR _MACData$[ebp+ecx]
  0010f	52		 push	 edx
  00110	b8 01 00 00 00	 mov	 eax, 1
  00115	6b c8 00	 imul	 ecx, eax, 0
  00118	0f b6 54 0d f4	 movzx	 edx, BYTE PTR _MACData$[ebp+ecx]
  0011d	52		 push	 edx
  0011e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@EKFCNHNN@MC?5LICENCIA?5INVALIDA?5?0?5enviar?5e@
  00123	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _Nose$1[ebp]
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 _sprintf
  0012f	83 c4 20	 add	 esp, 32			; 00000020H

; 56   : 		MessageBoxA(NULL, Nose, "LICENSE MIRAGE CONTINENT V9.0",MB_OK);

  00132	6a 00		 push	 0
  00134	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@MDKDBACE@LICENSE?5MIRAGE?5CONTINENT?5V9?40@
  00139	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _Nose$1[ebp]
  0013f	50		 push	 eax
  00140	6a 00		 push	 0
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 57   : 	    ExitProcess(0);

  00148	6a 00		 push	 0
  0014a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitProcess@4
$LN6@MACProtect:

; 58   : 	}
; 59   : 	return false;

  00150	32 c0		 xor	 al, al
$LN7@MACProtect:

; 60   : }

  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00158	33 cd		 xor	 ecx, ebp
  0015a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c3		 ret	 0
?MACProtection@@YA_NXZ ENDP				; MACProtection
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Licencia.cpp
;	COMDAT ?ReadyLicense@@YAXXZ
_TEXT	SEGMENT
?ReadyLicense@@YAXXZ PROC				; ReadyLicense, COMDAT

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 9    : 	MACProtection();

  00009	e8 00 00 00 00	 call	 ?MACProtection@@YA_NXZ	; MACProtection

; 10   : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?ReadyLicense@@YAXXZ ENDP				; ReadyLicense
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00031	83 c4 1c	 add	 esp, 28			; 0000001cH
  00034	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00037	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003b	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003d	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00044	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00046	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00049	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004c	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Licencia.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Licencia.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
