; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	_vsprintf
PUBLIC	?_ARGB@@YAKEEEE@Z				; _ARGB
PUBLIC	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z		; TNotice::MakeNoticeMsg
PUBLIC	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ		; TNotice::MakeNoticeMsgEx
PUBLIC	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z	; TNotice::SetNoticeProperty
PUBLIC	?SendNoticeToUser@TNotice@@SAXHPAX@Z		; TNotice::SendNoticeToUser
PUBLIC	?SendNoticeToAllUser@TNotice@@SAXPAX@Z		; TNotice::SendNoticeToAllUser
PUBLIC	?AllSendServerMsg@TNotice@@SAXPAD@Z		; TNotice::AllSendServerMsg
PUBLIC	?GCServerMsgStringSend@TNotice@@SAXPADHE@Z	; TNotice::GCServerMsgStringSend
PUBLIC	??0TNotice@@QAE@E@Z				; TNotice::TNotice
PUBLIC	?SendToUser@TNotice@@QAAXHPADZZ			; TNotice::SendToUser
PUBLIC	?SendToAllUser@TNotice@@QAAXPADZZ		; TNotice::SendToAllUser
PUBLIC	?MsgOutputAll@TNotice@@QAAXPADZZ		; TNotice::MsgOutputAll
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
EXTRN	_strlen:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	?gObj@@3PAVOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?MsgOutputAll@TNotice@@QAAXPADZZ
_TEXT	SEGMENT
_i$1 = -524						; size = 4
_pArguments$ = -520					; size = 4
_szBuffer$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_message$ = 12						; size = 4
?MsgOutputAll@TNotice@@QAAXPADZZ PROC			; TNotice::MsgOutputAll, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 02 00
	00		 sub	 esp, 656		; 00000290H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 234  : 	char szBuffer[512] = "";

  00016	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  0001b	88 85 fc fd ff
	ff		 mov	 BYTE PTR _szBuffer$[ebp], al
  00021	68 ff 01 00 00	 push	 511			; 000001ffH
  00026	6a 00		 push	 0
  00028	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 _memset
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 235  : 	va_list pArguments;
; 236  : 
; 237  : 	va_start(pArguments, message);

  00037	8d 45 10	 lea	 eax, DWORD PTR _message$[ebp+4]
  0003a	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _pArguments$[ebp], eax

; 238  : 	vsprintf(&szBuffer[0], message, pArguments);

  00040	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR _pArguments$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _message$[ebp]
  0004a	51		 push	 ecx
  0004b	ba 01 00 00 00	 mov	 edx, 1
  00050	6b c2 00	 imul	 eax, edx, 0
  00053	8d 8c 05 fc fd
	ff ff		 lea	 ecx, DWORD PTR _szBuffer$[ebp+eax]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 _vsprintf
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 239  : 	va_end(pArguments);

  00063	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _pArguments$[ebp], 0

; 240  : 
; 241  : 	for(int i = OBJECT_MIN; i < MAX_OBJECT; i++)

  0006d	c7 85 f4 fd ff
	ff 00 19 00 00	 mov	 DWORD PTR _i$1[ebp], 6400 ; 00001900H
  00077	eb 0f		 jmp	 SHORT $LN4@MsgOutputA
$LN2@MsgOutputA:
  00079	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  0007f	83 c0 01	 add	 eax, 1
  00082	89 85 f4 fd ff
	ff		 mov	 DWORD PTR _i$1[ebp], eax
$LN4@MsgOutputA:
  00088	81 bd f4 fd ff
	ff e8 1c 00 00	 cmp	 DWORD PTR _i$1[ebp], 7400 ; 00001ce8H
  00092	7d 3a		 jge	 SHORT $LN1@MsgOutputA

; 242  : 	{
; 243  : 		if(gObj[i].Connected == 3)

  00094	69 85 f4 fd ff
	ff a0 1b 00 00	 imul	 eax, DWORD PTR _i$1[ebp], 7072
  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  000a4	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  000a9	75 21		 jne	 SHORT $LN5@MsgOutputA

; 244  : 		{
; 245  : 			GCServerMsgStringSend(&szBuffer[0], i, 1);

  000ab	6a 01		 push	 1
  000ad	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR _i$1[ebp]
  000b3	50		 push	 eax
  000b4	b9 01 00 00 00	 mov	 ecx, 1
  000b9	6b d1 00	 imul	 edx, ecx, 0
  000bc	8d 84 15 fc fd
	ff ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+edx]
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@TNotice@@SAXPADHE@Z ; TNotice::GCServerMsgStringSend
  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@MsgOutputA:

; 246  : 		}
; 247  : 	}

  000cc	eb ab		 jmp	 SHORT $LN2@MsgOutputA
$LN1@MsgOutputA:

; 248  : }

  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d4	33 cd		 xor	 ecx, ebp
  000d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
?MsgOutputAll@TNotice@@QAAXPADZZ ENDP			; TNotice::MsgOutputAll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?SendToAllUser@TNotice@@QAAXPADZZ
_TEXT	SEGMENT
_n$1 = -8						; size = 4
_pArguments$ = -4					; size = 4
_this$ = 8						; size = 4
_szMsg$ = 12						; size = 4
?SendToAllUser@TNotice@@QAAXPADZZ PROC			; TNotice::SendToAllUser, COMDAT

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 164  : 
; 165  : #ifdef UNICODE_MODE_20050718
; 166  : 	char szTempMsg[4096] = {0,};
; 167  : 	memset(m_Notice.Notice, 0, sizeof(m_Notice.Notice));
; 168  : 
; 169  : 	va_list	pArguments;
; 170  : 	va_start(pArguments, szMsg);
; 171  :     vsprintf(szTempMsg, szMsg, pArguments);
; 172  :     va_end(pArguments);
; 173  : 
; 174  : 	MultiByteToWideChar(DEFAULT_CODEPAGE, 0, (char*)szTempMsg, strlen(szTempMsg), (WCHAR*)m_Notice.Notice, sizeof(m_Notice.Notice));
; 175  : 	m_Notice.Notice[sizeof(m_Notice.Notice)-2] = 0;
; 176  : 	m_Notice.Notice[sizeof(m_Notice.Notice)-1] = 0;
; 177  : 	PHeadSetB((LPBYTE)&m_Notice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(m_Notice.Notice) + (wcslen((WCHAR*)m_Notice.Notice)*2+2));
; 178  : #else
; 179  : 	va_list	pArguments;
; 180  : 	va_start(pArguments, szMsg);

  00009	8d 45 10	 lea	 eax, DWORD PTR _szMsg$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR _pArguments$[ebp], eax

; 181  :     vsprintf(m_Notice.Notice, szMsg, pArguments);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _pArguments$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _szMsg$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	83 c2 0d	 add	 edx, 13			; 0000000dH
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 _vsprintf
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 182  :     va_end(pArguments);

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pArguments$[ebp], 0

; 183  : 
; 184  : #ifdef MODIFY_NOTICE_20040325
; 185  : 	PHeadSetB((LPBYTE)&m_Notice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(m_Notice.Notice) + (strlen(m_Notice.Notice)+1));

  0002d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 c0 0d	 add	 eax, 13			; 0000000dH
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 _strlen
  00039	83 c4 04	 add	 esp, 4
  0003c	83 c0 11	 add	 eax, 17			; 00000011H
  0003f	50		 push	 eax
  00040	6a 0d		 push	 13			; 0000000dH
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	51		 push	 ecx
  00046	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 186  : #else
; 187  : 	PHeadSetB((LPBYTE)&m_Notice, 0x0D, 4+(strlen(m_Notice.Notice)+1));
; 188  : #endif
; 189  : #endif
; 190  : 
; 191  : 	for( int n=ALLOC_USEROBJECTSTART; n<MAX_OBJECT; n++)

  0004e	c7 45 f8 00 19
	00 00		 mov	 DWORD PTR _n$1[ebp], 6400 ; 00001900H
  00055	eb 09		 jmp	 SHORT $LN4@SendToAllU
$LN2@SendToAllU:
  00057	8b 45 f8	 mov	 eax, DWORD PTR _n$1[ebp]
  0005a	83 c0 01	 add	 eax, 1
  0005d	89 45 f8	 mov	 DWORD PTR _n$1[ebp], eax
$LN4@SendToAllU:
  00060	81 7d f8 e8 1c
	00 00		 cmp	 DWORD PTR _n$1[ebp], 7400 ; 00001ce8H
  00067	7d 45		 jge	 SHORT $LN1@SendToAllU

; 192  : 	{
; 193  : 		if( gObj[n].Connected == 3 && (gObj[n].Type == OBJTYPE_CHARACTER) )

  00069	69 45 f8 a0 1b
	00 00		 imul	 eax, DWORD PTR _n$1[ebp], 7072
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00076	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  0007b	75 2f		 jne	 SHORT $LN5@SendToAllU
  0007d	69 45 f8 a0 1b
	00 00		 imul	 eax, DWORD PTR _n$1[ebp], 7072
  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  0008a	0f b7 54 01 64	 movzx	 edx, WORD PTR [ecx+eax+100]
  0008f	83 fa 01	 cmp	 edx, 1
  00092	75 18		 jne	 SHORT $LN5@SendToAllU

; 194  : 		{
; 195  : 			DataSend(n, (LPBYTE)&m_Notice, m_Notice.h.size);

  00094	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00097	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0009b	51		 push	 ecx
  0009c	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0009f	52		 push	 edx
  000a0	8b 45 f8	 mov	 eax, DWORD PTR _n$1[ebp]
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000a9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@SendToAllU:

; 196  : 		}
; 197  : 	}

  000ac	eb a9		 jmp	 SHORT $LN2@SendToAllU
$LN1@SendToAllU:

; 198  : }

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
?SendToAllUser@TNotice@@QAAXPADZZ ENDP			; TNotice::SendToAllUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?SendToUser@TNotice@@QAAXHPADZZ
_TEXT	SEGMENT
_pArguments$ = -4					; size = 4
_this$ = 8						; size = 4
_aIndex$ = 12						; size = 4
_szMsg$ = 16						; size = 4
?SendToUser@TNotice@@QAAXHPADZZ PROC			; TNotice::SendToUser, COMDAT

; 201  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 202  : #ifdef UNICODE_MODE_20050718
; 203  : 	char szTempMsg[4096] = {0,};
; 204  : 	memset(m_Notice.Notice, 0, sizeof(m_Notice.Notice));
; 205  : 
; 206  : 	va_list	pArguments;
; 207  : 	va_start(pArguments, szMsg);
; 208  :     vsprintf(szTempMsg, szMsg, pArguments);
; 209  :     va_end(pArguments);
; 210  : 
; 211  : 	MultiByteToWideChar(DEFAULT_CODEPAGE, 0, (char*)szTempMsg, strlen(szTempMsg), (WCHAR*)m_Notice.Notice, sizeof(m_Notice.Notice));
; 212  : 	m_Notice.Notice[sizeof(m_Notice.Notice)-2] = 0;
; 213  : 	m_Notice.Notice[sizeof(m_Notice.Notice)-1] = 0;
; 214  : 	PHeadSetB((LPBYTE)&m_Notice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(m_Notice.Notice) + (wcslen((WCHAR*)m_Notice.Notice)*2+2));
; 215  : #else
; 216  : 	va_list	pArguments;
; 217  : 	va_start(pArguments, szMsg);

  00009	8d 45 14	 lea	 eax, DWORD PTR _szMsg$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR _pArguments$[ebp], eax

; 218  :     vsprintf(m_Notice.Notice, szMsg, pArguments);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _pArguments$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _szMsg$[ebp]
  00016	51		 push	 ecx
  00017	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0001a	83 c2 0d	 add	 edx, 13			; 0000000dH
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 _vsprintf
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 219  :     va_end(pArguments);

  00026	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pArguments$[ebp], 0

; 220  : 
; 221  : #ifdef MODIFY_NOTICE_20040325
; 222  : 	PHeadSetB((LPBYTE)&m_Notice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(m_Notice.Notice) + (strlen(m_Notice.Notice)+1));

  0002d	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 c0 0d	 add	 eax, 13			; 0000000dH
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 _strlen
  00039	83 c4 04	 add	 esp, 4
  0003c	83 c0 11	 add	 eax, 17			; 00000011H
  0003f	50		 push	 eax
  00040	6a 0d		 push	 13			; 0000000dH
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	51		 push	 ecx
  00046	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 223  : #else
; 224  : 	PHeadSetB((LPBYTE)&m_Notice, 0x0D, 4+(strlen(m_Notice.Notice)+1));
; 225  : #endif
; 226  : #endif
; 227  : 
; 228  : 	DataSend(aIndex, (LPBYTE)&m_Notice, m_Notice.h.size);

  0004e	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00051	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00055	51		 push	 ecx
  00056	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  00059	52		 push	 edx
  0005a	8b 45 0c	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 229  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?SendToUser@TNotice@@QAAXHPADZZ ENDP			; TNotice::SendToUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ??0TNotice@@QAE@E@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_btType$ = 8						; size = 1
??0TNotice@@QAE@E@Z PROC				; TNotice::TNotice, COMDAT
; _this$ = ecx

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 153  : #ifdef MODIFY_NOTICE_20040325
; 154  : 	m_Notice.btCount = TNOTICE_COUNT_DEFAULT;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 155  : 	m_Notice.btSpeed = TNOTICE_SPEED_DEFAULT;

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	c6 40 0c 14	 mov	 BYTE PTR [eax+12], 20	; 00000014H

; 156  : 	m_Notice.dwColor = TNOTICE_COLOR_DEFAULT;

  0001a	6a 50		 push	 80			; 00000050H
  0001c	68 c8 00 00 00	 push	 200			; 000000c8H
  00021	68 ff 00 00 00	 push	 255			; 000000ffH
  00026	68 ff 00 00 00	 push	 255			; 000000ffH
  0002b	e8 00 00 00 00	 call	 ?_ARGB@@YAKEEEE@Z	; _ARGB
  00030	83 c4 10	 add	 esp, 16			; 00000010H
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 157  : 	m_Notice.wDelay  = TNOTICE_DELAY_DEFAULT;

  00039	33 c0		 xor	 eax, eax
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	66 89 41 06	 mov	 WORD PTR [ecx+6], ax

; 158  : #endif
; 159  : 	m_Notice.type	 = btType;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8a 4d 08	 mov	 cl, BYTE PTR _btType$[ebp]
  00048	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 160  : }

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
??0TNotice@@QAE@E@Z ENDP				; TNotice::TNotice
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?GCServerMsgStringSend@TNotice@@SAXPADHE@Z
_TEXT	SEGMENT
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_szMsg$ = 8						; size = 4
_aIndex$ = 12						; size = 4
_type$ = 16						; size = 1
?GCServerMsgStringSend@TNotice@@SAXPADHE@Z PROC		; TNotice::GCServerMsgStringSend, COMDAT

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 144  : 	PMSG_NOTICE	pNotice;
; 145  : 
; 146  : 	TNotice::MakeNoticeMsg( &pNotice, type, szMsg );

  00016	8b 45 08	 mov	 eax, DWORD PTR _szMsg$[ebp]
  00019	50		 push	 eax
  0001a	0f b6 4d 10	 movzx	 ecx, BYTE PTR _type$[ebp]
  0001e	51		 push	 ecx
  0001f	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$[ebp]
  00025	52		 push	 edx
  00026	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 147  : 
; 148  : 	DataSend(aIndex, (LPBYTE)&pNotice, pNotice.h.size);

  0002e	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  00035	50		 push	 eax
  00036	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 55 0c	 mov	 edx, DWORD PTR _aIndex$[ebp]
  00040	52		 push	 edx
  00041	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 149  : }

  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004f	33 cd		 xor	 ecx, ebp
  00051	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?GCServerMsgStringSend@TNotice@@SAXPADHE@Z ENDP		; TNotice::GCServerMsgStringSend
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?AllSendServerMsg@TNotice@@SAXPAD@Z
_TEXT	SEGMENT
_n$1 = -280						; size = 4
_pNotice$ = -276					; size = 272
__$ArrayPad$ = -4					; size = 4
_chatmsg$ = 8						; size = 4
?AllSendServerMsg@TNotice@@SAXPAD@Z PROC		; TNotice::AllSendServerMsg, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 01 00
	00		 sub	 esp, 344		; 00000158H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 128  : 	PMSG_NOTICE	pNotice;
; 129  : 		
; 130  : 	TNotice::MakeNoticeMsg( &pNotice, 0, chatmsg );

  00016	8b 45 08	 mov	 eax, DWORD PTR _chatmsg$[ebp]
  00019	50		 push	 eax
  0001a	6a 00		 push	 0
  0001c	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 131  : 
; 132  : 	for( int n=ALLOC_USEROBJECTSTART; n<MAX_OBJECT; n++)

  0002b	c7 85 e8 fe ff
	ff 00 19 00 00	 mov	 DWORD PTR _n$1[ebp], 6400 ; 00001900H
  00035	eb 0f		 jmp	 SHORT $LN4@AllSendSer
$LN2@AllSendSer:
  00037	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR _n$1[ebp]
  0003d	83 c0 01	 add	 eax, 1
  00040	89 85 e8 fe ff
	ff		 mov	 DWORD PTR _n$1[ebp], eax
$LN4@AllSendSer:
  00046	81 bd e8 fe ff
	ff e8 1c 00 00	 cmp	 DWORD PTR _n$1[ebp], 7400 ; 00001ce8H
  00050	7d 51		 jge	 SHORT $LN1@AllSendSer

; 133  : 	{
; 134  : 		if( gObj[n].Connected == 3 && (gObj[n].Type == OBJTYPE_CHARACTER) )

  00052	69 85 e8 fe ff
	ff a0 1b 00 00	 imul	 eax, DWORD PTR _n$1[ebp], 7072
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00062	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  00067	75 38		 jne	 SHORT $LN5@AllSendSer
  00069	69 85 e8 fe ff
	ff a0 1b 00 00	 imul	 eax, DWORD PTR _n$1[ebp], 7072
  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00079	0f b7 54 01 64	 movzx	 edx, WORD PTR [ecx+eax+100]
  0007e	83 fa 01	 cmp	 edx, 1
  00081	75 1e		 jne	 SHORT $LN5@AllSendSer

; 135  : 		{
; 136  : 			DataSend(n, (LPBYTE)&pNotice, pNotice.h.size);

  00083	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pNotice$[ebp+1]
  0008a	50		 push	 eax
  0008b	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$[ebp]
  00091	51		 push	 ecx
  00092	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR _n$1[ebp]
  00098	52		 push	 edx
  00099	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@AllSendSer:

; 137  : 		}
; 138  : 	}

  000a1	eb 94		 jmp	 SHORT $LN2@AllSendSer
$LN1@AllSendSer:

; 139  : 
; 140  : }

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a9	33 cd		 xor	 ecx, ebp
  000ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
?AllSendServerMsg@TNotice@@SAXPAD@Z ENDP		; TNotice::AllSendServerMsg
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?SendNoticeToAllUser@TNotice@@SAXPAX@Z
_TEXT	SEGMENT
_n$1 = -8						; size = 4
_pNotice$ = -4						; size = 4
_lpNotice$ = 8						; size = 4
?SendNoticeToAllUser@TNotice@@SAXPAX@Z PROC		; TNotice::SendNoticeToAllUser, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 109  : 	LPPMSG_NOTICE pNotice = (LPPMSG_NOTICE) lpNotice;

  00009	8b 45 08	 mov	 eax, DWORD PTR _lpNotice$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _pNotice$[ebp], eax

; 110  : 
; 111  : 	for( int n=ALLOC_USEROBJECTSTART; n<MAX_OBJECT; n++)

  0000f	c7 45 f8 00 19
	00 00		 mov	 DWORD PTR _n$1[ebp], 6400 ; 00001900H
  00016	eb 09		 jmp	 SHORT $LN4@SendNotice
$LN2@SendNotice:
  00018	8b 45 f8	 mov	 eax, DWORD PTR _n$1[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	89 45 f8	 mov	 DWORD PTR _n$1[ebp], eax
$LN4@SendNotice:
  00021	81 7d f8 e8 1c
	00 00		 cmp	 DWORD PTR _n$1[ebp], 7400 ; 00001ce8H
  00028	7d 45		 jge	 SHORT $LN1@SendNotice

; 112  : 	{
; 113  : 		if( gObj[n].Connected == 3 && (gObj[n].Type == OBJTYPE_CHARACTER) )

  0002a	69 45 f8 a0 1b
	00 00		 imul	 eax, DWORD PTR _n$1[ebp], 7072
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00037	83 7c 01 04 03	 cmp	 DWORD PTR [ecx+eax+4], 3
  0003c	75 2f		 jne	 SHORT $LN5@SendNotice
  0003e	69 45 f8 a0 1b
	00 00		 imul	 eax, DWORD PTR _n$1[ebp], 7072
  00045	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  0004b	0f b7 54 01 64	 movzx	 edx, WORD PTR [ecx+eax+100]
  00050	83 fa 01	 cmp	 edx, 1
  00053	75 18		 jne	 SHORT $LN5@SendNotice

; 114  : 		{
; 115  : 			DataSend(n, (LPBYTE)pNotice, pNotice->h.size);

  00055	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  00058	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0005c	51		 push	 ecx
  0005d	8b 55 fc	 mov	 edx, DWORD PTR _pNotice$[ebp]
  00060	52		 push	 edx
  00061	8b 45 f8	 mov	 eax, DWORD PTR _n$1[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@SendNotice:

; 116  : 		}
; 117  : 	}

  0006d	eb a9		 jmp	 SHORT $LN2@SendNotice
$LN1@SendNotice:

; 118  : }

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?SendNoticeToAllUser@TNotice@@SAXPAX@Z ENDP		; TNotice::SendNoticeToAllUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?SendNoticeToUser@TNotice@@SAXHPAX@Z
_TEXT	SEGMENT
_pNotice$ = -4						; size = 4
_aIndex$ = 8						; size = 4
_lpNotice$ = 12						; size = 4
?SendNoticeToUser@TNotice@@SAXHPAX@Z PROC		; TNotice::SendNoticeToUser, COMDAT

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 122  : 	LPPMSG_NOTICE pNotice = (LPPMSG_NOTICE) lpNotice;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _lpNotice$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _pNotice$[ebp], eax

; 123  : 	DataSend(aIndex, (LPBYTE)pNotice, pNotice->h.size);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  00012	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  00016	51		 push	 ecx
  00017	8b 55 fc	 mov	 edx, DWORD PTR _pNotice$[ebp]
  0001a	52		 push	 edx
  0001b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 124  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?SendNoticeToUser@TNotice@@SAXHPAX@Z ENDP		; TNotice::SendNoticeToUser
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z
_TEXT	SEGMENT
_pNotice$ = -4						; size = 4
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_dwColor$ = 16						; size = 4
_btCount$ = 20						; size = 1
_wDelay$ = 24						; size = 2
_btSpeed$ = 28						; size = 1
?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z PROC		; TNotice::SetNoticeProperty, COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 95   : 	LPPMSG_NOTICE pNotice = (LPPMSG_NOTICE) lpNotice;

  00009	8b 45 08	 mov	 eax, DWORD PTR _lpNotice$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _pNotice$[ebp], eax

; 96   : 
; 97   : #ifdef MODIFY_NOTICE_20040325
; 98   : 	pNotice->type	 = btType;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  00012	8a 4d 0c	 mov	 cl, BYTE PTR _btType$[ebp]
  00015	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 99   : 	pNotice->dwColor = dwColor;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  0001b	8b 4d 10	 mov	 ecx, DWORD PTR _dwColor$[ebp]
  0001e	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 100  : 	pNotice->btCount = btCount;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  00024	8a 4d 14	 mov	 cl, BYTE PTR _btCount$[ebp]
  00027	88 48 04	 mov	 BYTE PTR [eax+4], cl

; 101  : 	pNotice->wDelay	 = wDelay;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  0002d	66 8b 4d 18	 mov	 cx, WORD PTR _wDelay$[ebp]
  00031	66 89 48 06	 mov	 WORD PTR [eax+6], cx

; 102  : 	pNotice->btSpeed = btSpeed;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  00038	8a 4d 1c	 mov	 cl, BYTE PTR _btSpeed$[ebp]
  0003b	88 48 0c	 mov	 BYTE PTR [eax+12], cl

; 103  : #endif
; 104  : 
; 105  : }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ENDP		; TNotice::SetNoticeProperty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ
_TEXT	SEGMENT
_pArguments$ = -8					; size = 4
_pNotice$ = -4						; size = 4
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_szNoticeMsg$ = 16					; size = 4
?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ PROC		; TNotice::MakeNoticeMsgEx, COMDAT

; 44   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 45   : 	LPPMSG_NOTICE pNotice = (LPPMSG_NOTICE) lpNotice;

  00009	8b 45 08	 mov	 eax, DWORD PTR _lpNotice$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _pNotice$[ebp], eax

; 46   : 	pNotice->type = btType;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  00012	8a 4d 0c	 mov	 cl, BYTE PTR _btType$[ebp]
  00015	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 47   : 
; 48   : #ifdef UNICODE_MODE_20050718
; 49   : 	char szTempMsg[4096] = {0,};
; 50   : 	memset(pNotice->Notice, 0, sizeof(pNotice->Notice));
; 51   : 
; 52   : 	va_list	pArguments;
; 53   : 	va_start(pArguments, szNoticeMsg);
; 54   :     vsprintf(szTempMsg, szNoticeMsg, pArguments);
; 55   :     va_end(pArguments);
; 56   : 
; 57   : 	MultiByteToWideChar(DEFAULT_CODEPAGE, 0, (char*)szTempMsg, strlen(szTempMsg), (WCHAR*)pNotice->Notice, sizeof(pNotice->Notice));
; 58   : 	pNotice->Notice[sizeof(pNotice->Notice)-2] = 0;
; 59   : 	pNotice->Notice[sizeof(pNotice->Notice)-1] = 0;
; 60   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + (wcslen((WCHAR*)pNotice->Notice)*2+2));
; 61   : #else
; 62   : 	va_list	pArguments;
; 63   : 	va_start(pArguments, szNoticeMsg);

  00018	8d 45 14	 lea	 eax, DWORD PTR _szNoticeMsg$[ebp+4]
  0001b	89 45 f8	 mov	 DWORD PTR _pArguments$[ebp], eax

; 64   :     vsprintf(pNotice->Notice, szNoticeMsg, pArguments);

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _pArguments$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR _szNoticeMsg$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 fc	 mov	 edx, DWORD PTR _pNotice$[ebp]
  00029	83 c2 0d	 add	 edx, 13			; 0000000dH
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 _vsprintf
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 65   :     va_end(pArguments);

  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pArguments$[ebp], 0

; 66   : 
; 67   : #ifdef MODIFY_NOTICE_20040325
; 68   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + (strlen(pNotice->Notice)+1));

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  0003f	83 c0 0d	 add	 eax, 13			; 0000000dH
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _strlen
  00048	83 c4 04	 add	 esp, 4
  0004b	83 c0 11	 add	 eax, 17			; 00000011H
  0004e	50		 push	 eax
  0004f	6a 0d		 push	 13			; 0000000dH
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _pNotice$[ebp]
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 69   : #else
; 70   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, 4+(strlen(pNotice->Notice)+1));
; 71   : #endif
; 72   : #endif
; 73   : }

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ENDP		; TNotice::MakeNoticeMsgEx
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z
_TEXT	SEGMENT
_pNotice$ = -4						; size = 4
_lpNotice$ = 8						; size = 4
_btType$ = 12						; size = 1
_szNoticeMsg$ = 16					; size = 4
?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z PROC		; TNotice::MakeNoticeMsg, COMDAT

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 14   : 	LPPMSG_NOTICE pNotice = (LPPMSG_NOTICE) lpNotice;

  00009	8b 45 08	 mov	 eax, DWORD PTR _lpNotice$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _pNotice$[ebp], eax

; 15   : 	pNotice->type = btType;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  00012	8a 4d 0c	 mov	 cl, BYTE PTR _btType$[ebp]
  00015	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 16   : 
; 17   : #ifdef UNICODE_MODE_20050718
; 18   : 	char szTempMsg[4096] = {0,};
; 19   : 	memset(pNotice->Notice, 0, sizeof(pNotice->Notice));
; 20   : 	
; 21   : 	MultiByteToWideChar(DEFAULT_CODEPAGE, 0, (char*)szNoticeMsg, strlen(szNoticeMsg), (WCHAR*)szTempMsg, sizeof(szTempMsg));
; 22   : 	memcpy(pNotice->Notice, szTempMsg, sizeof(pNotice->Notice));
; 23   : 	pNotice->Notice[sizeof(pNotice->Notice)-2] = 0;
; 24   : 	pNotice->Notice[sizeof(pNotice->Notice)-1] = 0;
; 25   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + (wcslen((WCHAR*)pNotice->Notice)*2+2));
; 26   : #else
; 27   : #ifdef MODIFY_SERVER_NOTICE_BUFFERCOPY_20041018
; 28   : 	memcpy(pNotice->Notice, szNoticeMsg, MAX_GUILDNOTICE);
; 29   : 	pNotice->Notice[MAX_GUILDNOTICE-1] = 0;
; 30   : #else
; 31   : 	wsprintf(pNotice->Notice, szNoticeMsg);								

  00018	8b 45 10	 mov	 eax, DWORD PTR _szNoticeMsg$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _pNotice$[ebp]
  0001f	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00022	51		 push	 ecx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  00029	83 c4 08	 add	 esp, 8

; 32   : #endif 
; 33   : 	
; 34   : #ifdef MODIFY_NOTICE_20040325
; 35   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, sizeof(PMSG_NOTICE) - sizeof(pNotice->Notice) + (strlen(pNotice->Notice)+1));

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _pNotice$[ebp]
  0002f	83 c0 0d	 add	 eax, 13			; 0000000dH
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 _strlen
  00038	83 c4 04	 add	 esp, 4
  0003b	83 c0 11	 add	 eax, 17			; 00000011H
  0003e	50		 push	 eax
  0003f	6a 0d		 push	 13			; 0000000dH
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _pNotice$[ebp]
  00044	51		 push	 ecx
  00045	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 36   : #else
; 37   : 	PHeadSetB((LPBYTE)pNotice, 0x0D, 4+(strlen(pNotice->Notice)+1));
; 38   : #endif
; 39   : #endif
; 40   : 	
; 41   : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ENDP		; TNotice::MakeNoticeMsg
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.h
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 8    : inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b) { return (a << 24) + (b << 16) + (g << 8) + (r); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  0000d	c1 e0 18	 shl	 eax, 24			; 00000018H
  00010	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  00014	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00017	03 c1		 add	 eax, ecx
  00019	0f b6 55 10	 movzx	 edx, BYTE PTR _g$[ebp]
  0001d	c1 e2 08	 shl	 edx, 8
  00020	03 c2		 add	 eax, edx
  00022	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  00026	03 c1		 add	 eax, ecx
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsprintf PROC						; COMDAT

; 1477 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1478 :         #pragma warning(push)
; 1479 :         #pragma warning(disable: 4996) // Deprecation
; 1480 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);

  00009	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	6a ff		 push	 -1
  00015	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 __vsnprintf_l
  0001e	83 c4 14	 add	 esp, 20			; 00000014H

; 1481 :         #pragma warning(pop)
; 1482 :     }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
_vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00031	83 c4 1c	 add	 esp, 28			; 0000001cH
  00034	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00037	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003b	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003d	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00044	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00046	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00049	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004c	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\TNotice.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
