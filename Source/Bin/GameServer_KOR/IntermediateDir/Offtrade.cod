; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Offtrade.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?OFFtrade@@3VCOFFtrade@@A			; OFFtrade
_BSS	SEGMENT
?OFFtrade@@3VCOFFtrade@@A DB 01H DUP (?)		; OFFtrade
_BSS	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?CreateOfflinetrade@COFFtrade@@QAEXH@Z		; COFFtrade::CreateOfflinetrade
PUBLIC	?Closeofftrade@COFFtrade@@QAEXPAD@Z		; COFFtrade::Closeofftrade
PUBLIC	?Updateofftrade@COFFtrade@@QAE_NHE@Z		; COFFtrade::Updateofftrade
PUBLIC	??_C@_0DF@MNODEMBH@?$FLOffTrade?$FN?5Usted?5Tiene?5que?5abri@ ; `string'
PUBLIC	??_C@_0N@POGHANFN@?$DM?$DMZEN?5SHOP?$DO?$DO@	; `string'
PUBLIC	??_C@_0O@CDCIDCKO@?$DM?$DMCASH?5SHOP?$DO?$DO@	; `string'
PUBLIC	??_C@_0N@MBFEBMCO@?$DM?$DMBOTSTORE?$DO?$DO@	; `string'
EXTRN	_memcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?CloseClientEx@@YAXH@Z:PROC			; CloseClientEx
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?MsgSendV2@@YAXPAVOBJECTSTRUCT@@PAEH@Z:PROC	; MsgSendV2
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
EXTRN	?GJPUserClose2@@YAXPAD@Z:PROC			; GJPUserClose2
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?gObj@@3PAVOBJECTSTRUCT@@A:DWORD		; gObj
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0N@MBFEBMCO@?$DM?$DMBOTSTORE?$DO?$DO@
CONST	SEGMENT
??_C@_0N@MBFEBMCO@?$DM?$DMBOTSTORE?$DO?$DO@ DB '<<BOTSTORE>>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CDCIDCKO@?$DM?$DMCASH?5SHOP?$DO?$DO@
CONST	SEGMENT
??_C@_0O@CDCIDCKO@?$DM?$DMCASH?5SHOP?$DO?$DO@ DB '<<CASH SHOP>>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@POGHANFN@?$DM?$DMZEN?5SHOP?$DO?$DO@
CONST	SEGMENT
??_C@_0N@POGHANFN@?$DM?$DMZEN?5SHOP?$DO?$DO@ DB '<<ZEN SHOP>>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MNODEMBH@?$FLOffTrade?$FN?5Usted?5Tiene?5que?5abri@
CONST	SEGMENT
??_C@_0DF@MNODEMBH@?$FLOffTrade?$FN?5Usted?5Tiene?5que?5abri@ DB '[OffTra'
	DB	'de] Usted Tiene que abrir su tienda personal.', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Offtrade.cpp
;	COMDAT ?Updateofftrade@COFFtrade@@QAE_NHE@Z
_TEXT	SEGMENT
_lpUser$ = -8						; size = 4
_this$ = -4						; size = 4
_UserIndex$ = 8						; size = 4
_Type$ = 12						; size = 1
?Updateofftrade@COFFtrade@@QAE_NHE@Z PROC		; COFFtrade::Updateofftrade, COMDAT
; _this$ = ecx

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 91   : 	LPOBJECTSTRUCT lpUser = &gObj[UserIndex];

  0000c	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _UserIndex$[ebp], 7072
  00013	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00019	89 45 f8	 mov	 DWORD PTR _lpUser$[ebp], eax

; 92   : 	// ----
; 93   : 	if (!lpUser->Offtrade)

  0001c	8b 45 f8	 mov	 eax, DWORD PTR _lpUser$[ebp]
  0001f	0f b6 88 86 1a
	00 00		 movzx	 ecx, BYTE PTR [eax+6790]
  00026	85 c9		 test	 ecx, ecx
  00028	75 04		 jne	 SHORT $LN2@Updateofft

; 94   : 	{
; 95   : 		return false;

  0002a	32 c0		 xor	 al, al
  0002c	eb 2d		 jmp	 SHORT $LN1@Updateofft
$LN2@Updateofft:

; 96   : 	}
; 97   : 	// ----
; 98   : 	if (Type == 0)

  0002e	0f b6 45 0c	 movzx	 eax, BYTE PTR _Type$[ebp]
  00032	85 c0		 test	 eax, eax
  00034	75 0e		 jne	 SHORT $LN3@Updateofft

; 99   : 	{
; 100  : 		lpUser->CheckTick = GetTickCount();

  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  0003f	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 101  : 	}

  00042	eb 15		 jmp	 SHORT $LN4@Updateofft
$LN3@Updateofft:

; 102  : 	else if (Type == 1)

  00044	0f b6 45 0c	 movzx	 eax, BYTE PTR _Type$[ebp]
  00048	83 f8 01	 cmp	 eax, 1
  0004b	75 0c		 jne	 SHORT $LN4@Updateofft

; 103  : 	{
; 104  : 		lpUser->ConnectCheckTime = GetTickCount();

  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _lpUser$[ebp]
  00056	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN4@Updateofft:

; 105  : 	}
; 106  : 	// ----
; 107  : 	return true;

  00059	b0 01		 mov	 al, 1
$LN1@Updateofft:

; 108  : }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
?Updateofftrade@COFFtrade@@QAE_NHE@Z ENDP		; COFFtrade::Updateofftrade
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Offtrade.cpp
;	COMDAT ?Closeofftrade@COFFtrade@@QAEXPAD@Z
_TEXT	SEGMENT
_lpUser$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_AccountID$ = 8						; size = 4
?Closeofftrade@COFFtrade@@QAEXPAD@Z PROC		; COFFtrade::Closeofftrade, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 73   : 	for (int i = OBJ_STARTUSERINDEX; i < MAX_OBJECT; i++)

  0000c	c7 45 f8 00 19
	00 00		 mov	 DWORD PTR _i$2[ebp], 6400 ; 00001900H
  00013	eb 09		 jmp	 SHORT $LN4@Closeofftr
$LN2@Closeofftr:
  00015	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00018	83 c0 01	 add	 eax, 1
  0001b	89 45 f8	 mov	 DWORD PTR _i$2[ebp], eax
$LN4@Closeofftr:
  0001e	81 7d f8 e8 1c
	00 00		 cmp	 DWORD PTR _i$2[ebp], 7400 ; 00001ce8H
  00025	7d 76		 jge	 SHORT $LN1@Closeofftr

; 74   : 	{
; 75   : 		LPOBJECTSTRUCT lpUser = &gObj[i];

  00027	69 45 f8 a0 1b
	00 00		 imul	 eax, DWORD PTR _i$2[ebp], 7072
  0002e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00034	89 45 f4	 mov	 DWORD PTR _lpUser$1[ebp], eax

; 76   : 		// ----
; 77   : 		if (lpUser->Connected != PLAYER_PLAYING || !lpUser->Offtrade || strcmp(AccountID, lpUser->AccountID))

  00037	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$1[ebp]
  0003a	83 78 04 03	 cmp	 DWORD PTR [eax+4], 3
  0003e	75 25		 jne	 SHORT $LN6@Closeofftr
  00040	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$1[ebp]
  00043	0f b6 88 86 1a
	00 00		 movzx	 ecx, BYTE PTR [eax+6790]
  0004a	85 c9		 test	 ecx, ecx
  0004c	74 17		 je	 SHORT $LN6@Closeofftr
  0004e	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$1[ebp]
  00051	83 c0 68	 add	 eax, 104		; 00000068H
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _AccountID$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 _strcmp
  0005e	83 c4 08	 add	 esp, 8
  00061	85 c0		 test	 eax, eax
  00063	74 02		 je	 SHORT $LN5@Closeofftr
$LN6@Closeofftr:

; 78   : 		{
; 79   : 			continue;

  00065	eb ae		 jmp	 SHORT $LN2@Closeofftr
$LN5@Closeofftr:

; 80   : 		}
; 81   : 		// ----
; 82   : 		CloseClientEx(i);

  00067	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?CloseClientEx@@YAXH@Z	; CloseClientEx
  00070	83 c4 04	 add	 esp, 4

; 83   : 		GJPUserClose2(lpUser->AccountID);

  00073	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$1[ebp]
  00076	83 c0 68	 add	 eax, 104		; 00000068H
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?GJPUserClose2@@YAXPAD@Z ; GJPUserClose2
  0007f	83 c4 04	 add	 esp, 4

; 84   : 		gObjDel(i);

  00082	8b 45 f8	 mov	 eax, DWORD PTR _i$2[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  0008b	83 c4 04	 add	 esp, 4

; 85   : 		lpUser->Offtrade = false;

  0008e	8b 45 f4	 mov	 eax, DWORD PTR _lpUser$1[ebp]
  00091	c6 80 86 1a 00
	00 00		 mov	 BYTE PTR [eax+6790], 0

; 86   : 	}

  00098	e9 78 ff ff ff	 jmp	 $LN2@Closeofftr
$LN1@Closeofftr:

; 87   : }

  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
?Closeofftrade@COFFtrade@@QAEXPAD@Z ENDP		; COFFtrade::Closeofftrade
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Offtrade.cpp
;	COMDAT ?CreateOfflinetrade@COFFtrade@@QAEXH@Z
_TEXT	SEGMENT
_pMsg$1 = -276						; size = 52
_TextShop$2 = -224					; size = 36
_pMsg$3 = -188						; size = 52
_TextShop$4 = -136					; size = 36
_pMsg$5 = -100						; size = 52
_TextShop$6 = -48					; size = 36
_lpObj$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?CreateOfflinetrade@COFFtrade@@QAEXH@Z PROC		; COFFtrade::CreateOfflinetrade, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 16   : 	LPOBJECTSTRUCT lpObj = &gObj[aIndex];

  00019	69 45 08 a0 1b
	00 00		 imul	 eax, DWORD PTR _aIndex$[ebp], 7072
  00020	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00026	89 45 f4	 mov	 DWORD PTR _lpObj$[ebp], eax

; 17   : 
; 18   : 	if(lpObj->m_bPShopOpen == false)

  00029	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0002c	0f b6 88 f8 0c
	00 00		 movzx	 ecx, BYTE PTR [eax+3320]
  00033	85 c9		 test	 ecx, ecx
  00035	75 16		 jne	 SHORT $LN2@CreateOffl

; 19   : 	{
; 20   : 		MsgOutput(aIndex,"[OffTrade] Usted Tiene que abrir su tienda personal.");

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MNODEMBH@?$FLOffTrade?$FN?5Usted?5Tiene?5que?5abri@
  0003c	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput
  00045	83 c4 08	 add	 esp, 8

; 21   : 		return;

  00048	e9 dc 02 00 00	 jmp	 $LN1@CreateOffl
$LN2@CreateOffl:

; 22   : 	}
; 23   : 	
; 24   : 	if (lpObj->OffTradeZen == 1)

  0004d	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00050	83 b8 98 1a 00
	00 01		 cmp	 DWORD PTR [eax+6808], 1
  00057	0f 85 be 00 00
	00		 jne	 $LN3@CreateOffl

; 25   : 	{
; 26   : 		    char TextShop[36] = "<<ZEN SHOP>>";

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@POGHANFN@?$DM?$DMZEN?5SHOP?$DO?$DO@
  00062	89 45 d0	 mov	 DWORD PTR _TextShop$6[ebp], eax
  00065	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0N@POGHANFN@?$DM?$DMZEN?5SHOP?$DO?$DO@+4
  0006b	89 4d d4	 mov	 DWORD PTR _TextShop$6[ebp+4], ecx
  0006e	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0N@POGHANFN@?$DM?$DMZEN?5SHOP?$DO?$DO@+8
  00074	89 55 d8	 mov	 DWORD PTR _TextShop$6[ebp+8], edx
  00077	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0N@POGHANFN@?$DM?$DMZEN?5SHOP?$DO?$DO@+12
  0007c	88 45 dc	 mov	 BYTE PTR _TextShop$6[ebp+12], al
  0007f	33 c0		 xor	 eax, eax
  00081	89 45 dd	 mov	 DWORD PTR _TextShop$6[ebp+13], eax
  00084	89 45 e1	 mov	 DWORD PTR _TextShop$6[ebp+17], eax
  00087	89 45 e5	 mov	 DWORD PTR _TextShop$6[ebp+21], eax
  0008a	89 45 e9	 mov	 DWORD PTR _TextShop$6[ebp+25], eax
  0008d	89 45 ed	 mov	 DWORD PTR _TextShop$6[ebp+29], eax
  00090	66 89 45 f1	 mov	 WORD PTR _TextShop$6[ebp+33], ax
  00094	88 45 f3	 mov	 BYTE PTR _TextShop$6[ebp+35], al

; 27   : 			PMSG_ANS_PSHOP_TEXT_CHANGED pMsg;
; 28   : 			PHeadSubSetB((LPBYTE)&pMsg, 0x3F, 0x10, sizeof(pMsg));

  00097	6a 34		 push	 52			; 00000034H
  00099	6a 10		 push	 16			; 00000010H
  0009b	6a 3f		 push	 63			; 0000003fH
  0009d	8d 45 9c	 lea	 eax, DWORD PTR _pMsg$5[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  000a6	83 c4 10	 add	 esp, 16			; 00000010H

; 29   : 			pMsg.NumberH = SET_NUMBERH(aIndex);

  000a9	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000ac	c1 e8 08	 shr	 eax, 8
  000af	88 45 a0	 mov	 BYTE PTR _pMsg$5[ebp+4], al

; 30   : 			pMsg.NumberL = SET_NUMBERL(aIndex);

  000b2	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000b5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000ba	88 45 a1	 mov	 BYTE PTR _pMsg$5[ebp+5], al

; 31   : 			memcpy(lpObj->m_szPShopText, TextShop, sizeof(pMsg.btPShopText));

  000bd	6a 24		 push	 36			; 00000024H
  000bf	8d 45 d0	 lea	 eax, DWORD PTR _TextShop$6[ebp]
  000c2	50		 push	 eax
  000c3	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  000c6	81 c1 fc 0c 00
	00		 add	 ecx, 3324		; 00000cfcH
  000cc	51		 push	 ecx
  000cd	e8 00 00 00 00	 call	 _memcpy
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 32   : 			memcpy(pMsg.btPShopText, TextShop, sizeof(pMsg.btPShopText));

  000d5	6a 24		 push	 36			; 00000024H
  000d7	8d 45 d0	 lea	 eax, DWORD PTR _TextShop$6[ebp]
  000da	50		 push	 eax
  000db	8d 4d a2	 lea	 ecx, DWORD PTR _pMsg$5[ebp+6]
  000de	51		 push	 ecx
  000df	e8 00 00 00 00	 call	 _memcpy
  000e4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 33   : 			memcpy(pMsg.btName, lpObj->Name, sizeof(pMsg.btName));

  000e7	6a 0a		 push	 10			; 0000000aH
  000e9	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  000ec	83 c0 73	 add	 eax, 115		; 00000073H
  000ef	50		 push	 eax
  000f0	8d 4d c6	 lea	 ecx, DWORD PTR _pMsg$5[ebp+42]
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 _memcpy
  000f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 34   : 			MsgSendV2(&gObj[aIndex], (LPBYTE)&pMsg, pMsg.h.size);

  000fc	0f b6 45 9d	 movzx	 eax, BYTE PTR _pMsg$5[ebp+1]
  00100	50		 push	 eax
  00101	8d 4d 9c	 lea	 ecx, DWORD PTR _pMsg$5[ebp]
  00104	51		 push	 ecx
  00105	69 55 08 a0 1b
	00 00		 imul	 edx, DWORD PTR _aIndex$[ebp], 7072
  0010c	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00112	52		 push	 edx
  00113	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAVOBJECTSTRUCT@@PAEH@Z ; MsgSendV2
  00118	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@CreateOffl:

; 35   : 	}
; 36   : 
; 37   : 	if (lpObj->OffTradeCredits == 1)

  0011b	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0011e	83 b8 9c 1a 00
	00 01		 cmp	 DWORD PTR [eax+6812], 1
  00125	0f 85 de 00 00
	00		 jne	 $LN4@CreateOffl

; 38   : 	{
; 39   : 		    char TextShop[36] = "<<CASH SHOP>>";

  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@CDCIDCKO@?$DM?$DMCASH?5SHOP?$DO?$DO@
  00130	89 85 78 ff ff
	ff		 mov	 DWORD PTR _TextShop$4[ebp], eax
  00136	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0O@CDCIDCKO@?$DM?$DMCASH?5SHOP?$DO?$DO@+4
  0013c	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _TextShop$4[ebp+4], ecx
  00142	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0O@CDCIDCKO@?$DM?$DMCASH?5SHOP?$DO?$DO@+8
  00148	89 55 80	 mov	 DWORD PTR _TextShop$4[ebp+8], edx
  0014b	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0O@CDCIDCKO@?$DM?$DMCASH?5SHOP?$DO?$DO@+12
  00151	66 89 45 84	 mov	 WORD PTR _TextShop$4[ebp+12], ax
  00155	33 c0		 xor	 eax, eax
  00157	89 45 86	 mov	 DWORD PTR _TextShop$4[ebp+14], eax
  0015a	89 45 8a	 mov	 DWORD PTR _TextShop$4[ebp+18], eax
  0015d	89 45 8e	 mov	 DWORD PTR _TextShop$4[ebp+22], eax
  00160	89 45 92	 mov	 DWORD PTR _TextShop$4[ebp+26], eax
  00163	89 45 96	 mov	 DWORD PTR _TextShop$4[ebp+30], eax
  00166	66 89 45 9a	 mov	 WORD PTR _TextShop$4[ebp+34], ax

; 40   : 			PMSG_ANS_PSHOP_TEXT_CHANGED pMsg;
; 41   : 			PHeadSubSetB((LPBYTE)&pMsg, 0x3F, 0x10, sizeof(pMsg));

  0016a	6a 34		 push	 52			; 00000034H
  0016c	6a 10		 push	 16			; 00000010H
  0016e	6a 3f		 push	 63			; 0000003fH
  00170	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _pMsg$3[ebp]
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  0017c	83 c4 10	 add	 esp, 16			; 00000010H

; 42   : 			pMsg.NumberH = SET_NUMBERH(aIndex);

  0017f	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00182	c1 e8 08	 shr	 eax, 8
  00185	88 85 48 ff ff
	ff		 mov	 BYTE PTR _pMsg$3[ebp+4], al

; 43   : 			pMsg.NumberL = SET_NUMBERL(aIndex);

  0018b	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0018e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00193	88 85 49 ff ff
	ff		 mov	 BYTE PTR _pMsg$3[ebp+5], al

; 44   : 			memcpy(lpObj->m_szPShopText, TextShop, sizeof(pMsg.btPShopText));

  00199	6a 24		 push	 36			; 00000024H
  0019b	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _TextShop$4[ebp]
  001a1	50		 push	 eax
  001a2	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  001a5	81 c1 fc 0c 00
	00		 add	 ecx, 3324		; 00000cfcH
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 _memcpy
  001b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 45   : 			memcpy(pMsg.btPShopText, TextShop, sizeof(pMsg.btPShopText));

  001b4	6a 24		 push	 36			; 00000024H
  001b6	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _TextShop$4[ebp]
  001bc	50		 push	 eax
  001bd	8d 8d 4a ff ff
	ff		 lea	 ecx, DWORD PTR _pMsg$3[ebp+6]
  001c3	51		 push	 ecx
  001c4	e8 00 00 00 00	 call	 _memcpy
  001c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 46   : 			memcpy(pMsg.btName, lpObj->Name, sizeof(pMsg.btName));

  001cc	6a 0a		 push	 10			; 0000000aH
  001ce	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  001d1	83 c0 73	 add	 eax, 115		; 00000073H
  001d4	50		 push	 eax
  001d5	8d 8d 6e ff ff
	ff		 lea	 ecx, DWORD PTR _pMsg$3[ebp+42]
  001db	51		 push	 ecx
  001dc	e8 00 00 00 00	 call	 _memcpy
  001e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 47   : 			MsgSendV2(&gObj[aIndex], (LPBYTE)&pMsg, pMsg.h.size);

  001e4	0f b6 85 45 ff
	ff ff		 movzx	 eax, BYTE PTR _pMsg$3[ebp+1]
  001eb	50		 push	 eax
  001ec	8d 8d 44 ff ff
	ff		 lea	 ecx, DWORD PTR _pMsg$3[ebp]
  001f2	51		 push	 ecx
  001f3	69 55 08 a0 1b
	00 00		 imul	 edx, DWORD PTR _aIndex$[ebp], 7072
  001fa	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  00200	52		 push	 edx
  00201	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAVOBJECTSTRUCT@@PAEH@Z ; MsgSendV2
  00206	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@CreateOffl:

; 48   : 	
; 49   : 	}
; 50   : 
; 51   : 	if (lpObj->BotStore == 1)

  00209	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  0020c	83 b8 a0 1a 00
	00 01		 cmp	 DWORD PTR [eax+6816], 1
  00213	0f 85 fa 00 00
	00		 jne	 $LN5@CreateOffl

; 52   : 	{
; 53   : 		    char TextShop[36] = "<<BOTSTORE>>";

  00219	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@MBFEBMCO@?$DM?$DMBOTSTORE?$DO?$DO@
  0021e	89 85 20 ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp], eax
  00224	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_0N@MBFEBMCO@?$DM?$DMBOTSTORE?$DO?$DO@+4
  0022a	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp+4], ecx
  00230	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ??_C@_0N@MBFEBMCO@?$DM?$DMBOTSTORE?$DO?$DO@+8
  00236	89 95 28 ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp+8], edx
  0023c	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0N@MBFEBMCO@?$DM?$DMBOTSTORE?$DO?$DO@+12
  00241	88 85 2c ff ff
	ff		 mov	 BYTE PTR _TextShop$2[ebp+12], al
  00247	33 c0		 xor	 eax, eax
  00249	89 85 2d ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp+13], eax
  0024f	89 85 31 ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp+17], eax
  00255	89 85 35 ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp+21], eax
  0025b	89 85 39 ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp+25], eax
  00261	89 85 3d ff ff
	ff		 mov	 DWORD PTR _TextShop$2[ebp+29], eax
  00267	66 89 85 41 ff
	ff ff		 mov	 WORD PTR _TextShop$2[ebp+33], ax
  0026e	88 85 43 ff ff
	ff		 mov	 BYTE PTR _TextShop$2[ebp+35], al

; 54   : 			PMSG_ANS_PSHOP_TEXT_CHANGED pMsg;
; 55   : 			PHeadSubSetB((LPBYTE)&pMsg, 0x3F, 0x10, sizeof(pMsg));

  00274	6a 34		 push	 52			; 00000034H
  00276	6a 10		 push	 16			; 00000010H
  00278	6a 3f		 push	 63			; 0000003fH
  0027a	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _pMsg$1[ebp]
  00280	50		 push	 eax
  00281	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB
  00286	83 c4 10	 add	 esp, 16			; 00000010H

; 56   : 			pMsg.NumberH = SET_NUMBERH(aIndex);

  00289	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0028c	c1 e8 08	 shr	 eax, 8
  0028f	88 85 f0 fe ff
	ff		 mov	 BYTE PTR _pMsg$1[ebp+4], al

; 57   : 			pMsg.NumberL = SET_NUMBERL(aIndex);

  00295	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00298	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0029d	88 85 f1 fe ff
	ff		 mov	 BYTE PTR _pMsg$1[ebp+5], al

; 58   : 			memcpy(lpObj->m_szPShopText, TextShop, sizeof(pMsg.btPShopText));

  002a3	6a 24		 push	 36			; 00000024H
  002a5	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _TextShop$2[ebp]
  002ab	50		 push	 eax
  002ac	8b 4d f4	 mov	 ecx, DWORD PTR _lpObj$[ebp]
  002af	81 c1 fc 0c 00
	00		 add	 ecx, 3324		; 00000cfcH
  002b5	51		 push	 ecx
  002b6	e8 00 00 00 00	 call	 _memcpy
  002bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 59   : 			memcpy(pMsg.btPShopText, TextShop, sizeof(pMsg.btPShopText));

  002be	6a 24		 push	 36			; 00000024H
  002c0	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _TextShop$2[ebp]
  002c6	50		 push	 eax
  002c7	8d 8d f2 fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$1[ebp+6]
  002cd	51		 push	 ecx
  002ce	e8 00 00 00 00	 call	 _memcpy
  002d3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 60   : 			memcpy(pMsg.btName, lpObj->Name, sizeof(pMsg.btName));

  002d6	6a 0a		 push	 10			; 0000000aH
  002d8	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  002db	83 c0 73	 add	 eax, 115		; 00000073H
  002de	50		 push	 eax
  002df	8d 8d 16 ff ff
	ff		 lea	 ecx, DWORD PTR _pMsg$1[ebp+42]
  002e5	51		 push	 ecx
  002e6	e8 00 00 00 00	 call	 _memcpy
  002eb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 61   : 			MsgSendV2(&gObj[aIndex], (LPBYTE)&pMsg, pMsg.h.size);

  002ee	0f b6 85 ed fe
	ff ff		 movzx	 eax, BYTE PTR _pMsg$1[ebp+1]
  002f5	50		 push	 eax
  002f6	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR _pMsg$1[ebp]
  002fc	51		 push	 ecx
  002fd	69 55 08 a0 1b
	00 00		 imul	 edx, DWORD PTR _aIndex$[ebp], 7072
  00304	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?gObj@@3PAVOBJECTSTRUCT@@A ; gObj
  0030a	52		 push	 edx
  0030b	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAVOBJECTSTRUCT@@PAEH@Z ; MsgSendV2
  00310	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@CreateOffl:

; 62   : 	
; 63   : 	}
; 64   : 
; 65   : 	lpObj->Offtrade = true;

  00313	8b 45 f4	 mov	 eax, DWORD PTR _lpObj$[ebp]
  00316	c6 80 86 1a 00
	00 01		 mov	 BYTE PTR [eax+6790], 1

; 66   : 	//CloseClient(aIndex);
; 67   : 	CloseClientEx(aIndex);

  0031d	8b 45 08	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00320	50		 push	 eax
  00321	e8 00 00 00 00	 call	 ?CloseClientEx@@YAXH@Z	; CloseClientEx
  00326	83 c4 04	 add	 esp, 4
$LN1@CreateOffl:

; 68   : 	return;
; 69   : }

  00329	5f		 pop	 edi
  0032a	5e		 pop	 esi
  0032b	5b		 pop	 ebx
  0032c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0032f	33 cd		 xor	 ecx, ebp
  00331	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00336	8b e5		 mov	 esp, ebp
  00338	5d		 pop	 ebp
  00339	c2 04 00	 ret	 4
?CreateOfflinetrade@COFFtrade@@QAEXH@Z ENDP		; COFFtrade::CreateOfflinetrade
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Offtrade.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\Offtrade.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
