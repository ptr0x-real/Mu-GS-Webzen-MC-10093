; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??_GWZQueue@@QAEPAXI@Z				; WZQueue::`scalar deleting destructor'
PUBLIC	??0CDbSave@@QAE@XZ				; CDbSave::CDbSave
PUBLIC	??1CDbSave@@UAE@XZ				; CDbSave::~CDbSave
PUBLIC	?Initialize@CDbSave@@QAEHXZ			; CDbSave::Initialize
PUBLIC	?Feee@CDbSave@@QAEHXZ				; CDbSave::Feee
PUBLIC	?Add@CDbSave@@QAEHPAEHEH@Z			; CDbSave::Add
PUBLIC	?ThreadProc@CDbSave@@QAEKXZ			; CDbSave::ThreadProc
PUBLIC	?Begin@CDbSave@@QAEHXZ				; CDbSave::Begin
PUBLIC	?End@CDbSave@@QAEXXZ				; CDbSave::End
PUBLIC	??_GCDbSave@@UAEPAXI@Z				; CDbSave::`scalar deleting destructor'
PUBLIC	??_7CDbSave@@6B@				; CDbSave::`vftable'
PUBLIC	?__LINE__Var@?0??Begin@CDbSave@@QAEHXZ@4JA	; `CDbSave::Begin'::`1'::__LINE__Var
PUBLIC	??_C@_0DJ@GLNBCOHF@C?3?2Mu?5Online?2Mu?9GS?9Webzen?9MC?910@ ; `string'
PUBLIC	??_R4CDbSave@@6B@				; CDbSave::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDbSave@@@8				; CDbSave `RTTI Type Descriptor'
PUBLIC	??_R3CDbSave@@8					; CDbSave::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDbSave@@8					; CDbSave::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDbSave@@8			; CDbSave::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	__imp_?Get@CMsg@@QAEPADH@Z:PROC
EXTRN	??0WZQueue@@QAE@I@Z:PROC			; WZQueue::WZQueue
EXTRN	??1WZQueue@@QAE@XZ:PROC				; WZQueue::~WZQueue
EXTRN	?GetCount@WZQueue@@QAEIXZ:PROC			; WZQueue::GetCount
EXTRN	?AddToQueue@WZQueue@@QAEHPBEIEH@Z:PROC		; WZQueue::AddToQueue
EXTRN	?GetFromQueue@WZQueue@@QAEHPAEPAI0PAH@Z:PROC	; WZQueue::GetFromQueue
EXTRN	??_ECDbSave@@UAEPAXI@Z:PROC			; CDbSave::`vector deleting destructor'
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?LogAdd@@3P6AXPADZZA:DWORD			; LogAdd
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?wsDataCli@@3VwsJoinServerCli@@A:BYTE		; wsDataCli
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@CDbSave@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDbSave@@8 DD FLAT:??_R0?AVCDbSave@@@8	; CDbSave::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDbSave@@8
rdata$r	ENDS
;	COMDAT ??_R2CDbSave@@8
rdata$r	SEGMENT
??_R2CDbSave@@8 DD FLAT:??_R1A@?0A@EA@CDbSave@@8	; CDbSave::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDbSave@@8
rdata$r	SEGMENT
??_R3CDbSave@@8 DD 00H					; CDbSave::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDbSave@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDbSave@@@8
data$r	SEGMENT
??_R0?AVCDbSave@@@8 DD FLAT:??_7type_info@@6B@		; CDbSave `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDbSave@@', 00H
data$r	ENDS
;	COMDAT ??_R4CDbSave@@6B@
rdata$r	SEGMENT
??_R4CDbSave@@6B@ DD 00H				; CDbSave::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDbSave@@@8
	DD	FLAT:??_R3CDbSave@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DJ@GLNBCOHF@C?3?2Mu?5Online?2Mu?9GS?9Webzen?9MC?910@
CONST	SEGMENT
??_C@_0DJ@GLNBCOHF@C?3?2Mu?5Online?2Mu?9GS?9Webzen?9MC?910@ DB 'C:\Mu Onl'
	DB	'ine\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Begin@CDbSave@@QAEHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Begin@CDbSave@@QAEHXZ@4JA DD 045H	; `CDbSave::Begin'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CDbSave@@6B@
CONST	SEGMENT
??_7CDbSave@@6B@ DD FLAT:??_R4CDbSave@@6B@		; CDbSave::`vftable'
	DD	FLAT:??_ECDbSave@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Initialize@CDbSave@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Initialize@CDbSave@@QAEHXZ$0
__ehfuncinfo$?Initialize@CDbSave@@QAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Initialize@CDbSave@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDbSave@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?cSaveThreadProc@@YGKPAVCDbSave@@@Z
_TEXT	SEGMENT
_pThis$ = 8						; size = 4
?cSaveThreadProc@@YGKPAVCDbSave@@@Z PROC		; cSaveThreadProc, COMDAT

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 65   :   return pThis->ThreadProc();

  00009	8b 4d 08	 mov	 ecx, DWORD PTR _pThis$[ebp]
  0000c	e8 00 00 00 00	 call	 ?ThreadProc@CDbSave@@QAEKXZ ; CDbSave::ThreadProc

; 66   : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?cSaveThreadProc@@YGKPAVCDbSave@@@Z ENDP		; cSaveThreadProc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GCDbSave@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDbSave@@UAEPAXI@Z PROC				; CDbSave::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1CDbSave@@UAE@XZ	; CDbSave::~CDbSave
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GCDbSave@@UAEPAXI@Z ENDP				; CDbSave::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?End@CDbSave@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?End@CDbSave@@QAEXXZ PROC				; CDbSave::End, COMDAT
; _this$ = ecx

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 92   : 	if( m_ThreadHandle != NULL )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00013	74 30		 je	 SHORT $LN1@End

; 93   : 	{
; 94   : 		m_bIsRunning = false;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 95   : 		WaitForSingleObject( m_ThreadHandle, INFINITE );

  0001f	6a ff		 push	 -1
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00027	51		 push	 ecx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 96   : 		CloseHandle( m_ThreadHandle );

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00034	51		 push	 ecx
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 97   : 		m_ThreadHandle = NULL;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
$LN1@End:

; 98   : 	}
; 99   : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?End@CDbSave@@QAEXXZ ENDP				; CDbSave::End
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?Begin@CDbSave@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Begin@CDbSave@@QAEHXZ PROC				; CDbSave::Begin, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	if( m_ThreadHandle )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00013	74 08		 je	 SHORT $LN2@Begin

; 71   : 	{
; 72   : 		End();

  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?End@CDbSave@@QAEXXZ	; CDbSave::End
$LN2@Begin:

; 73   : 	}
; 74   : 	m_bIsRunning = 1;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	c7 40 10 01 00
	00 00		 mov	 DWORD PTR [eax+16], 1

; 75   : 	m_ThreadHandle = CreateThread( NULL,

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0002d	50		 push	 eax
  0002e	6a 00		 push	 0
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	51		 push	 ecx
  00034	68 00 00 00 00	 push	 OFFSET ?cSaveThreadProc@@YGKPAVCDbSave@@@Z ; cSaveThreadProc
  00039	6a 00		 push	 0
  0003b	6a 00		 push	 0
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  00043	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00046	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 76   :                                  0,
; 77   :                                  (LPTHREAD_START_ROUTINE)cSaveThreadProc,
; 78   :                                  this,
; 79   :                                  0,
; 80   :                                  (LPDWORD)&m_dwThreadID );
; 81   : 
; 82   : 	if( m_ThreadHandle == NULL )

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00050	75 28		 jne	 SHORT $LN3@Begin

; 83   : 	{
; 84   : 		MsgBox(lMsg.Get(113), __FILE__, __LINE__);

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??Begin@CDbSave@@QAEHXZ@4JA
  00057	83 c0 0f	 add	 eax, 15			; 0000000fH
  0005a	50		 push	 eax
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@GLNBCOHF@C?3?2Mu?5Online?2Mu?9GS?9Webzen?9MC?910@
  00060	6a 71		 push	 113			; 00000071H
  00062	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Get@CMsg@@QAEPADH@Z
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 85   : 		return FALSE;

  00076	33 c0		 xor	 eax, eax
  00078	eb 05		 jmp	 SHORT $LN1@Begin
$LN3@Begin:

; 86   : 	}
; 87   : 	return TRUE;

  0007a	b8 01 00 00 00	 mov	 eax, 1
$LN1@Begin:

; 88   : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?Begin@CDbSave@@QAEHXZ ENDP				; CDbSave::Begin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?ThreadProc@CDbSave@@QAEKXZ
_TEXT	SEGMENT
_uindex$ = -5024					; size = 4
_headcode$ = -5017					; size = 1
_nSize$ = -5016						; size = 4
_RecvData$ = -5012					; size = 5000
_count$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?ThreadProc@CDbSave@@QAEKXZ PROC			; CDbSave::ThreadProc, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 a0 15 00 00	 mov	 eax, 5536		; 000015a0H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@ThreadProc:

; 103  : 	int count;
; 104  : 	BYTE RecvData[5000];
; 105  : 	unsigned int	 nSize;
; 106  : 	BYTE headcode;
; 107  : 	int  uindex;
; 108  : 
; 109  : 	while(1)

  0001d	b8 01 00 00 00	 mov	 eax, 1
  00022	85 c0		 test	 eax, eax
  00024	0f 84 fb 00 00
	00		 je	 $LN3@ThreadProc

; 110  : 	{	
; 111  : 		EnterCriticalSection(&criti);

  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c0 14	 add	 eax, 20			; 00000014H
  00030	50		 push	 eax
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 112  : 		count = WzQSave->GetCount();

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003d	e8 00 00 00 00	 call	 ?GetCount@WZQueue@@QAEIXZ ; WZQueue::GetCount
  00042	89 45 f4	 mov	 DWORD PTR _count$[ebp], eax

; 113  : 		if( count )

  00045	83 7d f4 00	 cmp	 DWORD PTR _count$[ebp], 0
  00049	0f 84 94 00 00
	00		 je	 $LN4@ThreadProc

; 114  : 		{
; 115  : 			if( WzQSave->GetFromQueue((LPBYTE)RecvData, &nSize, &headcode, &uindex) == TRUE )

  0004f	8d 85 60 ec ff
	ff		 lea	 eax, DWORD PTR _uindex$[ebp]
  00055	50		 push	 eax
  00056	8d 8d 67 ec ff
	ff		 lea	 ecx, DWORD PTR _headcode$[ebp]
  0005c	51		 push	 ecx
  0005d	8d 95 68 ec ff
	ff		 lea	 edx, DWORD PTR _nSize$[ebp]
  00063	52		 push	 edx
  00064	8d 85 6c ec ff
	ff		 lea	 eax, DWORD PTR _RecvData$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00071	e8 00 00 00 00	 call	 ?GetFromQueue@WZQueue@@QAEHPAEPAI0PAH@Z ; WZQueue::GetFromQueue
  00076	83 f8 01	 cmp	 eax, 1
  00079	75 68		 jne	 SHORT $LN4@ThreadProc

; 116  : 			{
; 117  : 				if( wsDataCli.DataSend((char*)RecvData, nSize) == FALSE )

  0007b	8b 85 68 ec ff
	ff		 mov	 eax, DWORD PTR _nSize$[ebp]
  00081	50		 push	 eax
  00082	8d 8d 6c ec ff
	ff		 lea	 ecx, DWORD PTR _RecvData$[ebp]
  00088	51		 push	 ecx
  00089	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsDataCli@@3VwsJoinServerCli@@A ; wsDataCli
  0008e	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend
  00093	85 c0		 test	 eax, eax
  00095	75 27		 jne	 SHORT $LN6@ThreadProc

; 118  : 				{
; 119  : 					LogAdd(lMsg.Get(445),count, uindex);

  00097	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _uindex$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _count$[ebp]
  000a1	51		 push	 ecx
  000a2	68 bd 01 00 00	 push	 445			; 000001bdH
  000a7	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Get@CMsg@@QAEPADH@Z
  000b2	50		 push	 eax
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 120  : 				}

  000bc	eb 25		 jmp	 SHORT $LN4@ThreadProc
$LN6@ThreadProc:

; 121  : 				else LogAdd(lMsg.Get(446),count, uindex);

  000be	8b 85 60 ec ff
	ff		 mov	 eax, DWORD PTR _uindex$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR _count$[ebp]
  000c8	51		 push	 ecx
  000c9	68 be 01 00 00	 push	 446			; 000001beH
  000ce	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Get@CMsg@@QAEPADH@Z
  000d9	50		 push	 eax
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAdd@@3P6AXPADZZA ; LogAdd
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@ThreadProc:

; 122  : 			}
; 123  : 		}		
; 124  : 		if( m_bIsRunning == false && count == 0 )

  000e3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  000ea	75 15		 jne	 SHORT $LN8@ThreadProc
  000ec	83 7d f4 00	 cmp	 DWORD PTR _count$[ebp], 0
  000f0	75 0f		 jne	 SHORT $LN8@ThreadProc

; 125  : 		{
; 126  : 			LeaveCriticalSection(&criti);

  000f2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	83 c0 14	 add	 eax, 20			; 00000014H
  000f8	50		 push	 eax
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 127  : 			break;

  000ff	eb 24		 jmp	 SHORT $LN3@ThreadProc
$LN8@ThreadProc:

; 128  : 		}
; 129  : 		LeaveCriticalSection(&criti);

  00101	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00104	83 c0 14	 add	 eax, 20			; 00000014H
  00107	50		 push	 eax
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 130  : 		WaitForSingleObject( m_ThreadHandle, 300 );

  0010e	68 2c 01 00 00	 push	 300			; 0000012cH
  00113	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00116	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00119	51		 push	 ecx
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 131  : 	}

  00120	e9 f8 fe ff ff	 jmp	 $LN2@ThreadProc
$LN3@ThreadProc:

; 132  : 	return 0;

  00125	33 c0		 xor	 eax, eax

; 133  : }

  00127	5f		 pop	 edi
  00128	5e		 pop	 esi
  00129	5b		 pop	 ebx
  0012a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012d	33 cd		 xor	 ecx, ebp
  0012f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
?ThreadProc@CDbSave@@QAEKXZ ENDP			; CDbSave::ThreadProc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?Add@CDbSave@@QAEHPAEHEH@Z
_TEXT	SEGMENT
_bRet$ = -8						; size = 4
_this$ = -4						; size = 4
_pObject$ = 8						; size = 4
_nSize$ = 12						; size = 4
_headcode$ = 16						; size = 1
_index$ = 20						; size = 4
?Add@CDbSave@@QAEHPAEHEH@Z PROC				; CDbSave::Add, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 	int bRet;
; 56   : 
; 57   : 	EnterCriticalSection(&criti);

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 14	 add	 eax, 20			; 00000014H
  00012	50		 push	 eax
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 58   : 	bRet = WzQSave->AddToQueue(pObject, nSize, headcode, index);

  00019	8b 45 14	 mov	 eax, DWORD PTR _index$[ebp]
  0001c	50		 push	 eax
  0001d	0f b6 4d 10	 movzx	 ecx, BYTE PTR _headcode$[ebp]
  00021	51		 push	 ecx
  00022	8b 55 0c	 mov	 edx, DWORD PTR _nSize$[ebp]
  00025	52		 push	 edx
  00026	8b 45 08	 mov	 eax, DWORD PTR _pObject$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00030	e8 00 00 00 00	 call	 ?AddToQueue@WZQueue@@QAEHPBEIEH@Z ; WZQueue::AddToQueue
  00035	89 45 f8	 mov	 DWORD PTR _bRet$[ebp], eax

; 59   : 	LeaveCriticalSection(&criti);

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	83 c0 14	 add	 eax, 20			; 00000014H
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 60   : 	return bRet;

  00045	8b 45 f8	 mov	 eax, DWORD PTR _bRet$[ebp]

; 61   : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 10 00	 ret	 16			; 00000010H
?Add@CDbSave@@QAEHPAEHEH@Z ENDP				; CDbSave::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?Feee@CDbSave@@QAEHXZ
_TEXT	SEGMENT
tv71 = -76						; size = 4
$T1 = -72						; size = 4
_this$ = -4						; size = 4
?Feee@CDbSave@@QAEHXZ PROC				; CDbSave::Feee, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : 	if( WzQSave != NULL )

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00013	74 2f		 je	 SHORT $LN2@Feee

; 45   : 	{
; 46   : 		delete WzQSave;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001b	89 4d b8	 mov	 DWORD PTR $T1[ebp], ecx
  0001e	83 7d b8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00022	74 0f		 je	 SHORT $LN4@Feee
  00024	6a 01		 push	 1
  00026	8b 4d b8	 mov	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??_GWZQueue@@QAEPAXI@Z
  0002e	89 45 b4	 mov	 DWORD PTR tv71[ebp], eax
  00031	eb 07		 jmp	 SHORT $LN5@Feee
$LN4@Feee:
  00033	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN5@Feee:

; 47   : 		WzQSave = NULL;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN2@Feee:

; 48   : 	}
; 49   : 	DeleteCriticalSection(&criti);

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	83 c0 14	 add	 eax, 20			; 00000014H
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 50   : 	return TRUE;

  00051	b8 01 00 00 00	 mov	 eax, 1

; 51   : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?Feee@CDbSave@@QAEHXZ ENDP				; CDbSave::Feee
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?Initialize@CDbSave@@QAEHXZ
_TEXT	SEGMENT
tv77 = -92						; size = 4
$T2 = -88						; size = 4
$T3 = -84						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Initialize@CDbSave@@QAEHXZ PROC			; CDbSave::Initialize, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Initialize@CDbSave@@QAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : 	WzQSave = new WZQueue;

  0002b	6a 2c		 push	 44			; 0000002cH
  0002d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00032	83 c4 04	 add	 esp, 4
  00035	89 45 a8	 mov	 DWORD PTR $T2[ebp], eax
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	83 7d a8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00043	74 12		 je	 SHORT $LN4@Initialize
  00045	68 00 05 00 00	 push	 1280			; 00000500H
  0004a	8b 4d a8	 mov	 ecx, DWORD PTR $T2[ebp]
  0004d	e8 00 00 00 00	 call	 ??0WZQueue@@QAE@I@Z	; WZQueue::WZQueue
  00052	89 45 a4	 mov	 DWORD PTR tv77[ebp], eax
  00055	eb 07		 jmp	 SHORT $LN5@Initialize
$LN4@Initialize:
  00057	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN5@Initialize:
  0005e	8b 45 a4	 mov	 eax, DWORD PTR tv77[ebp]
  00061	89 45 ac	 mov	 DWORD PTR $T3[ebp], eax
  00064	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	8b 55 ac	 mov	 edx, DWORD PTR $T3[ebp]
  00071	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 33   : 	if( WzQSave == NULL )

  00074	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00077	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0007b	75 04		 jne	 SHORT $LN2@Initialize

; 34   : 	{
; 35   : 		return FALSE;

  0007d	33 c0		 xor	 eax, eax
  0007f	eb 12		 jmp	 SHORT $LN1@Initialize
$LN2@Initialize:

; 36   : 	}
; 37   : 	
; 38   : 	InitializeCriticalSection(&criti);

  00081	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00084	83 c0 14	 add	 eax, 20			; 00000014H
  00087	50		 push	 eax
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4

; 39   : 	return TRUE;

  0008e	b8 01 00 00 00	 mov	 eax, 1
$LN1@Initialize:

; 40   : }

  00093	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Initialize@CDbSave@@QAEHXZ$0:
  00000	6a 2c		 push	 44			; 0000002cH
  00002	8b 45 a8	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Initialize@CDbSave@@QAEHXZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Initialize@CDbSave@@QAEHXZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Initialize@CDbSave@@QAEHXZ ENDP			; CDbSave::Initialize
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ??1CDbSave@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDbSave@@UAE@XZ PROC					; CDbSave::~CDbSave, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDbSave@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDbSave@@6B@

; 26   : 	End();

  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?End@CDbSave@@QAEXXZ	; CDbSave::End

; 27   : 	Feee();

  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?Feee@CDbSave@@QAEHXZ	; CDbSave::Feee

; 28   : }

  00044	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00047	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004e	59		 pop	 ecx
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
  00059	cc		 int	 3
  0005a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDbSave@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDbSave@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDbSave@@UAE@XZ ENDP					; CDbSave::~CDbSave
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ??0CDbSave@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDbSave@@QAE@XZ PROC					; CDbSave::CDbSave, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDbSave@@6B@

; 19   : 	WzQSave = NULL;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 20   : 	m_bIsRunning = FALSE;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 21   : 	Initialize();

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?Initialize@CDbSave@@QAEHXZ ; CDbSave::Initialize

; 22   : }

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0CDbSave@@QAE@XZ ENDP					; CDbSave::CDbSave
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GWZQueue@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GWZQueue@@QAEPAXI@Z PROC				; WZQueue::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ??1WZQueue@@QAE@XZ	; WZQueue::~WZQueue
  00014	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00017	83 e0 01	 and	 eax, 1
  0001a	74 0e		 je	 SHORT $LN2@scalar
  0001c	6a 2c		 push	 44			; 0000002cH
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??_GWZQueue@@QAEPAXI@Z ENDP				; WZQueue::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\DbSave.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
