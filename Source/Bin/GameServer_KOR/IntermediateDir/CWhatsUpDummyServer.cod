; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\CWhatsUpDummyServer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA ; CWhatsUpDummyServer::m_lpOldProc
_BSS	SEGMENT
?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA DD 01H DUP (?) ; CWhatsUpDummyServer::m_lpOldProc
_BSS	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0CWhatsUpDummyServer@@QAE@XZ			; CWhatsUpDummyServer::CWhatsUpDummyServer
PUBLIC	??1CWhatsUpDummyServer@@QAE@XZ			; CWhatsUpDummyServer::~CWhatsUpDummyServer
PUBLIC	?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z	; CWhatsUpDummyServer::Start
PUBLIC	?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z ; CWhatsUpDummyServer::ParentWndProc
EXTRN	__imp__CallWindowProcA@20:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	__imp__accept@12:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__recv@16:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	__imp__WSAAsyncSelect@16:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\CWhatsUpDummyServer.cpp
;	COMDAT ?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv68 = -360						; size = 4
tv64 = -360						; size = 4
_iRecvBytes$1 = -292					; size = 4
_cBUFFER$2 = -288					; size = 256
_iRetVal$3 = -32					; size = 4
_sckTemp$4 = -28					; size = 4
_isockinfolen$5 = -24					; size = 4
_sockinfo$6 = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_iMessage$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z PROC ; CWhatsUpDummyServer::ParentWndProc, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 68 01 00
	00		 sub	 esp, 360		; 00000168H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 81   : 	switch(iMessage) {

  00016	8b 45 0c	 mov	 eax, DWORD PTR _iMessage$[ebp]
  00019	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  0001f	81 bd 98 fe ff
	ff 0f 04 00 00	 cmp	 DWORD PTR tv64[ebp], 1039 ; 0000040fH
  00029	74 05		 je	 SHORT $LN6@ParentWndP
  0002b	e9 f3 00 00 00	 jmp	 $LN2@ParentWndP
$LN6@ParentWndP:

; 82   : 	case WM_ASYNCDUMMYSOCK :
; 83   : 		switch (LOWORD (lParam)) {

  00030	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00033	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00038	0f b7 c8	 movzx	 ecx, ax
  0003b	89 8d 98 fe ff
	ff		 mov	 DWORD PTR tv68[ebp], ecx
  00041	83 bd 98 fe ff
	ff 01		 cmp	 DWORD PTR tv68[ebp], 1
  00048	74 79		 je	 SHORT $LN10@ParentWndP
  0004a	83 bd 98 fe ff
	ff 08		 cmp	 DWORD PTR tv68[ebp], 8
  00051	74 12		 je	 SHORT $LN7@ParentWndP
  00053	83 bd 98 fe ff
	ff 20		 cmp	 DWORD PTR tv68[ebp], 32	; 00000020H
  0005a	0f 84 a9 00 00
	00		 je	 $LN12@ParentWndP
  00060	e9 ba 00 00 00	 jmp	 $LN4@ParentWndP
$LN7@ParentWndP:

; 84   : 		case FD_ACCEPT :
; 85   : 			{
; 86   : 				SOCKADDR_IN sockinfo;
; 87   : 				INT isockinfolen = sizeof (SOCKADDR_IN);

  00065	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR _isockinfolen$5[ebp], 16 ; 00000010H

; 88   : 
; 89   : 				SOCKET sckTemp = accept (LOWORD(wParam), (LPSOCKADDR) &sockinfo, &isockinfolen);

  0006c	8d 45 e8	 lea	 eax, DWORD PTR _isockinfolen$5[ebp]
  0006f	50		 push	 eax
  00070	8d 4d ec	 lea	 ecx, DWORD PTR _sockinfo$6[ebp]
  00073	51		 push	 ecx
  00074	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00077	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  0007d	0f b7 c2	 movzx	 eax, dx
  00080	50		 push	 eax
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__accept@12
  00087	89 45 e4	 mov	 DWORD PTR _sckTemp$4[ebp], eax

; 90   : 				if (sckTemp == INVALID_SOCKET)

  0008a	83 7d e4 ff	 cmp	 DWORD PTR _sckTemp$4[ebp], -1
  0008e	75 07		 jne	 SHORT $LN8@ParentWndP

; 91   : 					return 0;

  00090	33 c0		 xor	 eax, eax
  00092	e9 a9 00 00 00	 jmp	 $LN1@ParentWndP
$LN8@ParentWndP:

; 92   : 
; 93   : #ifdef ADD_SERVER_ALERT_USING_WHATSUP_01_20050628
; 94   : 				if( g_ServerAlertManager.StopWhatsUp() )
; 95   : 				{
; 96   : 					LogAddC( 2, "[WhatsUp Func.] Stopped WhatsUp Function by Alert Manager!!");
; 97   : 					closesocket(sckTemp);
; 98   : 					return 0;
; 99   : 				}
; 100  : #endif
; 101  : 
; 102  : 				INT iRetVal = WSAAsyncSelect(sckTemp, hWnd, WM_ASYNCDUMMYSOCK, FD_READ | FD_CLOSE);

  00097	6a 21		 push	 33			; 00000021H
  00099	68 0f 04 00 00	 push	 1039			; 0000040fH
  0009e	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d e4	 mov	 ecx, DWORD PTR _sckTemp$4[ebp]
  000a5	51		 push	 ecx
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAAsyncSelect@16
  000ac	89 45 e0	 mov	 DWORD PTR _iRetVal$3[ebp], eax

; 103  : 				if (iRetVal == SOCKET_ERROR) {

  000af	83 7d e0 ff	 cmp	 DWORD PTR _iRetVal$3[ebp], -1
  000b3	75 0a		 jne	 SHORT $LN9@ParentWndP

; 104  : 					closesocket(sckTemp);

  000b5	8b 45 e4	 mov	 eax, DWORD PTR _sckTemp$4[ebp]
  000b8	50		 push	 eax
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
$LN9@ParentWndP:

; 105  : 				}
; 106  : 			}
; 107  : 			return 0;

  000bf	33 c0		 xor	 eax, eax
  000c1	eb 7d		 jmp	 SHORT $LN1@ParentWndP
$LN10@ParentWndP:

; 108  : 		case FD_READ :
; 109  : 			{
; 110  : 				CHAR cBUFFER[256];
; 111  : 				INT iRecvBytes = recv (LOWORD(wParam), cBUFFER, sizeof(cBUFFER), 0);

  000c3	6a 00		 push	 0
  000c5	68 00 01 00 00	 push	 256			; 00000100H
  000ca	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _cBUFFER$2[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  000d4	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  000da	0f b7 d1	 movzx	 edx, cx
  000dd	52		 push	 edx
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__recv@16
  000e4	89 85 dc fe ff
	ff		 mov	 DWORD PTR _iRecvBytes$1[ebp], eax

; 112  : 				if (iRecvBytes <= 0) {

  000ea	83 bd dc fe ff
	ff 00		 cmp	 DWORD PTR _iRecvBytes$1[ebp], 0
  000f1	7f 12		 jg	 SHORT $LN11@ParentWndP

; 113  : 					closesocket(LOWORD(wParam));

  000f3	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  000f6	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  000fb	0f b7 c8	 movzx	 ecx, ax
  000fe	51		 push	 ecx
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
$LN11@ParentWndP:

; 114  : 				}
; 115  : 			}
; 116  : 			return 0;

  00105	33 c0		 xor	 eax, eax
  00107	eb 37		 jmp	 SHORT $LN1@ParentWndP
$LN12@ParentWndP:

; 117  : 		case FD_CLOSE :
; 118  : 			closesocket(LOWORD(wParam));

  00109	8b 45 10	 mov	 eax, DWORD PTR _wParam$[ebp]
  0010c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00111	0f b7 c8	 movzx	 ecx, ax
  00114	51		 push	 ecx
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4

; 119  : 			return 0;

  0011b	33 c0		 xor	 eax, eax
  0011d	eb 21		 jmp	 SHORT $LN1@ParentWndP
$LN4@ParentWndP:

; 120  : 		}
; 121  : 		return 0;

  0011f	33 c0		 xor	 eax, eax
  00121	eb 1d		 jmp	 SHORT $LN1@ParentWndP
$LN2@ParentWndP:

; 122  : 	}
; 123  : 
; 124  : 	return CallWindowProc(CWhatsUpDummyServer::m_lpOldProc, hWnd, iMessage, wParam, lParam);

  00123	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00126	50		 push	 eax
  00127	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  0012a	51		 push	 ecx
  0012b	8b 55 0c	 mov	 edx, DWORD PTR _iMessage$[ebp]
  0012e	52		 push	 edx
  0012f	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00132	50		 push	 eax
  00133	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA ; CWhatsUpDummyServer::m_lpOldProc
  00139	51		 push	 ecx
  0013a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CallWindowProcA@20
$LN1@ParentWndP:

; 125  : }

  00140	5f		 pop	 edi
  00141	5e		 pop	 esi
  00142	5b		 pop	 ebx
  00143	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00146	33 cd		 xor	 ecx, ebp
  00148	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c3		 ret	 0
?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z ENDP ; CWhatsUpDummyServer::ParentWndProc
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\CWhatsUpDummyServer.cpp
;	COMDAT ?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z
_TEXT	SEGMENT
_iRetVal$ = -28						; size = 4
_sockinfo$ = -24					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_wPort$ = 12						; size = 2
?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z PROC	; CWhatsUpDummyServer::Start, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 	if (hWnd == NULL)

  00016	83 7d 08 00	 cmp	 DWORD PTR _hWnd$[ebp], 0
  0001a	75 07		 jne	 SHORT $LN2@Start

; 35   : 		return FALSE;

  0001c	33 c0		 xor	 eax, eax
  0001e	e9 22 01 00 00	 jmp	 $LN1@Start
$LN2@Start:

; 36   : 
; 37   : 	if (!IsWindow (hWnd))

  00023	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00026	50		 push	 eax
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  0002d	85 c0		 test	 eax, eax
  0002f	75 07		 jne	 SHORT $LN3@Start

; 38   : 		return FALSE;

  00031	33 c0		 xor	 eax, eax
  00033	e9 0d 01 00 00	 jmp	 $LN1@Start
$LN3@Start:

; 39   : 
; 40   : 	m_hParentWnd = hWnd;

  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  0003e	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 41   : 
; 42   : 	m_sckDUMMY = socket (AF_INET, SOCK_STREAM, 0);

  00041	6a 00		 push	 0
  00043	6a 01		 push	 1
  00045	6a 02		 push	 2
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__socket@12
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	89 01		 mov	 DWORD PTR [ecx], eax

; 43   : 	if (m_sckDUMMY == INVALID_SOCKET)

  00052	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00055	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00058	75 07		 jne	 SHORT $LN4@Start

; 44   : 		return FALSE;

  0005a	33 c0		 xor	 eax, eax
  0005c	e9 e4 00 00 00	 jmp	 $LN1@Start
$LN4@Start:

; 45   : 
; 46   : 	SOCKADDR_IN	sockinfo;
; 47   : 	sockinfo.sin_family = AF_INET;

  00061	b8 02 00 00 00	 mov	 eax, 2
  00066	66 89 45 e8	 mov	 WORD PTR _sockinfo$[ebp], ax

; 48   : 	sockinfo.sin_addr.s_addr = INADDR_ANY;

  0006a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _sockinfo$[ebp+4], 0

; 49   : 	sockinfo.sin_port = htons(wPort);

  00071	0f b7 45 0c	 movzx	 eax, WORD PTR _wPort$[ebp]
  00075	50		 push	 eax
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__htons@4
  0007c	66 89 45 ea	 mov	 WORD PTR _sockinfo$[ebp+2], ax

; 50   : 
; 51   : 	INT iRetVal = 0;

  00080	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _iRetVal$[ebp], 0

; 52   : 	iRetVal = bind (m_sckDUMMY, (LPSOCKADDR)&sockinfo, sizeof(sockinfo));

  00087	6a 10		 push	 16			; 00000010H
  00089	8d 45 e8	 lea	 eax, DWORD PTR _sockinfo$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 11		 mov	 edx, DWORD PTR [ecx]
  00092	52		 push	 edx
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__bind@12
  00099	89 45 e4	 mov	 DWORD PTR _iRetVal$[ebp], eax

; 53   : 	if (iRetVal == SOCKET_ERROR) {

  0009c	83 7d e4 ff	 cmp	 DWORD PTR _iRetVal$[ebp], -1
  000a0	75 1c		 jne	 SHORT $LN5@Start

; 54   : 		closesocket(m_sckDUMMY);

  000a2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a7	51		 push	 ecx
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4

; 55   : 		m_sckDUMMY = INVALID_SOCKET;

  000ae	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b1	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 56   : 		return FALSE;

  000b7	33 c0		 xor	 eax, eax
  000b9	e9 87 00 00 00	 jmp	 $LN1@Start
$LN5@Start:

; 57   : 	}
; 58   : 
; 59   : 	iRetVal = listen (m_sckDUMMY, SOMAXCONN);

  000be	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  000c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c8	51		 push	 ecx
  000c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__listen@8
  000cf	89 45 e4	 mov	 DWORD PTR _iRetVal$[ebp], eax

; 60   : 	if (iRetVal == SOCKET_ERROR) {

  000d2	83 7d e4 ff	 cmp	 DWORD PTR _iRetVal$[ebp], -1
  000d6	75 19		 jne	 SHORT $LN6@Start

; 61   : 		closesocket(m_sckDUMMY);

  000d8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	51		 push	 ecx
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4

; 62   : 		m_sckDUMMY = INVALID_SOCKET;

  000e4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 63   : 		return FALSE;

  000ed	33 c0		 xor	 eax, eax
  000ef	eb 54		 jmp	 SHORT $LN1@Start
$LN6@Start:

; 64   : 	}
; 65   : 
; 66   : 	iRetVal = WSAAsyncSelect(m_sckDUMMY, hWnd, WM_ASYNCDUMMYSOCK, FD_ACCEPT);

  000f1	6a 08		 push	 8
  000f3	68 0f 04 00 00	 push	 1039			; 0000040fH
  000f8	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  000fb	50		 push	 eax
  000fc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ff	8b 11		 mov	 edx, DWORD PTR [ecx]
  00101	52		 push	 edx
  00102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAAsyncSelect@16
  00108	89 45 e4	 mov	 DWORD PTR _iRetVal$[ebp], eax

; 67   : 	if (iRetVal == SOCKET_ERROR) {

  0010b	83 7d e4 ff	 cmp	 DWORD PTR _iRetVal$[ebp], -1
  0010f	75 19		 jne	 SHORT $LN7@Start

; 68   : 		closesocket(m_sckDUMMY);

  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 08		 mov	 ecx, DWORD PTR [eax]
  00116	51		 push	 ecx
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4

; 69   : 		m_sckDUMMY = INVALID_SOCKET;

  0011d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00120	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 70   : 		return FALSE;

  00126	33 c0		 xor	 eax, eax
  00128	eb 1b		 jmp	 SHORT $LN1@Start
$LN7@Start:

; 71   : 	}
; 72   : 
; 73   : 	CWhatsUpDummyServer::m_lpOldProc = (WNDPROC) SetWindowLong (hWnd, GWL_WNDPROC, (LONG) CWhatsUpDummyServer::ParentWndProc);

  0012a	68 00 00 00 00	 push	 OFFSET ?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z ; CWhatsUpDummyServer::ParentWndProc
  0012f	6a fc		 push	 -4			; fffffffcH
  00131	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  00134	50		 push	 eax
  00135	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12
  0013b	a3 00 00 00 00	 mov	 DWORD PTR ?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA, eax ; CWhatsUpDummyServer::m_lpOldProc

; 74   : 
; 75   : 	return TRUE;

  00140	b8 01 00 00 00	 mov	 eax, 1
$LN1@Start:

; 76   : }

  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
  00148	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014b	33 cd		 xor	 ecx, ebp
  0014d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c2 08 00	 ret	 8
?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z ENDP	; CWhatsUpDummyServer::Start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\CWhatsUpDummyServer.cpp
;	COMDAT ??1CWhatsUpDummyServer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWhatsUpDummyServer@@QAE@XZ PROC			; CWhatsUpDummyServer::~CWhatsUpDummyServer, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 	if (m_sckDUMMY != INVALID_SOCKET)

  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 38 ff	 cmp	 DWORD PTR [eax], -1
  00012	74 0c		 je	 SHORT $LN3@CWhatsUpDu

; 23   : 		closesocket(m_sckDUMMY);

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	51		 push	 ecx
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
$LN3@CWhatsUpDu:

; 24   : 
; 25   : 	//WSACleanup();
; 26   : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??1CWhatsUpDummyServer@@QAE@XZ ENDP			; CWhatsUpDummyServer::~CWhatsUpDummyServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\CWhatsUpDummyServer.cpp
;	COMDAT ??0CWhatsUpDummyServer@@QAE@XZ
_TEXT	SEGMENT
_wsaVer$ = -408						; size = 400
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
??0CWhatsUpDummyServer@@QAE@XZ PROC			; CWhatsUpDummyServer::CWhatsUpDummyServer, COMDAT
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 01 00
	00		 sub	 esp, 472		; 000001d8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 11   : 	m_sckDUMMY = INVALID_SOCKET;

  00019	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 12   : 	m_hParentWnd = NULL;

  00022	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00025	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 13   : 	m_lpOldProc = NULL;

  0002c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA, 0 ; CWhatsUpDummyServer::m_lpOldProc

; 14   : 
; 15   : 	WSADATA wsaVer;
; 16   : 	WSAStartup(MAKEWORD(2,2), &wsaVer);

  00036	8d 85 68 fe ff
	ff		 lea	 eax, DWORD PTR _wsaVer$[ebp]
  0003c	50		 push	 eax
  0003d	68 02 02 00 00	 push	 514			; 00000202H
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAStartup@8

; 17   : }

  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00051	33 cd		 xor	 ecx, ebp
  00053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??0CWhatsUpDummyServer@@QAE@XZ ENDP			; CWhatsUpDummyServer::CWhatsUpDummyServer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\CWhatsUpDummyServer.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Mu Online\Mu-GS-Webzen-MC-10093\GameServer\CWhatsUpDummyServer.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
